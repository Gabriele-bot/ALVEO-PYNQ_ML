

================================================================
== Vivado HLS Report for 'myproject_axi'
================================================================
* Date:           Wed Feb 16 12:08:16 2022

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        myproject_prj
* Solution:       solution1
* Product family: virtexuplus
* Target device:  xcu50-fsvh2104-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  | 2.00 ns | 1.739 ns |   0.25 ns  |
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      880|      882| 1.760 us | 1.764 us |  880|  882|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |      789|      789|         7|          1|          1|   784|    yes   |
        |- Loop 2  |       14|       14|         6|          1|          1|    10|    yes   |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 7
  * Pipeline-1: initiation interval (II) = 1, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 17
* Pipeline : 2
  Pipeline-0 : II = 1, D = 7, States = { 2 3 4 5 6 7 8 }
  Pipeline-1 : II = 1, D = 6, States = { 11 12 13 14 15 16 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 9 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 2 
9 --> 10 
10 --> 11 
11 --> 17 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 11 
17 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.60>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float* %in_data), !map !241"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %in_last_V), !map !247"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float* %out_data), !map !251"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %out_last_V), !map !257"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([14 x i8]* @myproject_axi_str) nounwind"   --->   Operation 22 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%in_local_V = alloca i6272, align 8" [firmware/myproject_axi.cpp:16]   --->   Operation 23 'alloca' 'in_local_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%out_local_0 = alloca i14, align 2"   --->   Operation 24 'alloca' 'out_local_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%out_local_1 = alloca i14, align 2"   --->   Operation 25 'alloca' 'out_local_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%out_local_2 = alloca i14, align 2"   --->   Operation 26 'alloca' 'out_local_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%out_local_3 = alloca i14, align 2"   --->   Operation 27 'alloca' 'out_local_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%out_local_4 = alloca i14, align 2"   --->   Operation 28 'alloca' 'out_local_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%out_local_5 = alloca i14, align 2"   --->   Operation 29 'alloca' 'out_local_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%out_local_6 = alloca i14, align 2"   --->   Operation 30 'alloca' 'out_local_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%out_local_7 = alloca i14, align 2"   --->   Operation 31 'alloca' 'out_local_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%out_local_8 = alloca i14, align 2"   --->   Operation 32 'alloca' 'out_local_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%out_local_9 = alloca i14, align 2"   --->   Operation 33 'alloca' 'out_local_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %in_data, i1* %in_last_V, [5 x i8]* @p_str4, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2)" [firmware/myproject_axi.cpp:8]   --->   Operation 34 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %out_data, i1* %out_last_V, [5 x i8]* @p_str4, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2)" [firmware/myproject_axi.cpp:9]   --->   Operation 35 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [firmware/myproject_axi.cpp:10]   --->   Operation 36 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.60ns)   --->   "br label %.preheader" [firmware/myproject_axi.cpp:19]   --->   Operation 37 'br' <Predicate = true> <Delay = 0.60>

State 2 <SV = 1> <Delay = 1.54>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%is_last_0 = phi i1 [ %is_last, %hls_label_0 ], [ false, %arrayctor.loop1.preheader ]"   --->   Operation 38 'phi' 'is_last_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%i_0 = phi i10 [ %i, %hls_label_0 ], [ 0, %arrayctor.loop1.preheader ]"   --->   Operation 39 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.60ns)   --->   "%icmp_ln19 = icmp eq i10 %i_0, -240" [firmware/myproject_axi.cpp:19]   --->   Operation 40 'icmp' 'icmp_ln19' <Predicate = true> <Delay = 0.60> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 784, i64 784, i64 784)"   --->   Operation 41 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.72ns)   --->   "%i = add i10 %i_0, 1" [firmware/myproject_axi.cpp:19]   --->   Operation 42 'add' 'i' <Predicate = true> <Delay = 0.72> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "br i1 %icmp_ln19, label %0, label %hls_label_0" [firmware/myproject_axi.cpp:19]   --->   Operation 43 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%empty_29 = call { float, i1 } @_ssdm_op_Read.axis.volatile.floatP.i1P(float* %in_data, i1* %in_last_V)" [firmware/myproject_axi.cpp:4]   --->   Operation 44 'read' 'empty_29' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%in_data_tmp = extractvalue { float, i1 } %empty_29, 0" [firmware/myproject_axi.cpp:4]   --->   Operation 45 'extractvalue' 'in_data_tmp' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node is_last)   --->   "%in_last_V_tmp = extractvalue { float, i1 } %empty_29, 1" [firmware/myproject_axi.cpp:4]   --->   Operation 46 'extractvalue' 'in_last_V_tmp' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_2 : Operation 47 [2/2] (1.54ns)   --->   "%d_assign = fpext float %in_data_tmp to double" [firmware/myproject_axi.cpp:21]   --->   Operation 47 'fpext' 'd_assign' <Predicate = (!icmp_ln19)> <Delay = 1.54> <Core = "Float2Double">   --->   Core 114 'Float2Double' <Latency = 1> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.12ns) (out node of the LUT)   --->   "%is_last = or i1 %in_last_V_tmp, %is_last_0" [firmware/myproject_axi.cpp:22]   --->   Operation 48 'or' 'is_last' <Predicate = (!icmp_ln19)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 1.54>
ST_3 : Operation 49 [1/2] (1.54ns)   --->   "%d_assign = fpext float %in_data_tmp to double" [firmware/myproject_axi.cpp:21]   --->   Operation 49 'fpext' 'd_assign' <Predicate = (!icmp_ln19)> <Delay = 1.54> <Core = "Float2Double">   --->   Core 114 'Float2Double' <Latency = 1> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%ireg_V = bitcast double %d_assign to i64" [firmware/myproject_axi.cpp:21]   --->   Operation 50 'bitcast' 'ireg_V' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%trunc_ln556 = trunc i64 %ireg_V to i63" [firmware/myproject_axi.cpp:21]   --->   Operation 51 'trunc' 'trunc_ln556' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%p_Result_17 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V, i32 63)" [firmware/myproject_axi.cpp:21]   --->   Operation 52 'bitselect' 'p_Result_17' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%exp_tmp_V = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V, i32 52, i32 62)" [firmware/myproject_axi.cpp:21]   --->   Operation 53 'partselect' 'exp_tmp_V' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%trunc_ln565 = trunc i64 %ireg_V to i52" [firmware/myproject_axi.cpp:21]   --->   Operation 54 'trunc' 'trunc_ln565' <Predicate = (!icmp_ln19)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 1.49>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln461 = zext i11 %exp_tmp_V to i12" [firmware/myproject_axi.cpp:21]   --->   Operation 55 'zext' 'zext_ln461' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (1.05ns)   --->   "%icmp_ln571 = icmp eq i63 %trunc_ln556, 0" [firmware/myproject_axi.cpp:21]   --->   Operation 56 'icmp' 'icmp_ln571' <Predicate = (!icmp_ln19)> <Delay = 1.05> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (0.74ns)   --->   "%F2 = sub i12 1075, %zext_ln461" [firmware/myproject_axi.cpp:21]   --->   Operation 57 'sub' 'F2' <Predicate = (!icmp_ln19)> <Delay = 0.74> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 58 [1/1] (0.62ns)   --->   "%icmp_ln581 = icmp sgt i12 %F2, 5" [firmware/myproject_axi.cpp:21]   --->   Operation 58 'icmp' 'icmp_ln581' <Predicate = (!icmp_ln19)> <Delay = 0.62> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 59 [1/1] (0.74ns)   --->   "%add_ln581 = add i12 -5, %F2" [firmware/myproject_axi.cpp:21]   --->   Operation 59 'add' 'add_ln581' <Predicate = (!icmp_ln19)> <Delay = 0.74> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 60 [1/1] (0.74ns)   --->   "%sub_ln581 = sub i12 5, %F2" [firmware/myproject_axi.cpp:21]   --->   Operation 60 'sub' 'sub_ln581' <Predicate = (!icmp_ln19)> <Delay = 0.74> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 61 [1/1] (0.62ns)   --->   "%icmp_ln582 = icmp eq i12 %F2, 5" [firmware/myproject_axi.cpp:21]   --->   Operation 61 'icmp' 'icmp_ln582' <Predicate = (!icmp_ln19)> <Delay = 0.62> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 1.56>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_s = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %trunc_ln565)" [firmware/myproject_axi.cpp:21]   --->   Operation 62 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%p_Result_18 = zext i53 %tmp_s to i54" [firmware/myproject_axi.cpp:21]   --->   Operation 63 'zext' 'p_Result_18' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.99ns)   --->   "%man_V_1 = sub i54 0, %p_Result_18" [firmware/myproject_axi.cpp:21]   --->   Operation 64 'sub' 'man_V_1' <Predicate = (!icmp_ln19 & p_Result_17)> <Delay = 0.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 65 [1/1] (0.26ns)   --->   "%man_V_2 = select i1 %p_Result_17, i54 %man_V_1, i54 %p_Result_18" [firmware/myproject_axi.cpp:21]   --->   Operation 65 'select' 'man_V_2' <Predicate = (!icmp_ln19)> <Delay = 0.26> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 66 [1/1] (0.29ns)   --->   "%sh_amt = select i1 %icmp_ln581, i12 %add_ln581, i12 %sub_ln581" [firmware/myproject_axi.cpp:21]   --->   Operation 66 'select' 'sh_amt' <Predicate = (!icmp_ln19)> <Delay = 0.29> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 67 [1/1] (0.00ns)   --->   "%trunc_ln583 = trunc i54 %man_V_2 to i8" [firmware/myproject_axi.cpp:21]   --->   Operation 67 'trunc' 'trunc_ln583' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_5 : Operation 68 [1/1] (0.62ns)   --->   "%icmp_ln585 = icmp ult i12 %sh_amt, 54" [firmware/myproject_axi.cpp:21]   --->   Operation 68 'icmp' 'icmp_ln585' <Predicate = (!icmp_ln19)> <Delay = 0.62> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_2441 = call i9 @_ssdm_op_PartSelect.i9.i12.i32.i32(i12 %sh_amt, i32 3, i32 11)" [firmware/myproject_axi.cpp:21]   --->   Operation 69 'partselect' 'tmp_2441' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_5 : Operation 70 [1/1] (0.59ns)   --->   "%icmp_ln603 = icmp eq i9 %tmp_2441, 0" [firmware/myproject_axi.cpp:21]   --->   Operation 70 'icmp' 'icmp_ln603' <Predicate = (!icmp_ln19)> <Delay = 0.59> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_1)   --->   "%bitcast_ln696 = bitcast float %in_data_tmp to i32" [firmware/myproject_axi.cpp:21]   --->   Operation 71 'bitcast' 'bitcast_ln696' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_5 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_1)   --->   "%tmp_2442 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %bitcast_ln696, i32 31)" [firmware/myproject_axi.cpp:21]   --->   Operation 72 'bitselect' 'tmp_2442' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_5 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_1)   --->   "%select_ln588 = select i1 %tmp_2442, i8 -1, i8 0" [firmware/myproject_axi.cpp:21]   --->   Operation 73 'select' 'select_ln588' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_2)   --->   "%xor_ln571 = xor i1 %icmp_ln571, true" [firmware/myproject_axi.cpp:21]   --->   Operation 74 'xor' 'xor_ln571' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_2)   --->   "%and_ln582 = and i1 %icmp_ln582, %xor_ln571" [firmware/myproject_axi.cpp:21]   --->   Operation 75 'and' 'and_ln582' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 76 [1/1] (0.12ns)   --->   "%or_ln582 = or i1 %icmp_ln571, %icmp_ln582" [firmware/myproject_axi.cpp:21]   --->   Operation 76 'or' 'or_ln582' <Predicate = (!icmp_ln19)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node and_ln581)   --->   "%xor_ln582 = xor i1 %or_ln582, true" [firmware/myproject_axi.cpp:21]   --->   Operation 77 'xor' 'xor_ln582' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 78 [1/1] (0.12ns) (out node of the LUT)   --->   "%and_ln581 = and i1 %icmp_ln581, %xor_ln582" [firmware/myproject_axi.cpp:21]   --->   Operation 78 'and' 'and_ln581' <Predicate = (!icmp_ln19)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node and_ln585)   --->   "%xor_ln585 = xor i1 %icmp_ln585, true" [firmware/myproject_axi.cpp:21]   --->   Operation 79 'xor' 'xor_ln585' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 80 [1/1] (0.12ns) (out node of the LUT)   --->   "%and_ln585 = and i1 %and_ln581, %xor_ln585" [firmware/myproject_axi.cpp:21]   --->   Operation 80 'and' 'and_ln585' <Predicate = (!icmp_ln19)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node or_ln603)   --->   "%and_ln585_1 = and i1 %and_ln581, %icmp_ln585" [firmware/myproject_axi.cpp:21]   --->   Operation 81 'and' 'and_ln585_1' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node and_ln603)   --->   "%or_ln581 = or i1 %or_ln582, %icmp_ln581" [firmware/myproject_axi.cpp:21]   --->   Operation 82 'or' 'or_ln581' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node and_ln603)   --->   "%xor_ln581 = xor i1 %or_ln581, true" [firmware/myproject_axi.cpp:21]   --->   Operation 83 'xor' 'xor_ln581' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 84 [1/1] (0.12ns) (out node of the LUT)   --->   "%and_ln603 = and i1 %icmp_ln603, %xor_ln581" [firmware/myproject_axi.cpp:21]   --->   Operation 84 'and' 'and_ln603' <Predicate = (!icmp_ln19)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 85 [1/1] (0.12ns) (out node of the LUT)   --->   "%or_ln603 = or i1 %and_ln603, %and_ln585_1" [firmware/myproject_axi.cpp:21]   --->   Operation 85 'or' 'or_ln603' <Predicate = (!icmp_ln19)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 86 [1/1] (0.30ns) (out node of the LUT)   --->   "%select_ln603_1 = select i1 %and_ln585, i8 %select_ln588, i8 %trunc_ln583" [firmware/myproject_axi.cpp:21]   --->   Operation 86 'select' 'select_ln603_1' <Predicate = (!icmp_ln19)> <Delay = 0.30> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_2)   --->   "%or_ln603_1 = or i1 %and_ln585, %and_ln582" [firmware/myproject_axi.cpp:21]   --->   Operation 87 'or' 'or_ln603_1' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 88 [1/1] (0.12ns) (out node of the LUT)   --->   "%or_ln603_2 = or i1 %or_ln603, %or_ln603_1" [firmware/myproject_axi.cpp:21]   --->   Operation 88 'or' 'or_ln603_2' <Predicate = (!icmp_ln19)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 1.42>
ST_6 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node select_ln603)   --->   "%trunc_ln581 = trunc i12 %sh_amt to i8" [firmware/myproject_axi.cpp:21]   --->   Operation 89 'trunc' 'trunc_ln581' <Predicate = (!icmp_ln19 & and_ln603 & or_ln603 & or_ln603_2)> <Delay = 0.00>
ST_6 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node select_ln603)   --->   "%sext_ln581 = sext i12 %sh_amt to i32" [firmware/myproject_axi.cpp:21]   --->   Operation 90 'sext' 'sext_ln581' <Predicate = (!icmp_ln19 & !and_ln603 & or_ln603 & or_ln603_2)> <Delay = 0.00>
ST_6 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node select_ln603)   --->   "%zext_ln586 = zext i32 %sext_ln581 to i54" [firmware/myproject_axi.cpp:21]   --->   Operation 91 'zext' 'zext_ln586' <Predicate = (!icmp_ln19 & !and_ln603 & or_ln603 & or_ln603_2)> <Delay = 0.00>
ST_6 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node select_ln603)   --->   "%ashr_ln586 = ashr i54 %man_V_2, %zext_ln586" [firmware/myproject_axi.cpp:21]   --->   Operation 92 'ashr' 'ashr_ln586' <Predicate = (!icmp_ln19 & !and_ln603 & or_ln603 & or_ln603_2)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node select_ln603)   --->   "%trunc_ln586 = trunc i54 %ashr_ln586 to i8" [firmware/myproject_axi.cpp:21]   --->   Operation 93 'trunc' 'trunc_ln586' <Predicate = (!icmp_ln19 & !and_ln603 & or_ln603 & or_ln603_2)> <Delay = 0.00>
ST_6 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node select_ln603)   --->   "%shl_ln604 = shl i8 %trunc_ln583, %trunc_ln581" [firmware/myproject_axi.cpp:21]   --->   Operation 94 'shl' 'shl_ln604' <Predicate = (!icmp_ln19 & and_ln603 & or_ln603 & or_ln603_2)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 95 [1/1] (1.12ns) (out node of the LUT)   --->   "%select_ln603 = select i1 %and_ln603, i8 %shl_ln604, i8 %trunc_ln586" [firmware/myproject_axi.cpp:21]   --->   Operation 95 'select' 'select_ln603' <Predicate = (!icmp_ln19 & or_ln603 & or_ln603_2)> <Delay = 1.12> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_3)   --->   "%select_ln603_2 = select i1 %or_ln603, i8 %select_ln603, i8 %select_ln603_1" [firmware/myproject_axi.cpp:21]   --->   Operation 96 'select' 'select_ln603_2' <Predicate = (!icmp_ln19 & or_ln603_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 97 [1/1] (0.30ns) (out node of the LUT)   --->   "%select_ln603_3 = select i1 %or_ln603_2, i8 %select_ln603_2, i8 0" [firmware/myproject_axi.cpp:21]   --->   Operation 97 'select' 'select_ln603_3' <Predicate = (!icmp_ln19)> <Delay = 0.30> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 98 [1/1] (0.00ns)   --->   "%shl_ln = call i13 @_ssdm_op_BitConcatenate.i13.i10.i3(i10 %i_0, i3 0)" [firmware/myproject_axi.cpp:21]   --->   Operation 98 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_6 : Operation 99 [1/1] (0.00ns)   --->   "%empty_30 = or i13 %shl_ln, 7" [firmware/myproject_axi.cpp:21]   --->   Operation 99 'or' 'empty_30' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_6 : Operation 100 [1/1] (0.64ns)   --->   "%icmp_ln356 = icmp ugt i13 %shl_ln, %empty_30" [firmware/myproject_axi.cpp:21]   --->   Operation 100 'icmp' 'icmp_ln356' <Predicate = (!icmp_ln19)> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 1.54>
ST_7 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node shl_ln356)   --->   "%zext_ln356 = zext i8 %select_ln603_3 to i6272" [firmware/myproject_axi.cpp:21]   --->   Operation 101 'zext' 'zext_ln356' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_7 : Operation 102 [1/1] (0.75ns)   --->   "%sub_ln356 = sub i13 -1921, %shl_ln" [firmware/myproject_axi.cpp:21]   --->   Operation 102 'sub' 'sub_ln356' <Predicate = (!icmp_ln19 & icmp_ln356)> <Delay = 0.75> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node sub_ln356_1)   --->   "%select_ln356 = select i1 %icmp_ln356, i13 %shl_ln, i13 %empty_30" [firmware/myproject_axi.cpp:21]   --->   Operation 103 'select' 'select_ln356' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node and_ln356)   --->   "%select_ln356_1 = select i1 %icmp_ln356, i13 %empty_30, i13 %shl_ln" [firmware/myproject_axi.cpp:21]   --->   Operation 104 'select' 'select_ln356_1' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node shl_ln356)   --->   "%select_ln356_2 = select i1 %icmp_ln356, i13 %sub_ln356, i13 %shl_ln" [firmware/myproject_axi.cpp:21]   --->   Operation 105 'select' 'select_ln356_2' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 106 [1/1] (0.75ns) (out node of the LUT)   --->   "%sub_ln356_1 = sub i13 -1921, %select_ln356" [firmware/myproject_axi.cpp:21]   --->   Operation 106 'sub' 'sub_ln356_1' <Predicate = (!icmp_ln19)> <Delay = 0.75> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node shl_ln356)   --->   "%zext_ln356_1 = zext i13 %select_ln356_2 to i6272" [firmware/myproject_axi.cpp:21]   --->   Operation 107 'zext' 'zext_ln356_1' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_7 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node and_ln356)   --->   "%zext_ln356_2 = zext i13 %select_ln356_1 to i6272" [firmware/myproject_axi.cpp:21]   --->   Operation 108 'zext' 'zext_ln356_2' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_7 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node and_ln356)   --->   "%zext_ln356_3 = zext i13 %sub_ln356_1 to i6272" [firmware/myproject_axi.cpp:21]   --->   Operation 109 'zext' 'zext_ln356_3' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_7 : Operation 110 [1/1] (0.79ns) (out node of the LUT)   --->   "%shl_ln356 = shl i6272 %zext_ln356, %zext_ln356_1" [firmware/myproject_axi.cpp:21]   --->   Operation 110 'shl' 'shl_ln356' <Predicate = (!icmp_ln19)> <Delay = 0.79> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node and_ln356)   --->   "%shl_ln356_1 = shl i6272 -1, %zext_ln356_2" [firmware/myproject_axi.cpp:21]   --->   Operation 111 'shl' 'shl_ln356_1' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node and_ln356)   --->   "%lshr_ln356 = lshr i6272 -1, %zext_ln356_3" [firmware/myproject_axi.cpp:21]   --->   Operation 112 'lshr' 'lshr_ln356' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 113 [1/1] (0.79ns) (out node of the LUT)   --->   "%and_ln356 = and i6272 %shl_ln356_1, %lshr_ln356" [firmware/myproject_axi.cpp:21]   --->   Operation 113 'and' 'and_ln356' <Predicate = (!icmp_ln19)> <Delay = 0.79> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 1.68>
ST_8 : Operation 114 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str45)" [firmware/myproject_axi.cpp:19]   --->   Operation 114 'specregionbegin' 'tmp' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_8 : Operation 115 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [firmware/myproject_axi.cpp:20]   --->   Operation 115 'specpipeline' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_8 : Operation 116 [1/1] (0.00ns)   --->   "%in_local_V_load = load i6272* %in_local_V, align 8" [firmware/myproject_axi.cpp:21]   --->   Operation 116 'load' 'in_local_V_load' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_8 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%tmp_2443 = call i6272 @llvm.part.select.i6272(i6272 %shl_ln356, i32 6271, i32 0)" [firmware/myproject_axi.cpp:21]   --->   Operation 117 'partselect' 'tmp_2443' <Predicate = (!icmp_ln19 & icmp_ln356)> <Delay = 0.00>
ST_8 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%select_ln356_3 = select i1 %icmp_ln356, i6272 %tmp_2443, i6272 %shl_ln356" [firmware/myproject_axi.cpp:21]   --->   Operation 118 'select' 'select_ln356_3' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%xor_ln356 = xor i6272 %and_ln356, -1" [firmware/myproject_axi.cpp:21]   --->   Operation 119 'xor' 'xor_ln356' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%and_ln356_1 = and i6272 %in_local_V_load, %xor_ln356" [firmware/myproject_axi.cpp:21]   --->   Operation 120 'and' 'and_ln356_1' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%and_ln356_2 = and i6272 %select_ln356_3, %and_ln356" [firmware/myproject_axi.cpp:21]   --->   Operation 121 'and' 'and_ln356_2' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 122 [1/1] (1.68ns) (out node of the LUT)   --->   "%in_local_V_1 = or i6272 %and_ln356_1, %and_ln356_2" [firmware/myproject_axi.cpp:21]   --->   Operation 122 'or' 'in_local_V_1' <Predicate = (!icmp_ln19)> <Delay = 1.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 123 [1/1] (0.00ns)   --->   "store i6272 %in_local_V_1, i6272* %in_local_V, align 8" [firmware/myproject_axi.cpp:21]   --->   Operation 123 'store' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_8 : Operation 124 [1/1] (0.00ns)   --->   "%empty_31 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str45, i32 %tmp)" [firmware/myproject_axi.cpp:23]   --->   Operation 124 'specregionend' 'empty_31' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_8 : Operation 125 [1/1] (0.00ns)   --->   "br label %.preheader" [firmware/myproject_axi.cpp:19]   --->   Operation 125 'br' <Predicate = (!icmp_ln19)> <Delay = 0.00>

State 9 <SV = 2> <Delay = 0.00>
ST_9 : Operation 126 [2/2] (0.00ns)   --->   "call fastcc void @myproject(i6272* %in_local_V, i14* %out_local_0, i14* %out_local_1, i14* %out_local_2, i14* %out_local_3, i14* %out_local_4, i14* %out_local_5, i14* %out_local_6, i14* %out_local_7, i14* %out_local_8, i14* %out_local_9)"   --->   Operation 126 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 3> <Delay = 0.60>
ST_10 : Operation 127 [1/2] (0.00ns)   --->   "call fastcc void @myproject(i6272* %in_local_V, i14* %out_local_0, i14* %out_local_1, i14* %out_local_2, i14* %out_local_3, i14* %out_local_4, i14* %out_local_5, i14* %out_local_6, i14* %out_local_7, i14* %out_local_8, i14* %out_local_9)"   --->   Operation 127 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 128 [1/1] (0.60ns)   --->   "br label %1" [firmware/myproject_axi.cpp:27]   --->   Operation 128 'br' <Predicate = true> <Delay = 0.60>

State 11 <SV = 4> <Delay = 1.72>
ST_11 : Operation 129 [1/1] (0.00ns)   --->   "%i2_0 = phi i4 [ 0, %0 ], [ %i_1, %hls_label_1 ]"   --->   Operation 129 'phi' 'i2_0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 130 [1/1] (0.65ns)   --->   "%icmp_ln27 = icmp eq i4 %i2_0, -6" [firmware/myproject_axi.cpp:27]   --->   Operation 130 'icmp' 'icmp_ln27' <Predicate = true> <Delay = 0.65> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 131 [1/1] (0.00ns)   --->   "%empty_32 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 131 'speclooptripcount' 'empty_32' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 132 [1/1] (0.70ns)   --->   "%i_1 = add i4 %i2_0, 1" [firmware/myproject_axi.cpp:27]   --->   Operation 132 'add' 'i_1' <Predicate = true> <Delay = 0.70> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 133 [1/1] (0.00ns)   --->   "br i1 %icmp_ln27, label %2, label %hls_label_1" [firmware/myproject_axi.cpp:27]   --->   Operation 133 'br' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 134 [1/1] (0.00ns)   --->   "%out_local_0_load = load i14* %out_local_0, align 2" [firmware/myproject_axi.cpp:29]   --->   Operation 134 'load' 'out_local_0_load' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_11 : Operation 135 [1/1] (0.00ns)   --->   "%out_local_1_load = load i14* %out_local_1, align 2" [firmware/myproject_axi.cpp:29]   --->   Operation 135 'load' 'out_local_1_load' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_11 : Operation 136 [1/1] (0.00ns)   --->   "%out_local_2_load = load i14* %out_local_2, align 2" [firmware/myproject_axi.cpp:29]   --->   Operation 136 'load' 'out_local_2_load' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_11 : Operation 137 [1/1] (0.00ns)   --->   "%out_local_3_load = load i14* %out_local_3, align 2" [firmware/myproject_axi.cpp:29]   --->   Operation 137 'load' 'out_local_3_load' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_11 : Operation 138 [1/1] (0.00ns)   --->   "%out_local_4_load = load i14* %out_local_4, align 2" [firmware/myproject_axi.cpp:29]   --->   Operation 138 'load' 'out_local_4_load' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_11 : Operation 139 [1/1] (0.00ns)   --->   "%out_local_5_load = load i14* %out_local_5, align 2" [firmware/myproject_axi.cpp:29]   --->   Operation 139 'load' 'out_local_5_load' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_11 : Operation 140 [1/1] (0.00ns)   --->   "%out_local_6_load = load i14* %out_local_6, align 2" [firmware/myproject_axi.cpp:29]   --->   Operation 140 'load' 'out_local_6_load' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_11 : Operation 141 [1/1] (0.00ns)   --->   "%out_local_7_load = load i14* %out_local_7, align 2" [firmware/myproject_axi.cpp:29]   --->   Operation 141 'load' 'out_local_7_load' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_11 : Operation 142 [1/1] (0.00ns)   --->   "%out_local_8_load = load i14* %out_local_8, align 2" [firmware/myproject_axi.cpp:29]   --->   Operation 142 'load' 'out_local_8_load' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_11 : Operation 143 [1/1] (0.00ns)   --->   "%out_local_9_load = load i14* %out_local_9, align 2" [firmware/myproject_axi.cpp:29]   --->   Operation 143 'load' 'out_local_9_load' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_11 : Operation 144 [1/1] (0.61ns)   --->   "%tmp_V_3 = call i14 @_ssdm_op_Mux.ap_auto.10i14.i4(i14 %out_local_0_load, i14 %out_local_1_load, i14 %out_local_2_load, i14 %out_local_3_load, i14 %out_local_4_load, i14 %out_local_5_load, i14 %out_local_6_load, i14 %out_local_7_load, i14 %out_local_8_load, i14 %out_local_9_load, i4 %i2_0)" [firmware/myproject_axi.cpp:29]   --->   Operation 144 'mux' 'tmp_V_3' <Predicate = (!icmp_ln27)> <Delay = 0.61> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 145 [1/1] (0.65ns)   --->   "%icmp_ln935 = icmp eq i14 %tmp_V_3, 0" [firmware/myproject_axi.cpp:29]   --->   Operation 145 'icmp' 'icmp_ln935' <Predicate = (!icmp_ln27)> <Delay = 0.65> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 146 [1/1] (0.00ns)   --->   "%p_Result_19 = call i1 @_ssdm_op_BitSelect.i1.i14.i32(i14 %tmp_V_3, i32 13)" [firmware/myproject_axi.cpp:29]   --->   Operation 146 'bitselect' 'p_Result_19' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_11 : Operation 147 [1/1] (0.76ns)   --->   "%tmp_V = sub i14 0, %tmp_V_3" [firmware/myproject_axi.cpp:29]   --->   Operation 147 'sub' 'tmp_V' <Predicate = (!icmp_ln27)> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 148 [1/1] (0.34ns)   --->   "%tmp_V_4 = select i1 %p_Result_19, i14 %tmp_V, i14 %tmp_V_3" [firmware/myproject_axi.cpp:29]   --->   Operation 148 'select' 'tmp_V_4' <Predicate = (!icmp_ln27)> <Delay = 0.34> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 149 [1/1] (0.00ns)   --->   "%p_Result_s = call i14 @llvm.part.select.i14(i14 %tmp_V_4, i32 13, i32 0) nounwind" [firmware/myproject_axi.cpp:29]   --->   Operation 149 'partselect' 'p_Result_s' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_11 : Operation 150 [1/1] (0.65ns)   --->   "%icmp_ln30 = icmp eq i4 %i2_0, -7" [firmware/myproject_axi.cpp:30]   --->   Operation 150 'icmp' 'icmp_ln30' <Predicate = (!icmp_ln27)> <Delay = 0.65> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 151 [1/1] (0.12ns)   --->   "%and_ln30 = and i1 %is_last_0, %icmp_ln30" [firmware/myproject_axi.cpp:30]   --->   Operation 151 'and' 'and_ln30' <Predicate = (!icmp_ln27)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 5> <Delay = 1.72>
ST_12 : Operation 152 [1/1] (0.00ns)   --->   "%p_Result_20 = call i32 @_ssdm_op_BitConcatenate.i32.i18.i14(i18 -1, i14 %p_Result_s)" [firmware/myproject_axi.cpp:29]   --->   Operation 152 'bitconcatenate' 'p_Result_20' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_12 : Operation 153 [1/1] (0.84ns)   --->   "%l = call i32 @llvm.cttz.i32(i32 %p_Result_20, i1 true) nounwind" [firmware/myproject_axi.cpp:29]   --->   Operation 153 'cttz' 'l' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.84> <Core = "CTTZ">   --->   Core 64 'CTTZ' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'cttz'> <InPorts = 1> <OutPorts = 1>
ST_12 : Operation 154 [1/1] (0.88ns)   --->   "%sub_ln944 = sub nsw i32 14, %l" [firmware/myproject_axi.cpp:29]   --->   Operation 154 'sub' 'sub_ln944' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 155 [1/1] (0.00ns)   --->   "%trunc_ln944 = trunc i32 %sub_ln944 to i14" [firmware/myproject_axi.cpp:29]   --->   Operation 155 'trunc' 'trunc_ln944' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_12 : Operation 156 [1/1] (0.00ns)   --->   "%trunc_ln947 = trunc i32 %sub_ln944 to i4" [firmware/myproject_axi.cpp:29]   --->   Operation 156 'trunc' 'trunc_ln947' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_12 : Operation 157 [1/1] (0.00ns)   --->   "%trunc_ln943 = trunc i32 %l to i8" [firmware/myproject_axi.cpp:29]   --->   Operation 157 'trunc' 'trunc_ln943' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>

State 13 <SV = 6> <Delay = 1.73>
ST_13 : Operation 158 [1/1] (0.88ns)   --->   "%lsb_index = add nsw i32 -24, %sub_ln944" [firmware/myproject_axi.cpp:29]   --->   Operation 158 'add' 'lsb_index' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 159 [1/1] (0.00ns)   --->   "%tmp_2445 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %lsb_index, i32 1, i32 31)" [firmware/myproject_axi.cpp:29]   --->   Operation 159 'partselect' 'tmp_2445' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_13 : Operation 160 [1/1] (0.84ns)   --->   "%icmp_ln947 = icmp sgt i31 %tmp_2445, 0" [firmware/myproject_axi.cpp:29]   --->   Operation 160 'icmp' 'icmp_ln947' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.84> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 161 [1/1] (0.70ns)   --->   "%sub_ln947 = sub i4 7, %trunc_ln947" [firmware/myproject_axi.cpp:29]   --->   Operation 161 'sub' 'sub_ln947' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.70> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_1)   --->   "%zext_ln947 = zext i4 %sub_ln947 to i14" [firmware/myproject_axi.cpp:29]   --->   Operation 162 'zext' 'zext_ln947' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_13 : Operation 163 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_1)   --->   "%lshr_ln947 = lshr i14 -1, %zext_ln947" [firmware/myproject_axi.cpp:29]   --->   Operation 163 'lshr' 'lshr_ln947' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 164 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_1)   --->   "%p_Result_15 = and i14 %tmp_V_4, %lshr_ln947" [firmware/myproject_axi.cpp:29]   --->   Operation 164 'and' 'p_Result_15' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 165 [1/1] (0.65ns) (out node of the LUT)   --->   "%icmp_ln947_1 = icmp ne i14 %p_Result_15, 0" [firmware/myproject_axi.cpp:29]   --->   Operation 165 'icmp' 'icmp_ln947_1' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.65> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 166 [1/1] (0.76ns)   --->   "%add_ln949 = add i14 -24, %trunc_ln944" [firmware/myproject_axi.cpp:29]   --->   Operation 166 'add' 'add_ln949' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 167 [1/1] (0.85ns)   --->   "%icmp_ln958 = icmp sgt i32 %lsb_index, 0" [firmware/myproject_axi.cpp:29]   --->   Operation 167 'icmp' 'icmp_ln958' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.85> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 168 [1/1] (0.88ns)   --->   "%add_ln958 = add nsw i32 -25, %sub_ln944" [firmware/myproject_axi.cpp:29]   --->   Operation 168 'add' 'add_ln958' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 169 [1/1] (0.88ns)   --->   "%sub_ln958 = sub i32 25, %sub_ln944" [firmware/myproject_axi.cpp:29]   --->   Operation 169 'sub' 'sub_ln958' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 7> <Delay = 1.26>
ST_14 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%a = and i1 %icmp_ln947, %icmp_ln947_1" [firmware/myproject_axi.cpp:29]   --->   Operation 170 'and' 'a' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%tmp_2446 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %lsb_index, i32 31)" [firmware/myproject_axi.cpp:29]   --->   Operation 171 'bitselect' 'tmp_2446' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_14 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%xor_ln949 = xor i1 %tmp_2446, true" [firmware/myproject_axi.cpp:29]   --->   Operation 172 'xor' 'xor_ln949' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 173 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%p_Result_4 = call i1 @_ssdm_op_BitSelect.i1.i14.i14(i14 %tmp_V_4, i14 %add_ln949)" [firmware/myproject_axi.cpp:29]   --->   Operation 173 'bitselect' 'p_Result_4' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_14 : Operation 174 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%and_ln949 = and i1 %p_Result_4, %xor_ln949" [firmware/myproject_axi.cpp:29]   --->   Operation 174 'and' 'and_ln949' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 175 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%or_ln949 = or i1 %and_ln949, %a" [firmware/myproject_axi.cpp:29]   --->   Operation 175 'or' 'or_ln949' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 176 [1/1] (0.12ns) (out node of the LUT)   --->   "%or_ln = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 0, i1 %or_ln949)" [firmware/myproject_axi.cpp:29]   --->   Operation 176 'bitconcatenate' 'or_ln' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.12>
ST_14 : Operation 177 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%m = zext i14 %tmp_V_4 to i64" [firmware/myproject_axi.cpp:29]   --->   Operation 177 'zext' 'm' <Predicate = (!icmp_ln27 & !icmp_ln958 & !icmp_ln935)> <Delay = 0.00>
ST_14 : Operation 178 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%zext_ln957_1 = zext i14 %tmp_V_4 to i32" [firmware/myproject_axi.cpp:29]   --->   Operation 178 'zext' 'zext_ln957_1' <Predicate = (!icmp_ln27 & icmp_ln958 & !icmp_ln935)> <Delay = 0.00>
ST_14 : Operation 179 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%lshr_ln958 = lshr i32 %zext_ln957_1, %add_ln958" [firmware/myproject_axi.cpp:29]   --->   Operation 179 'lshr' 'lshr_ln958' <Predicate = (!icmp_ln27 & icmp_ln958 & !icmp_ln935)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 180 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%zext_ln958 = zext i32 %lshr_ln958 to i64" [firmware/myproject_axi.cpp:29]   --->   Operation 180 'zext' 'zext_ln958' <Predicate = (!icmp_ln27 & icmp_ln958 & !icmp_ln935)> <Delay = 0.00>
ST_14 : Operation 181 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%zext_ln958_1 = zext i32 %sub_ln958 to i64" [firmware/myproject_axi.cpp:29]   --->   Operation 181 'zext' 'zext_ln958_1' <Predicate = (!icmp_ln27 & !icmp_ln958 & !icmp_ln935)> <Delay = 0.00>
ST_14 : Operation 182 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%shl_ln958 = shl i64 %m, %zext_ln958_1" [firmware/myproject_axi.cpp:29]   --->   Operation 182 'shl' 'shl_ln958' <Predicate = (!icmp_ln27 & !icmp_ln958 & !icmp_ln935)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 183 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%m_1 = select i1 %icmp_ln958, i64 %zext_ln958, i64 %shl_ln958" [firmware/myproject_axi.cpp:29]   --->   Operation 183 'select' 'm_1' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 184 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%zext_ln961 = zext i32 %or_ln to i64" [firmware/myproject_axi.cpp:29]   --->   Operation 184 'zext' 'zext_ln961' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_14 : Operation 185 [1/1] (1.14ns) (out node of the LUT)   --->   "%m_2 = add i64 %zext_ln961, %m_1" [firmware/myproject_axi.cpp:29]   --->   Operation 185 'add' 'm_2' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 1.14> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 186 [1/1] (0.00ns)   --->   "%m_5 = call i63 @_ssdm_op_PartSelect.i63.i64.i32.i32(i64 %m_2, i32 1, i32 63)" [firmware/myproject_axi.cpp:29]   --->   Operation 186 'partselect' 'm_5' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_14 : Operation 187 [1/1] (0.00ns)   --->   "%tmp_2447 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %m_2, i32 25)" [firmware/myproject_axi.cpp:29]   --->   Operation 187 'bitselect' 'tmp_2447' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>

State 15 <SV = 8> <Delay = 1.36>
ST_15 : Operation 188 [1/1] (0.00ns)   --->   "%m_6 = zext i63 %m_5 to i64" [firmware/myproject_axi.cpp:29]   --->   Operation 188 'zext' 'm_6' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_15 : Operation 189 [1/1] (0.30ns)   --->   "%select_ln964 = select i1 %tmp_2447, i8 127, i8 126" [firmware/myproject_axi.cpp:29]   --->   Operation 189 'select' 'select_ln964' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.30> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 190 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln964 = sub i8 2, %trunc_ln943" [firmware/myproject_axi.cpp:29]   --->   Operation 190 'sub' 'sub_ln964' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 191 [1/1] (0.83ns) (root node of TernaryAdder)   --->   "%add_ln964 = add i8 %sub_ln964, %select_ln964" [firmware/myproject_axi.cpp:29]   --->   Operation 191 'add' 'add_ln964' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.83> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 192 [1/1] (0.00ns)   --->   "%tmp_21 = call i9 @_ssdm_op_BitConcatenate.i9.i1.i8(i1 %p_Result_19, i8 %add_ln964)" [firmware/myproject_axi.cpp:29]   --->   Operation 192 'bitconcatenate' 'tmp_21' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_15 : Operation 193 [1/1] (0.00ns)   --->   "%p_Result_21 = call i64 @_ssdm_op_PartSet.i64.i64.i9.i32.i32(i64 %m_6, i9 %tmp_21, i32 23, i32 31)" [firmware/myproject_axi.cpp:29]   --->   Operation 193 'partset' 'p_Result_21' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_15 : Operation 194 [1/1] (0.00ns)   --->   "%trunc_ln738 = trunc i64 %p_Result_21 to i32" [firmware/myproject_axi.cpp:29]   --->   Operation 194 'trunc' 'trunc_ln738' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_15 : Operation 195 [1/1] (0.00ns)   --->   "%bitcast_ln739 = bitcast i32 %trunc_ln738 to float" [firmware/myproject_axi.cpp:29]   --->   Operation 195 'bitcast' 'bitcast_ln739' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_15 : Operation 196 [1/1] (0.22ns)   --->   "%select_ln935 = select i1 %icmp_ln935, float 0.000000e+00, float %bitcast_ln739" [firmware/myproject_axi.cpp:29]   --->   Operation 196 'select' 'select_ln935' <Predicate = (!icmp_ln27)> <Delay = 0.22> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 197 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.floatP.i1P(float* %out_data, i1* %out_last_V, float %select_ln935, i1 %and_ln30)" [firmware/myproject_axi.cpp:5]   --->   Operation 197 'write' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 16 <SV = 9> <Delay = 0.00>
ST_16 : Operation 198 [1/1] (0.00ns)   --->   "%tmp_20 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str56)" [firmware/myproject_axi.cpp:27]   --->   Operation 198 'specregionbegin' 'tmp_20' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_16 : Operation 199 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [firmware/myproject_axi.cpp:28]   --->   Operation 199 'specpipeline' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_16 : Operation 200 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.floatP.i1P(float* %out_data, i1* %out_last_V, float %select_ln935, i1 %and_ln30)" [firmware/myproject_axi.cpp:5]   --->   Operation 200 'write' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_16 : Operation 201 [1/1] (0.00ns)   --->   "%empty_33 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str56, i32 %tmp_20)" [firmware/myproject_axi.cpp:31]   --->   Operation 201 'specregionend' 'empty_33' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_16 : Operation 202 [1/1] (0.00ns)   --->   "br label %1" [firmware/myproject_axi.cpp:27]   --->   Operation 202 'br' <Predicate = (!icmp_ln27)> <Delay = 0.00>

State 17 <SV = 5> <Delay = 0.00>
ST_17 : Operation 203 [1/1] (0.00ns)   --->   "ret void" [firmware/myproject_axi.cpp:32]   --->   Operation 203 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 2ns, clock uncertainty: 0.25ns.

 <State 1>: 0.603ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('is_last') with incoming values : ('is_last', firmware/myproject_axi.cpp:22) [34]  (0.603 ns)

 <State 2>: 1.54ns
The critical path consists of the following:
	axis read on port 'in_data' (firmware/myproject_axi.cpp:4) [43]  (0 ns)
	'fpext' operation ('d', firmware/myproject_axi.cpp:21) [46]  (1.54 ns)

 <State 3>: 1.54ns
The critical path consists of the following:
	'fpext' operation ('d', firmware/myproject_axi.cpp:21) [46]  (1.54 ns)

 <State 4>: 1.49ns
The critical path consists of the following:
	'sub' operation ('F2', firmware/myproject_axi.cpp:21) [58]  (0.745 ns)
	'add' operation ('add_ln581', firmware/myproject_axi.cpp:21) [60]  (0.745 ns)

 <State 5>: 1.56ns
The critical path consists of the following:
	'sub' operation ('man.V', firmware/myproject_axi.cpp:21) [55]  (0.998 ns)
	'select' operation ('man.V', firmware/myproject_axi.cpp:21) [56]  (0.263 ns)
	'select' operation ('select_ln603_1', firmware/myproject_axi.cpp:21) [90]  (0.303 ns)

 <State 6>: 1.43ns
The critical path consists of the following:
	'shl' operation ('shl_ln604', firmware/myproject_axi.cpp:21) [76]  (0 ns)
	'select' operation ('select_ln603', firmware/myproject_axi.cpp:21) [88]  (1.13 ns)
	'select' operation ('select_ln603_2', firmware/myproject_axi.cpp:21) [92]  (0 ns)
	'select' operation ('select_ln603_3', firmware/myproject_axi.cpp:21) [94]  (0.303 ns)

 <State 7>: 1.55ns
The critical path consists of the following:
	'sub' operation ('sub_ln356', firmware/myproject_axi.cpp:21) [100]  (0.755 ns)
	'select' operation ('select_ln356_2', firmware/myproject_axi.cpp:21) [103]  (0 ns)
	'shl' operation ('shl_ln356', firmware/myproject_axi.cpp:21) [108]  (0.792 ns)

 <State 8>: 1.68ns
The critical path consists of the following:
	'load' operation ('in_local_V_load', firmware/myproject_axi.cpp:21) on local variable 'in_local.V', firmware/myproject_axi.cpp:16 [95]  (0 ns)
	'and' operation ('and_ln356_1', firmware/myproject_axi.cpp:21) [115]  (0 ns)
	'or' operation ('in_local.V', firmware/myproject_axi.cpp:21) [117]  (1.68 ns)

 <State 9>: 0ns
The critical path consists of the following:

 <State 10>: 0.603ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', firmware/myproject_axi.cpp:27) [126]  (0.603 ns)

 <State 11>: 1.72ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', firmware/myproject_axi.cpp:27) [126]  (0 ns)
	'mux' operation ('tmp.V', firmware/myproject_axi.cpp:29) [144]  (0.617 ns)
	'sub' operation ('tmp.V', firmware/myproject_axi.cpp:29) [147]  (0.765 ns)
	'select' operation ('tmp.V', firmware/myproject_axi.cpp:29) [148]  (0.342 ns)

 <State 12>: 1.72ns
The critical path consists of the following:
	'cttz' operation ('l', firmware/myproject_axi.cpp:29) [151]  (0.84 ns)
	'sub' operation ('sub_ln944', firmware/myproject_axi.cpp:29) [152]  (0.88 ns)

 <State 13>: 1.74ns
The critical path consists of the following:
	'add' operation ('lsb_index', firmware/myproject_axi.cpp:29) [154]  (0.88 ns)
	'icmp' operation ('icmp_ln958', firmware/myproject_axi.cpp:29) [173]  (0.859 ns)

 <State 14>: 1.27ns
The critical path consists of the following:
	'and' operation ('a', firmware/myproject_axi.cpp:29) [163]  (0 ns)
	'or' operation ('or_ln949', firmware/myproject_axi.cpp:29) [169]  (0 ns)
	'add' operation ('m', firmware/myproject_axi.cpp:29) [182]  (1.15 ns)
	blocking operation 0.122 ns on control path)

 <State 15>: 1.37ns
The critical path consists of the following:
	'select' operation ('select_ln964', firmware/myproject_axi.cpp:29) [186]  (0.303 ns)
	'add' operation ('add_ln964', firmware/myproject_axi.cpp:29) [189]  (0.838 ns)
	'select' operation ('select_ln935', firmware/myproject_axi.cpp:29) [194]  (0.227 ns)

 <State 16>: 0ns
The critical path consists of the following:

 <State 17>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
