// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config7_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        data_4_V_read,
        data_5_V_read,
        data_6_V_read,
        data_7_V_read,
        data_8_V_read,
        data_9_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] data_0_V_read;
input  [7:0] data_1_V_read;
input  [7:0] data_2_V_read;
input  [7:0] data_3_V_read;
input  [7:0] data_4_V_read;
input  [7:0] data_5_V_read;
input  [7:0] data_6_V_read;
input  [7:0] data_7_V_read;
input  [7:0] data_8_V_read;
input  [7:0] data_9_V_read;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] ap_return_0;
reg[15:0] ap_return_1;
reg[15:0] ap_return_2;
reg[15:0] ap_return_3;
reg[15:0] ap_return_4;
reg[15:0] ap_return_5;
reg[15:0] ap_return_6;
reg[15:0] ap_return_7;
reg[15:0] ap_return_8;
reg[15:0] ap_return_9;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1;
wire   [13:0] shl_ln_fu_104_p3;
wire   [13:0] shl_ln728_1_fu_116_p3;
wire   [13:0] shl_ln728_2_fu_128_p3;
wire   [13:0] shl_ln728_3_fu_140_p3;
wire   [13:0] shl_ln728_4_fu_152_p3;
wire   [13:0] shl_ln728_5_fu_164_p3;
wire   [13:0] shl_ln728_6_fu_176_p3;
wire   [13:0] shl_ln728_7_fu_188_p3;
wire   [13:0] shl_ln728_8_fu_200_p3;
wire   [13:0] shl_ln728_9_fu_212_p3;
wire  signed [15:0] sext_ln728_fu_112_p1;
wire  signed [15:0] sext_ln728_1_fu_124_p1;
wire  signed [15:0] sext_ln728_2_fu_136_p1;
wire  signed [15:0] sext_ln728_3_fu_148_p1;
wire  signed [15:0] sext_ln728_4_fu_160_p1;
wire  signed [15:0] sext_ln728_5_fu_172_p1;
wire  signed [15:0] sext_ln728_6_fu_184_p1;
wire  signed [15:0] sext_ln728_7_fu_196_p1;
wire  signed [15:0] sext_ln728_8_fu_208_p1;
wire  signed [15:0] sext_ln728_9_fu_220_p1;
reg   [15:0] ap_return_0_preg;
reg   [15:0] ap_return_1_preg;
reg   [15:0] ap_return_2_preg;
reg   [15:0] ap_return_3_preg;
reg   [15:0] ap_return_4_preg;
reg   [15:0] ap_return_5_preg;
reg   [15:0] ap_return_6_preg;
reg   [15:0] ap_return_7_preg;
reg   [15:0] ap_return_8_preg;
reg   [15:0] ap_return_9_preg;
reg   [0:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_return_0_preg = 16'd0;
#0 ap_return_1_preg = 16'd0;
#0 ap_return_2_preg = 16'd0;
#0 ap_return_3_preg = 16'd0;
#0 ap_return_4_preg = 16'd0;
#0 ap_return_5_preg = 16'd0;
#0 ap_return_6_preg = 16'd0;
#0 ap_return_7_preg = 16'd0;
#0 ap_return_8_preg = 16'd0;
#0 ap_return_9_preg = 16'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_0_preg[6] <= 1'b0;
        ap_return_0_preg[7] <= 1'b0;
        ap_return_0_preg[8] <= 1'b0;
        ap_return_0_preg[9] <= 1'b0;
        ap_return_0_preg[10] <= 1'b0;
        ap_return_0_preg[11] <= 1'b0;
        ap_return_0_preg[12] <= 1'b0;
        ap_return_0_preg[13] <= 1'b0;
        ap_return_0_preg[14] <= 1'b0;
        ap_return_0_preg[15] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_0_preg[15 : 6] <= sext_ln728_fu_112_p1[15 : 6];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_1_preg[6] <= 1'b0;
        ap_return_1_preg[7] <= 1'b0;
        ap_return_1_preg[8] <= 1'b0;
        ap_return_1_preg[9] <= 1'b0;
        ap_return_1_preg[10] <= 1'b0;
        ap_return_1_preg[11] <= 1'b0;
        ap_return_1_preg[12] <= 1'b0;
        ap_return_1_preg[13] <= 1'b0;
        ap_return_1_preg[14] <= 1'b0;
        ap_return_1_preg[15] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_1_preg[15 : 6] <= sext_ln728_1_fu_124_p1[15 : 6];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_2_preg[6] <= 1'b0;
        ap_return_2_preg[7] <= 1'b0;
        ap_return_2_preg[8] <= 1'b0;
        ap_return_2_preg[9] <= 1'b0;
        ap_return_2_preg[10] <= 1'b0;
        ap_return_2_preg[11] <= 1'b0;
        ap_return_2_preg[12] <= 1'b0;
        ap_return_2_preg[13] <= 1'b0;
        ap_return_2_preg[14] <= 1'b0;
        ap_return_2_preg[15] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_2_preg[15 : 6] <= sext_ln728_2_fu_136_p1[15 : 6];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_3_preg[6] <= 1'b0;
        ap_return_3_preg[7] <= 1'b0;
        ap_return_3_preg[8] <= 1'b0;
        ap_return_3_preg[9] <= 1'b0;
        ap_return_3_preg[10] <= 1'b0;
        ap_return_3_preg[11] <= 1'b0;
        ap_return_3_preg[12] <= 1'b0;
        ap_return_3_preg[13] <= 1'b0;
        ap_return_3_preg[14] <= 1'b0;
        ap_return_3_preg[15] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_3_preg[15 : 6] <= sext_ln728_3_fu_148_p1[15 : 6];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_4_preg[6] <= 1'b0;
        ap_return_4_preg[7] <= 1'b0;
        ap_return_4_preg[8] <= 1'b0;
        ap_return_4_preg[9] <= 1'b0;
        ap_return_4_preg[10] <= 1'b0;
        ap_return_4_preg[11] <= 1'b0;
        ap_return_4_preg[12] <= 1'b0;
        ap_return_4_preg[13] <= 1'b0;
        ap_return_4_preg[14] <= 1'b0;
        ap_return_4_preg[15] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_4_preg[15 : 6] <= sext_ln728_4_fu_160_p1[15 : 6];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_5_preg[6] <= 1'b0;
        ap_return_5_preg[7] <= 1'b0;
        ap_return_5_preg[8] <= 1'b0;
        ap_return_5_preg[9] <= 1'b0;
        ap_return_5_preg[10] <= 1'b0;
        ap_return_5_preg[11] <= 1'b0;
        ap_return_5_preg[12] <= 1'b0;
        ap_return_5_preg[13] <= 1'b0;
        ap_return_5_preg[14] <= 1'b0;
        ap_return_5_preg[15] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_5_preg[15 : 6] <= sext_ln728_5_fu_172_p1[15 : 6];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_6_preg[6] <= 1'b0;
        ap_return_6_preg[7] <= 1'b0;
        ap_return_6_preg[8] <= 1'b0;
        ap_return_6_preg[9] <= 1'b0;
        ap_return_6_preg[10] <= 1'b0;
        ap_return_6_preg[11] <= 1'b0;
        ap_return_6_preg[12] <= 1'b0;
        ap_return_6_preg[13] <= 1'b0;
        ap_return_6_preg[14] <= 1'b0;
        ap_return_6_preg[15] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_6_preg[15 : 6] <= sext_ln728_6_fu_184_p1[15 : 6];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_7_preg[6] <= 1'b0;
        ap_return_7_preg[7] <= 1'b0;
        ap_return_7_preg[8] <= 1'b0;
        ap_return_7_preg[9] <= 1'b0;
        ap_return_7_preg[10] <= 1'b0;
        ap_return_7_preg[11] <= 1'b0;
        ap_return_7_preg[12] <= 1'b0;
        ap_return_7_preg[13] <= 1'b0;
        ap_return_7_preg[14] <= 1'b0;
        ap_return_7_preg[15] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_7_preg[15 : 6] <= sext_ln728_7_fu_196_p1[15 : 6];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_8_preg[6] <= 1'b0;
        ap_return_8_preg[7] <= 1'b0;
        ap_return_8_preg[8] <= 1'b0;
        ap_return_8_preg[9] <= 1'b0;
        ap_return_8_preg[10] <= 1'b0;
        ap_return_8_preg[11] <= 1'b0;
        ap_return_8_preg[12] <= 1'b0;
        ap_return_8_preg[13] <= 1'b0;
        ap_return_8_preg[14] <= 1'b0;
        ap_return_8_preg[15] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_8_preg[15 : 6] <= sext_ln728_8_fu_208_p1[15 : 6];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_9_preg[6] <= 1'b0;
        ap_return_9_preg[7] <= 1'b0;
        ap_return_9_preg[8] <= 1'b0;
        ap_return_9_preg[9] <= 1'b0;
        ap_return_9_preg[10] <= 1'b0;
        ap_return_9_preg[11] <= 1'b0;
        ap_return_9_preg[12] <= 1'b0;
        ap_return_9_preg[13] <= 1'b0;
        ap_return_9_preg[14] <= 1'b0;
        ap_return_9_preg[15] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_9_preg[15 : 6] <= sext_ln728_9_fu_220_p1[15 : 6];
        end
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_0 = sext_ln728_fu_112_p1;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_1 = sext_ln728_1_fu_124_p1;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_2 = sext_ln728_2_fu_136_p1;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_3 = sext_ln728_3_fu_148_p1;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_4 = sext_ln728_4_fu_160_p1;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_5 = sext_ln728_5_fu_172_p1;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_6 = sext_ln728_6_fu_184_p1;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_7 = sext_ln728_7_fu_196_p1;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_8 = sext_ln728_8_fu_208_p1;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_9 = sext_ln728_9_fu_220_p1;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign sext_ln728_1_fu_124_p1 = $signed(shl_ln728_1_fu_116_p3);

assign sext_ln728_2_fu_136_p1 = $signed(shl_ln728_2_fu_128_p3);

assign sext_ln728_3_fu_148_p1 = $signed(shl_ln728_3_fu_140_p3);

assign sext_ln728_4_fu_160_p1 = $signed(shl_ln728_4_fu_152_p3);

assign sext_ln728_5_fu_172_p1 = $signed(shl_ln728_5_fu_164_p3);

assign sext_ln728_6_fu_184_p1 = $signed(shl_ln728_6_fu_176_p3);

assign sext_ln728_7_fu_196_p1 = $signed(shl_ln728_7_fu_188_p3);

assign sext_ln728_8_fu_208_p1 = $signed(shl_ln728_8_fu_200_p3);

assign sext_ln728_9_fu_220_p1 = $signed(shl_ln728_9_fu_212_p3);

assign sext_ln728_fu_112_p1 = $signed(shl_ln_fu_104_p3);

assign shl_ln728_1_fu_116_p3 = {{data_1_V_read}, {6'd0}};

assign shl_ln728_2_fu_128_p3 = {{data_2_V_read}, {6'd0}};

assign shl_ln728_3_fu_140_p3 = {{data_3_V_read}, {6'd0}};

assign shl_ln728_4_fu_152_p3 = {{data_4_V_read}, {6'd0}};

assign shl_ln728_5_fu_164_p3 = {{data_5_V_read}, {6'd0}};

assign shl_ln728_6_fu_176_p3 = {{data_6_V_read}, {6'd0}};

assign shl_ln728_7_fu_188_p3 = {{data_7_V_read}, {6'd0}};

assign shl_ln728_8_fu_200_p3 = {{data_8_V_read}, {6'd0}};

assign shl_ln728_9_fu_212_p3 = {{data_9_V_read}, {6'd0}};

assign shl_ln_fu_104_p3 = {{data_0_V_read}, {6'd0}};

always @ (posedge ap_clk) begin
    ap_return_0_preg[5:0] <= 6'b000000;
    ap_return_1_preg[5:0] <= 6'b000000;
    ap_return_2_preg[5:0] <= 6'b000000;
    ap_return_3_preg[5:0] <= 6'b000000;
    ap_return_4_preg[5:0] <= 6'b000000;
    ap_return_5_preg[5:0] <= 6'b000000;
    ap_return_6_preg[5:0] <= 6'b000000;
    ap_return_7_preg[5:0] <= 6'b000000;
    ap_return_8_preg[5:0] <= 6'b000000;
    ap_return_9_preg[5:0] <= 6'b000000;
end

endmodule //linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config7_s
