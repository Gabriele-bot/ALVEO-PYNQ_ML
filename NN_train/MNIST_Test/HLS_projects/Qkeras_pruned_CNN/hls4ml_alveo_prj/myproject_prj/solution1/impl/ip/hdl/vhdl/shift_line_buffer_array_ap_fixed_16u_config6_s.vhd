-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity shift_line_buffer_array_ap_fixed_16u_config6_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_elem_data_0_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    in_elem_data_1_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    in_elem_data_2_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    in_elem_data_3_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    in_elem_data_4_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    in_elem_data_5_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    in_elem_data_6_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    in_elem_data_7_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    in_elem_data_8_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    in_elem_data_9_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    in_elem_data_10_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    in_elem_data_11_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    in_elem_data_12_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    in_elem_data_13_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    in_elem_data_14_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    in_elem_data_15_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_16_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_17_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_18_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_19_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_20_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_21_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_23_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_25_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_26_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_27_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_28_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_29_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_30_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_32_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_33_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_34_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_35_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_37_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_39_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_40_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_41_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_42_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_43_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_44_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_45_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_46_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_64_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_65_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_66_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_68_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_69_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_71_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_73_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_74_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_75_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_76_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_77_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_78_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_80_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_81_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_82_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_83_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_84_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_85_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_87_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_89_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_90_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_91_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_92_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_93_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_94_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_112_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_113_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_114_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_115_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_116_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_117_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_119_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_120_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_121_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_122_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_123_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_124_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_125_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_126_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_128_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_129_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_130_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_131_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_132_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_133_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_136_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_137_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_138_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_139_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_140_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_141_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    kernel_window_142_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_16 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_17 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_18 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_19 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_20 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_21 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_22 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_23 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_24 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_25 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_26 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_27 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_28 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_29 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_30 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_31 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_32 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_33 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_34 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_35 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_36 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_37 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_38 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_39 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_40 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_41 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_42 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_43 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_44 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_45 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_46 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_47 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_48 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_49 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_50 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_51 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_52 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_53 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_54 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_55 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_56 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_57 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_58 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_59 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_60 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_61 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_62 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_63 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_64 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_65 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_66 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_67 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_68 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_69 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_70 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_71 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_72 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_73 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_74 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_75 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_76 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_77 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_78 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_79 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_80 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_81 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_82 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_83 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_84 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_85 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_86 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_87 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_88 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_89 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_90 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_91 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_92 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_93 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_94 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_95 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_96 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_97 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_98 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_99 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_100 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_101 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_102 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_103 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_104 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_105 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_106 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_107 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_108 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_109 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_110 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_111 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_112 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_113 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_114 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_115 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_116 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_117 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_118 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_119 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_120 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of shift_line_buffer_array_ap_fixed_16u_config6_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal kernel_data_V_79 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal kernel_data_V_36 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal kernel_data_V_88 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal kernel_data_V_95 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal kernel_data_V_135 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal line_buffer_Array_V_0_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_0_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_0_0_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_1337_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_0_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_0_1_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_0_1_we0 : STD_LOGIC;
    signal line_buffer_Array_V_0_1_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_1337_1_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_1_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_1_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_0_2_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_0_2_we0 : STD_LOGIC;
    signal line_buffer_Array_V_0_2_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_1337_2_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_2_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_2_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_0_3_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_0_3_we0 : STD_LOGIC;
    signal line_buffer_Array_V_0_3_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_1337_3_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_3_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_3_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_0_4_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_0_4_we0 : STD_LOGIC;
    signal line_buffer_Array_V_0_4_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_1337_4_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_4_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_4_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_0_5_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_0_5_we0 : STD_LOGIC;
    signal line_buffer_Array_V_0_5_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_1337_5_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_5_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_5_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_0_6_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_1337_6_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_0_7_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_0_7_we0 : STD_LOGIC;
    signal line_buffer_Array_V_0_7_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_1337_7_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_7_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_7_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_0_8_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_0_8_we0 : STD_LOGIC;
    signal line_buffer_Array_V_0_8_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_1337_8_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_8_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_8_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_0_9_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_0_9_we0 : STD_LOGIC;
    signal line_buffer_Array_V_0_9_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_1337_9_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_9_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_9_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_0_10_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_0_10_we0 : STD_LOGIC;
    signal line_buffer_Array_V_0_10_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_1337_10_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_10_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_10_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_0_11_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_0_11_we0 : STD_LOGIC;
    signal line_buffer_Array_V_0_11_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_1337_11_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_11_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_11_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_0_12_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_0_12_we0 : STD_LOGIC;
    signal line_buffer_Array_V_0_12_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_1337_12_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_12_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_12_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_0_13_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_0_13_we0 : STD_LOGIC;
    signal line_buffer_Array_V_0_13_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_1337_13_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_13_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_13_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_0_14_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_0_14_we0 : STD_LOGIC;
    signal line_buffer_Array_V_0_14_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_1337_14_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_14_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1337_14_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_0_15_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_0_15_we0 : STD_LOGIC;
    signal line_buffer_Array_V_0_15_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buffer_Array_V_1337_15_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);

    component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (2 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;



begin
    line_buffer_Array_V_0_0_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_0_0_ce0,
        we0 => line_buffer_Array_V_0_0_we0,
        d0 => in_elem_data_0_V_read,
        q0 => line_buffer_Array_V_0_0_q0);

    line_buffer_Array_V_1337_0_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_1337_0_ce0,
        we0 => line_buffer_Array_V_1337_0_we0,
        d0 => line_buffer_Array_V_0_0_q0,
        q0 => line_buffer_Array_V_1337_0_q0);

    line_buffer_Array_V_0_1_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_0_1_ce0,
        we0 => line_buffer_Array_V_0_1_we0,
        d0 => in_elem_data_1_V_read,
        q0 => line_buffer_Array_V_0_1_q0);

    line_buffer_Array_V_1337_1_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_1337_1_ce0,
        we0 => line_buffer_Array_V_1337_1_we0,
        d0 => line_buffer_Array_V_0_1_q0,
        q0 => line_buffer_Array_V_1337_1_q0);

    line_buffer_Array_V_0_2_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_0_2_ce0,
        we0 => line_buffer_Array_V_0_2_we0,
        d0 => in_elem_data_2_V_read,
        q0 => line_buffer_Array_V_0_2_q0);

    line_buffer_Array_V_1337_2_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_1337_2_ce0,
        we0 => line_buffer_Array_V_1337_2_we0,
        d0 => line_buffer_Array_V_0_2_q0,
        q0 => line_buffer_Array_V_1337_2_q0);

    line_buffer_Array_V_0_3_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_0_3_ce0,
        we0 => line_buffer_Array_V_0_3_we0,
        d0 => in_elem_data_3_V_read,
        q0 => line_buffer_Array_V_0_3_q0);

    line_buffer_Array_V_1337_3_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_1337_3_ce0,
        we0 => line_buffer_Array_V_1337_3_we0,
        d0 => line_buffer_Array_V_0_3_q0,
        q0 => line_buffer_Array_V_1337_3_q0);

    line_buffer_Array_V_0_4_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_0_4_ce0,
        we0 => line_buffer_Array_V_0_4_we0,
        d0 => in_elem_data_4_V_read,
        q0 => line_buffer_Array_V_0_4_q0);

    line_buffer_Array_V_1337_4_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_1337_4_ce0,
        we0 => line_buffer_Array_V_1337_4_we0,
        d0 => line_buffer_Array_V_0_4_q0,
        q0 => line_buffer_Array_V_1337_4_q0);

    line_buffer_Array_V_0_5_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_0_5_ce0,
        we0 => line_buffer_Array_V_0_5_we0,
        d0 => in_elem_data_5_V_read,
        q0 => line_buffer_Array_V_0_5_q0);

    line_buffer_Array_V_1337_5_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_1337_5_ce0,
        we0 => line_buffer_Array_V_1337_5_we0,
        d0 => line_buffer_Array_V_0_5_q0,
        q0 => line_buffer_Array_V_1337_5_q0);

    line_buffer_Array_V_0_7_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_0_7_ce0,
        we0 => line_buffer_Array_V_0_7_we0,
        d0 => in_elem_data_7_V_read,
        q0 => line_buffer_Array_V_0_7_q0);

    line_buffer_Array_V_1337_7_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_1337_7_ce0,
        we0 => line_buffer_Array_V_1337_7_we0,
        d0 => line_buffer_Array_V_0_7_q0,
        q0 => line_buffer_Array_V_1337_7_q0);

    line_buffer_Array_V_0_8_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_0_8_ce0,
        we0 => line_buffer_Array_V_0_8_we0,
        d0 => in_elem_data_8_V_read,
        q0 => line_buffer_Array_V_0_8_q0);

    line_buffer_Array_V_1337_8_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_1337_8_ce0,
        we0 => line_buffer_Array_V_1337_8_we0,
        d0 => line_buffer_Array_V_0_8_q0,
        q0 => line_buffer_Array_V_1337_8_q0);

    line_buffer_Array_V_0_9_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_0_9_ce0,
        we0 => line_buffer_Array_V_0_9_we0,
        d0 => in_elem_data_9_V_read,
        q0 => line_buffer_Array_V_0_9_q0);

    line_buffer_Array_V_1337_9_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_1337_9_ce0,
        we0 => line_buffer_Array_V_1337_9_we0,
        d0 => line_buffer_Array_V_0_9_q0,
        q0 => line_buffer_Array_V_1337_9_q0);

    line_buffer_Array_V_0_10_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_0_10_ce0,
        we0 => line_buffer_Array_V_0_10_we0,
        d0 => in_elem_data_10_V_read,
        q0 => line_buffer_Array_V_0_10_q0);

    line_buffer_Array_V_1337_10_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_1337_10_ce0,
        we0 => line_buffer_Array_V_1337_10_we0,
        d0 => line_buffer_Array_V_0_10_q0,
        q0 => line_buffer_Array_V_1337_10_q0);

    line_buffer_Array_V_0_11_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_0_11_ce0,
        we0 => line_buffer_Array_V_0_11_we0,
        d0 => in_elem_data_11_V_read,
        q0 => line_buffer_Array_V_0_11_q0);

    line_buffer_Array_V_1337_11_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_1337_11_ce0,
        we0 => line_buffer_Array_V_1337_11_we0,
        d0 => line_buffer_Array_V_0_11_q0,
        q0 => line_buffer_Array_V_1337_11_q0);

    line_buffer_Array_V_0_12_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_0_12_ce0,
        we0 => line_buffer_Array_V_0_12_we0,
        d0 => in_elem_data_12_V_read,
        q0 => line_buffer_Array_V_0_12_q0);

    line_buffer_Array_V_1337_12_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_1337_12_ce0,
        we0 => line_buffer_Array_V_1337_12_we0,
        d0 => line_buffer_Array_V_0_12_q0,
        q0 => line_buffer_Array_V_1337_12_q0);

    line_buffer_Array_V_0_13_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_0_13_ce0,
        we0 => line_buffer_Array_V_0_13_we0,
        d0 => in_elem_data_13_V_read,
        q0 => line_buffer_Array_V_0_13_q0);

    line_buffer_Array_V_1337_13_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_1337_13_ce0,
        we0 => line_buffer_Array_V_1337_13_we0,
        d0 => line_buffer_Array_V_0_13_q0,
        q0 => line_buffer_Array_V_1337_13_q0);

    line_buffer_Array_V_0_14_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_0_14_ce0,
        we0 => line_buffer_Array_V_0_14_we0,
        d0 => in_elem_data_14_V_read,
        q0 => line_buffer_Array_V_0_14_q0);

    line_buffer_Array_V_1337_14_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_1337_14_ce0,
        we0 => line_buffer_Array_V_1337_14_we0,
        d0 => line_buffer_Array_V_0_14_q0,
        q0 => line_buffer_Array_V_1337_14_q0);

    line_buffer_Array_V_0_15_U : component shift_line_buffer_array_ap_fixed_16u_config6_s_line_buffetde
    generic map (
        DataWidth => 3,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_C,
        ce0 => line_buffer_Array_V_0_15_ce0,
        we0 => line_buffer_Array_V_0_15_we0,
        d0 => in_elem_data_15_V_read,
        q0 => line_buffer_Array_V_0_15_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                kernel_data_V_135 <= in_elem_data_7_V_read;
                kernel_data_V_36 <= line_buffer_Array_V_1337_4_q0;
                kernel_data_V_79 <= kernel_data_V_95;
                kernel_data_V_88 <= line_buffer_Array_V_0_8_q0;
                kernel_data_V_95 <= line_buffer_Array_V_0_15_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_ce)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= kernel_window_16_V_read;
    ap_return_1 <= kernel_window_17_V_read;
    ap_return_10 <= kernel_window_28_V_read;
    ap_return_100 <= kernel_data_V_135;
    ap_return_101 <= kernel_window_136_V_read;
    ap_return_102 <= kernel_window_137_V_read;
    ap_return_103 <= kernel_window_138_V_read;
    ap_return_104 <= kernel_window_139_V_read;
    ap_return_105 <= kernel_window_140_V_read;
    ap_return_106 <= kernel_window_141_V_read;
    ap_return_107 <= kernel_window_142_V_read;
    ap_return_108 <= in_elem_data_0_V_read;
    ap_return_109 <= in_elem_data_1_V_read;
    ap_return_11 <= kernel_window_29_V_read;
    ap_return_110 <= in_elem_data_2_V_read;
    ap_return_111 <= in_elem_data_3_V_read;
    ap_return_112 <= in_elem_data_4_V_read;
    ap_return_113 <= in_elem_data_5_V_read;
    ap_return_114 <= in_elem_data_8_V_read;
    ap_return_115 <= in_elem_data_9_V_read;
    ap_return_116 <= in_elem_data_10_V_read;
    ap_return_117 <= in_elem_data_11_V_read;
    ap_return_118 <= in_elem_data_12_V_read;
    ap_return_119 <= in_elem_data_13_V_read;
    ap_return_12 <= kernel_window_30_V_read;
    ap_return_120 <= in_elem_data_14_V_read;
    ap_return_13 <= kernel_window_64_V_read;
    ap_return_14 <= kernel_window_65_V_read;
    ap_return_15 <= kernel_window_66_V_read;
    ap_return_16 <= kernel_window_68_V_read;
    ap_return_17 <= kernel_window_69_V_read;
    ap_return_18 <= kernel_window_71_V_read;
    ap_return_19 <= kernel_window_73_V_read;
    ap_return_2 <= kernel_window_18_V_read;
    ap_return_20 <= kernel_window_74_V_read;
    ap_return_21 <= kernel_window_75_V_read;
    ap_return_22 <= kernel_window_76_V_read;
    ap_return_23 <= kernel_window_77_V_read;
    ap_return_24 <= kernel_window_78_V_read;
    ap_return_25 <= kernel_data_V_79;
    ap_return_26 <= kernel_window_112_V_read;
    ap_return_27 <= kernel_window_113_V_read;
    ap_return_28 <= kernel_window_114_V_read;
    ap_return_29 <= kernel_window_115_V_read;
    ap_return_3 <= kernel_window_19_V_read;
    ap_return_30 <= kernel_window_116_V_read;
    ap_return_31 <= kernel_window_117_V_read;
    ap_return_32 <= kernel_window_119_V_read;
    ap_return_33 <= kernel_window_120_V_read;
    ap_return_34 <= kernel_window_121_V_read;
    ap_return_35 <= kernel_window_122_V_read;
    ap_return_36 <= kernel_window_123_V_read;
    ap_return_37 <= kernel_window_124_V_read;
    ap_return_38 <= kernel_window_125_V_read;
    ap_return_39 <= kernel_window_126_V_read;
    ap_return_4 <= kernel_window_20_V_read;
    ap_return_40 <= kernel_window_32_V_read;
    ap_return_41 <= kernel_window_33_V_read;
    ap_return_42 <= kernel_window_34_V_read;
    ap_return_43 <= kernel_window_35_V_read;
    ap_return_44 <= kernel_data_V_36;
    ap_return_45 <= kernel_window_37_V_read;
    ap_return_46 <= kernel_window_39_V_read;
    ap_return_47 <= kernel_window_40_V_read;
    ap_return_48 <= kernel_window_41_V_read;
    ap_return_49 <= kernel_window_42_V_read;
    ap_return_5 <= kernel_window_21_V_read;
    ap_return_50 <= kernel_window_43_V_read;
    ap_return_51 <= kernel_window_44_V_read;
    ap_return_52 <= kernel_window_45_V_read;
    ap_return_53 <= kernel_window_46_V_read;
    ap_return_54 <= line_buffer_Array_V_1337_0_q0;
    ap_return_55 <= line_buffer_Array_V_1337_1_q0;
    ap_return_56 <= line_buffer_Array_V_1337_2_q0;
    ap_return_57 <= line_buffer_Array_V_1337_3_q0;
    ap_return_58 <= line_buffer_Array_V_1337_5_q0;
    ap_return_59 <= line_buffer_Array_V_1337_7_q0;
    ap_return_6 <= kernel_window_23_V_read;
    ap_return_60 <= line_buffer_Array_V_1337_8_q0;
    ap_return_61 <= line_buffer_Array_V_1337_9_q0;
    ap_return_62 <= line_buffer_Array_V_1337_10_q0;
    ap_return_63 <= line_buffer_Array_V_1337_11_q0;
    ap_return_64 <= line_buffer_Array_V_1337_12_q0;
    ap_return_65 <= line_buffer_Array_V_1337_13_q0;
    ap_return_66 <= line_buffer_Array_V_1337_14_q0;
    ap_return_67 <= kernel_window_80_V_read;
    ap_return_68 <= kernel_window_81_V_read;
    ap_return_69 <= kernel_window_82_V_read;
    ap_return_7 <= kernel_window_25_V_read;
    ap_return_70 <= kernel_window_83_V_read;
    ap_return_71 <= kernel_window_84_V_read;
    ap_return_72 <= kernel_window_85_V_read;
    ap_return_73 <= kernel_window_87_V_read;
    ap_return_74 <= kernel_data_V_88;
    ap_return_75 <= kernel_window_89_V_read;
    ap_return_76 <= kernel_window_90_V_read;
    ap_return_77 <= kernel_window_91_V_read;
    ap_return_78 <= kernel_window_92_V_read;
    ap_return_79 <= kernel_window_93_V_read;
    ap_return_8 <= kernel_window_26_V_read;
    ap_return_80 <= kernel_window_94_V_read;
    ap_return_81 <= line_buffer_Array_V_0_0_q0;
    ap_return_82 <= line_buffer_Array_V_0_1_q0;
    ap_return_83 <= line_buffer_Array_V_0_2_q0;
    ap_return_84 <= line_buffer_Array_V_0_3_q0;
    ap_return_85 <= line_buffer_Array_V_0_4_q0;
    ap_return_86 <= line_buffer_Array_V_0_5_q0;
    ap_return_87 <= line_buffer_Array_V_0_7_q0;
    ap_return_88 <= line_buffer_Array_V_0_9_q0;
    ap_return_89 <= line_buffer_Array_V_0_10_q0;
    ap_return_9 <= kernel_window_27_V_read;
    ap_return_90 <= line_buffer_Array_V_0_11_q0;
    ap_return_91 <= line_buffer_Array_V_0_12_q0;
    ap_return_92 <= line_buffer_Array_V_0_13_q0;
    ap_return_93 <= line_buffer_Array_V_0_14_q0;
    ap_return_94 <= kernel_window_128_V_read;
    ap_return_95 <= kernel_window_129_V_read;
    ap_return_96 <= kernel_window_130_V_read;
    ap_return_97 <= kernel_window_131_V_read;
    ap_return_98 <= kernel_window_132_V_read;
    ap_return_99 <= kernel_window_133_V_read;

    line_buffer_Array_V_0_0_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_0_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_10_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_10_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_10_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_10_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_11_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_11_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_11_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_11_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_12_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_12_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_12_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_12_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_13_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_13_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_13_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_13_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_14_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_14_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_14_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_14_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_15_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_15_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_15_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_15_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_1_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_1_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_1_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_2_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_2_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_2_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_3_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_3_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_3_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_3_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_4_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_4_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_4_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_4_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_5_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_5_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_5_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_5_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_7_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_7_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_7_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_7_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_8_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_8_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_8_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_8_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_9_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_9_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_9_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_0_9_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_0_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_0_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_10_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_10_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_10_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_10_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_11_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_11_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_11_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_11_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_12_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_12_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_12_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_12_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_13_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_13_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_13_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_13_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_14_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_14_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_14_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_14_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_1_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_1_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_1_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_2_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_2_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_2_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_3_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_3_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_3_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_3_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_4_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_4_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_4_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_4_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_5_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_5_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_5_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_5_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_7_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_7_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_7_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_7_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_8_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_8_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_8_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_8_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_9_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_9_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1337_9_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            line_buffer_Array_V_1337_9_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1337_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
