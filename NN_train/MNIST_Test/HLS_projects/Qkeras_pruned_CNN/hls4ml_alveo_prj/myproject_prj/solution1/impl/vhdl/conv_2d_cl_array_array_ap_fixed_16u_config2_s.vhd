-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_2d_cl_array_array_ap_fixed_16u_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    data_V_data_V_empty_n : IN STD_LOGIC;
    data_V_data_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC;
    res_V_data_4_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_4_V_full_n : IN STD_LOGIC;
    res_V_data_4_V_write : OUT STD_LOGIC;
    res_V_data_5_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_5_V_full_n : IN STD_LOGIC;
    res_V_data_5_V_write : OUT STD_LOGIC;
    res_V_data_6_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_6_V_full_n : IN STD_LOGIC;
    res_V_data_6_V_write : OUT STD_LOGIC;
    res_V_data_7_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_7_V_full_n : IN STD_LOGIC;
    res_V_data_7_V_write : OUT STD_LOGIC;
    res_V_data_8_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_8_V_full_n : IN STD_LOGIC;
    res_V_data_8_V_write : OUT STD_LOGIC;
    res_V_data_9_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_9_V_full_n : IN STD_LOGIC;
    res_V_data_9_V_write : OUT STD_LOGIC;
    res_V_data_10_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_10_V_full_n : IN STD_LOGIC;
    res_V_data_10_V_write : OUT STD_LOGIC;
    res_V_data_11_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_11_V_full_n : IN STD_LOGIC;
    res_V_data_11_V_write : OUT STD_LOGIC;
    res_V_data_12_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_12_V_full_n : IN STD_LOGIC;
    res_V_data_12_V_write : OUT STD_LOGIC;
    res_V_data_13_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_13_V_full_n : IN STD_LOGIC;
    res_V_data_13_V_write : OUT STD_LOGIC;
    res_V_data_14_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_14_V_full_n : IN STD_LOGIC;
    res_V_data_14_V_write : OUT STD_LOGIC;
    res_V_data_15_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_15_V_full_n : IN STD_LOGIC;
    res_V_data_15_V_write : OUT STD_LOGIC );
end;


architecture behav of conv_2d_cl_array_array_ap_fixed_16u_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv12_FFA : STD_LOGIC_VECTOR (11 downto 0) := "111111111010";
    constant ap_const_lv10_310 : STD_LOGIC_VECTOR (9 downto 0) := "1100010000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv11_7EB : STD_LOGIC_VECTOR (10 downto 0) := "11111101011";
    constant ap_const_lv8_8 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_const_lv10_4 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_const_lv11_7FE : STD_LOGIC_VECTOR (10 downto 0) := "11111111110";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv10_8 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv11_7FB : STD_LOGIC_VECTOR (10 downto 0) := "11111111011";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal pX_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sX_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_1_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_1_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_1_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_1_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_1_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_data_V_1_8 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal data_V_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln78_reg_1008 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln272_2_reg_1108 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_4_V_blk_n : STD_LOGIC;
    signal res_V_data_5_V_blk_n : STD_LOGIC;
    signal res_V_data_6_V_blk_n : STD_LOGIC;
    signal res_V_data_7_V_blk_n : STD_LOGIC;
    signal res_V_data_8_V_blk_n : STD_LOGIC;
    signal res_V_data_9_V_blk_n : STD_LOGIC;
    signal res_V_data_10_V_blk_n : STD_LOGIC;
    signal res_V_data_11_V_blk_n : STD_LOGIC;
    signal res_V_data_12_V_blk_n : STD_LOGIC;
    signal res_V_data_13_V_blk_n : STD_LOGIC;
    signal res_V_data_14_V_blk_n : STD_LOGIC;
    signal res_V_data_15_V_blk_n : STD_LOGIC;
    signal icmp_ln78_fu_270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln78_fu_276_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln78_reg_1012 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_data_0_V_reg_1017 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_1_6_ret_reg_1022 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal kernel_data_V_1_3_ret_reg_1028 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_1_0_ret_reg_1034 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_1_1_ret_reg_1039 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_1_2_ret_reg_1046 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_1_4_ret_reg_1051 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_1_5_ret_reg_1056 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_1_7_ret_reg_1063 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_data_V_1_8_ret_reg_1069 : STD_LOGIC_VECTOR (7 downto 0);
    signal sX_2_load_reg_1076 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln272_fu_388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln272_reg_1081 : STD_LOGIC_VECTOR (0 downto 0);
    signal sY_2_load_reg_1086 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln272_1_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln272_1_reg_1091 : STD_LOGIC_VECTOR (0 downto 0);
    signal pY_2_load_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal pX_2_load_reg_1102 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln272_2_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_reg_1112 : STD_LOGIC_VECTOR (10 downto 0);
    signal lshr_ln708_s_reg_1117 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln708_2_reg_1122 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_s_reg_1127 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_29_reg_1132 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_31_reg_1137 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_2000_fu_720_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln703_2000_reg_1142 : STD_LOGIC_VECTOR (10 downto 0);
    signal acc_1_V_fu_736_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal acc_1_V_reg_1147 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_2012_fu_742_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln703_2012_reg_1152 : STD_LOGIC_VECTOR (10 downto 0);
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_start : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_done : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_idle : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_ready : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_4 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_5 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_7 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_8 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten_reg_234 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal io_acc_block_signal_op157 : STD_LOGIC;
    signal ap_predicate_op157_write_state6 : BOOLEAN;
    signal ap_block_state6 : BOOLEAN;
    signal select_ln303_fu_988_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_storemerge_i_i_phi_fu_248_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln293_fu_921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln297_fu_967_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln306_fu_926_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln308_fu_942_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln301_fu_972_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_4_V_fu_883_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_408_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_2008_fu_428_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln272_4_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln272_5_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln272_1_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln272_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln708_1_fu_465_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln708_1_fu_462_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln708_2_fu_472_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln708_fu_476_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal lshr_ln_fu_482_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1118_fu_499_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_fu_505_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1116_fu_496_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1118_1_fu_509_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln708_2_fu_525_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln708_4_fu_543_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln708_3_fu_536_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln708_5_fu_550_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln708_fu_554_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal lshr_ln708_1_fu_570_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln708_5_fu_586_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln708_6_fu_597_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln708_8_fu_583_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln708_10_fu_604_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln708_1_fu_608_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln1118_2_fu_624_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln708_8_fu_643_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln708_14_fu_640_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln708_15_fu_650_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln708_2_fu_654_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln708_16_fu_670_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1118_3_fu_673_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln708_30_fu_679_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln2_fu_693_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1118_1_fu_700_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln1118_4_fu_704_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln708_3_fu_492_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln708_7_fu_579_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln703_2003_fu_726_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln703_1_fu_732_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln708_9_fu_593_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_1999_fu_689_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln708_4_fu_532_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln_fu_748_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal lshr_ln708_3_fu_771_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln708_7_fu_784_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln708_9_fu_795_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln708_fu_755_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal acc_9_V_fu_809_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln708_6_fu_762_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal acc_2_V_fu_823_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln708_11_fu_765_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal acc_11_V_fu_838_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln708_12_fu_780_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_data_0_V_4_fu_849_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln708_13_fu_791_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln708_fu_759_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal acc_12_V_fu_867_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal acc_4_V_fu_877_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln703_fu_820_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln703_1381_fu_889_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln703_1378_fu_806_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal acc_8_V_fu_899_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1118_fu_802_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln708_1_fu_768_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal acc_14_V_fu_910_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln308_fu_937_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln303_fu_983_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_condition_836 : BOOLEAN;
    signal ap_condition_271 : BOOLEAN;
    signal ap_condition_323 : BOOLEAN;

    component shift_line_buffer_array_ap_ufixed_1u_config2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_elem_data_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_2_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_4_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_5_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_7_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kernel_window_8_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;



begin
    call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255 : component shift_line_buffer_array_ap_ufixed_1u_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_start,
        ap_done => call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_done,
        ap_idle => call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_idle,
        ap_ready => call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_ready,
        in_elem_data_V_read => tmp_data_0_V_reg_1017,
        kernel_window_1_V_read => kernel_data_V_1_1,
        kernel_window_2_V_read => kernel_data_V_1_2,
        kernel_window_4_V_read => kernel_data_V_1_4,
        kernel_window_5_V_read => kernel_data_V_1_5,
        kernel_window_7_V_read => kernel_data_V_1_7,
        kernel_window_8_V_read => kernel_data_V_1_8,
        ap_return_0 => call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_0,
        ap_return_1 => call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_1,
        ap_return_2 => call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_2,
        ap_return_3 => call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_3,
        ap_return_4 => call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_4,
        ap_return_5 => call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_5,
        ap_return_6 => call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_6,
        ap_return_7 => call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_7,
        ap_return_8 => call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_8,
        ap_ce => ap_const_logic_1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln78_reg_1008 = ap_const_lv1_0))) then 
                indvar_flatten_reg_234 <= add_ln78_reg_1012;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_234 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    pX_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_271)) then
                if ((icmp_ln293_fu_921_p2 = ap_const_lv1_1)) then 
                    pX_2 <= ap_const_lv32_0;
                elsif ((icmp_ln293_fu_921_p2 = ap_const_lv1_0)) then 
                    pX_2 <= add_ln306_fu_926_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_323)) then
                if ((icmp_ln297_fu_967_p2 = ap_const_lv1_1)) then 
                    pY_2 <= ap_const_lv32_0;
                elsif ((icmp_ln297_fu_967_p2 = ap_const_lv1_0)) then 
                    pY_2 <= add_ln301_fu_972_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_271)) then
                if ((icmp_ln293_fu_921_p2 = ap_const_lv1_1)) then 
                    sX_2 <= ap_const_lv32_0;
                elsif ((icmp_ln293_fu_921_p2 = ap_const_lv1_0)) then 
                    sX_2 <= select_ln308_fu_942_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = and_ln272_2_fu_456_p2))) then
                acc_1_V_reg_1147 <= acc_1_V_fu_736_p2;
                add_ln703_2000_reg_1142 <= add_ln703_2000_fu_720_p2;
                add_ln703_2012_reg_1152 <= add_ln703_2012_fu_742_p2;
                lshr_ln708_2_reg_1122 <= add_ln708_1_fu_608_p2(10 downto 1);
                lshr_ln708_s_reg_1117 <= sub_ln708_fu_554_p2(10 downto 1);
                trunc_ln708_29_reg_1132 <= add_ln708_2_fu_654_p2(10 downto 1);
                trunc_ln708_31_reg_1137 <= sub_ln1118_4_fu_704_p2(10 downto 1);
                trunc_ln708_s_reg_1127 <= sub_ln1118_2_fu_624_p2(10 downto 1);
                trunc_ln_reg_1112 <= sub_ln1118_1_fu_509_p2(11 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln78_reg_1012 <= add_ln78_fu_276_p2;
                icmp_ln78_reg_1008 <= icmp_ln78_fu_270_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                and_ln272_2_reg_1108 <= and_ln272_2_fu_456_p2;
                icmp_ln272_1_reg_1091 <= icmp_ln272_1_fu_398_p2;
                icmp_ln272_reg_1081 <= icmp_ln272_fu_388_p2;
                pX_2_load_reg_1102 <= pX_2;
                pY_2_load_reg_1096 <= pY_2;
                sX_2_load_reg_1076 <= sX_2;
                sY_2_load_reg_1086 <= sY_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                kernel_data_V_1_0_ret_reg_1034 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_0;
                kernel_data_V_1_1 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_3;
                kernel_data_V_1_1_ret_reg_1039 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_3;
                kernel_data_V_1_2 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_4;
                kernel_data_V_1_2_ret_reg_1046 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_4;
                kernel_data_V_1_3_ret_reg_1028 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_1;
                kernel_data_V_1_4 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_5;
                kernel_data_V_1_4_ret_reg_1051 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_5;
                kernel_data_V_1_5 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_6;
                kernel_data_V_1_5_ret_reg_1056 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_6;
                kernel_data_V_1_6_ret_reg_1022 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_2;
                kernel_data_V_1_7 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_7;
                kernel_data_V_1_7_ret_reg_1063 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_7;
                kernel_data_V_1_8 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_8;
                kernel_data_V_1_8_ret_reg_1069 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_return_8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln293_fu_921_p2 = ap_const_lv1_1) and (icmp_ln78_reg_1008 = ap_const_lv1_0))) then
                sY_2 <= ap_phi_mux_storemerge_i_i_phi_fu_248_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((data_V_data_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_data_0_V_reg_1017 <= data_V_data_V_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, data_V_data_V_empty_n, ap_CS_fsm_state3, ap_CS_fsm_state6, icmp_ln78_fu_270_p2, ap_CS_fsm_state2, io_acc_block_signal_op157, ap_predicate_op157_write_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln78_fu_270_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state3 => 
                if (((data_V_data_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if ((not(((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    acc_11_V_fu_838_p2 <= std_logic_vector(unsigned(zext_ln708_11_fu_765_p1) + unsigned(ap_const_lv11_7FE));
    acc_12_V_fu_867_p2 <= std_logic_vector(unsigned(trunc_ln708_29_reg_1132) + unsigned(ap_const_lv10_8));
    acc_14_V_fu_910_p2 <= std_logic_vector(unsigned(zext_ln1118_fu_802_p1) + unsigned(sext_ln708_1_fu_768_p1));
    acc_1_V_fu_736_p2 <= std_logic_vector(unsigned(zext_ln703_1_fu_732_p1) + unsigned(zext_ln708_9_fu_593_p1));
    acc_2_V_fu_823_p2 <= std_logic_vector(unsigned(zext_ln708_6_fu_762_p1) + unsigned(ap_const_lv11_7FE));
    acc_4_V_fu_877_p2 <= (shl_ln708_9_fu_795_p3 or ap_const_lv9_1);
    acc_8_V_fu_899_p2 <= std_logic_vector(signed(sext_ln703_1378_fu_806_p1) + signed(ap_const_lv11_7FB));
    acc_9_V_fu_809_p2 <= std_logic_vector(unsigned(zext_ln708_fu_755_p1) + unsigned(ap_const_lv10_4));
    add_ln301_fu_972_p2 <= std_logic_vector(unsigned(pY_2_load_reg_1096) + unsigned(ap_const_lv32_1));
    add_ln303_fu_983_p2 <= std_logic_vector(unsigned(sY_2_load_reg_1086) + unsigned(ap_const_lv32_1));
    add_ln306_fu_926_p2 <= std_logic_vector(unsigned(pX_2_load_reg_1102) + unsigned(ap_const_lv32_1));
    add_ln308_fu_937_p2 <= std_logic_vector(unsigned(sX_2_load_reg_1076) + unsigned(ap_const_lv32_1));
    add_ln703_2000_fu_720_p2 <= std_logic_vector(unsigned(zext_ln708_3_fu_492_p1) + unsigned(ap_const_lv11_7EB));
    add_ln703_2003_fu_726_p2 <= std_logic_vector(unsigned(zext_ln708_7_fu_579_p1) + unsigned(ap_const_lv8_8));
    add_ln703_2012_fu_742_p2 <= std_logic_vector(signed(sext_ln1118_1999_fu_689_p1) + signed(zext_ln708_4_fu_532_p1));
    add_ln708_1_fu_608_p2 <= std_logic_vector(unsigned(zext_ln708_8_fu_583_p1) + unsigned(zext_ln708_10_fu_604_p1));
    add_ln708_2_fu_654_p2 <= std_logic_vector(unsigned(zext_ln708_14_fu_640_p1) + unsigned(zext_ln708_15_fu_650_p1));
    add_ln708_fu_476_p2 <= std_logic_vector(unsigned(zext_ln708_1_fu_462_p1) + unsigned(zext_ln708_2_fu_472_p1));
    add_ln78_fu_276_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_234) + unsigned(ap_const_lv10_1));
    and_ln272_1_fu_450_p2 <= (icmp_ln272_5_fu_438_p2 and icmp_ln272_4_fu_418_p2);
    and_ln272_2_fu_456_p2 <= (and_ln272_fu_444_p2 and and_ln272_1_fu_450_p2);
    and_ln272_fu_444_p2 <= (icmp_ln272_fu_388_p2 and icmp_ln272_1_fu_398_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state6_assign_proc : process(io_acc_block_signal_op157, ap_predicate_op157_write_state6)
    begin
                ap_block_state6 <= ((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1));
    end process;


    ap_condition_271_assign_proc : process(ap_CS_fsm_state6, icmp_ln78_reg_1008, io_acc_block_signal_op157, ap_predicate_op157_write_state6)
    begin
                ap_condition_271 <= (not(((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln78_reg_1008 = ap_const_lv1_0));
    end process;


    ap_condition_323_assign_proc : process(ap_CS_fsm_state6, icmp_ln78_reg_1008, io_acc_block_signal_op157, ap_predicate_op157_write_state6, icmp_ln293_fu_921_p2)
    begin
                ap_condition_323 <= (not(((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln293_fu_921_p2 = ap_const_lv1_1) and (icmp_ln78_reg_1008 = ap_const_lv1_0));
    end process;


    ap_condition_836_assign_proc : process(ap_CS_fsm_state6, icmp_ln78_reg_1008, icmp_ln293_fu_921_p2)
    begin
                ap_condition_836 <= ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln293_fu_921_p2 = ap_const_lv1_1) and (icmp_ln78_reg_1008 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_storemerge_i_i_phi_fu_248_p4_assign_proc : process(select_ln303_fu_988_p3, icmp_ln297_fu_967_p2, ap_condition_836)
    begin
        if ((ap_const_boolean_1 = ap_condition_836)) then
            if ((icmp_ln297_fu_967_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_storemerge_i_i_phi_fu_248_p4 <= ap_const_lv32_0;
            elsif ((icmp_ln297_fu_967_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_storemerge_i_i_phi_fu_248_p4 <= select_ln303_fu_988_p3;
            else 
                ap_phi_mux_storemerge_i_i_phi_fu_248_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_storemerge_i_i_phi_fu_248_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_predicate_op157_write_state6_assign_proc : process(icmp_ln78_reg_1008, and_ln272_2_reg_1108)
    begin
                ap_predicate_op157_write_state6 <= ((ap_const_lv1_1 = and_ln272_2_reg_1108) and (icmp_ln78_reg_1008 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;

    call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_start_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_start <= ap_const_logic_1;
        else 
            call_ret_shift_line_buffer_array_ap_ufixed_1u_config2_s_fu_255_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_V_blk_n_assign_proc : process(data_V_data_V_empty_n, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            data_V_data_V_blk_n <= data_V_data_V_empty_n;
        else 
            data_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_V_read_assign_proc : process(data_V_data_V_empty_n, ap_CS_fsm_state3)
    begin
        if (((data_V_data_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            data_V_data_V_read <= ap_const_logic_1;
        else 
            data_V_data_V_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln272_1_fu_398_p2 <= "1" when (sY_2 = ap_const_lv32_2) else "0";
    icmp_ln272_4_fu_418_p2 <= "1" when (signed(tmp_fu_408_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln272_5_fu_438_p2 <= "1" when (signed(tmp_2008_fu_428_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln272_fu_388_p2 <= "1" when (sX_2 = ap_const_lv32_2) else "0";
    icmp_ln293_fu_921_p2 <= "1" when (pX_2_load_reg_1102 = ap_const_lv32_1B) else "0";
    icmp_ln297_fu_967_p2 <= "1" when (pY_2_load_reg_1096 = ap_const_lv32_1B) else "0";
    icmp_ln78_fu_270_p2 <= "1" when (indvar_flatten_reg_234 = ap_const_lv10_310) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op157 <= (res_V_data_9_V_full_n and res_V_data_8_V_full_n and res_V_data_7_V_full_n and res_V_data_6_V_full_n and res_V_data_5_V_full_n and res_V_data_4_V_full_n and res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_15_V_full_n and res_V_data_14_V_full_n and res_V_data_13_V_full_n and res_V_data_12_V_full_n and res_V_data_11_V_full_n and res_V_data_10_V_full_n and res_V_data_0_V_full_n);
    lshr_ln708_1_fu_570_p4 <= kernel_data_V_1_4_ret_reg_1051(7 downto 1);
    lshr_ln708_3_fu_771_p4 <= kernel_data_V_1_6_ret_reg_1022(7 downto 1);
    lshr_ln_fu_482_p4 <= add_ln708_fu_476_p2(10 downto 1);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_CS_fsm_state6, icmp_ln78_reg_1008, and_ln272_2_reg_1108)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln272_2_reg_1108) and (icmp_ln78_reg_1008 = ap_const_lv1_0))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_0_V_4_fu_849_p2),12));

    res_V_data_0_V_write_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op157, ap_predicate_op157_write_state6)
    begin
        if ((not(((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_10_V_blk_n_assign_proc : process(res_V_data_10_V_full_n, ap_CS_fsm_state6, icmp_ln78_reg_1008, and_ln272_2_reg_1108)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln272_2_reg_1108) and (icmp_ln78_reg_1008 = ap_const_lv1_0))) then 
            res_V_data_10_V_blk_n <= res_V_data_10_V_full_n;
        else 
            res_V_data_10_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_10_V_din <= tmp_data_4_V_fu_883_p1;

    res_V_data_10_V_write_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op157, ap_predicate_op157_write_state6)
    begin
        if ((not(((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) then 
            res_V_data_10_V_write <= ap_const_logic_1;
        else 
            res_V_data_10_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_11_V_blk_n_assign_proc : process(res_V_data_11_V_full_n, ap_CS_fsm_state6, icmp_ln78_reg_1008, and_ln272_2_reg_1108)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln272_2_reg_1108) and (icmp_ln78_reg_1008 = ap_const_lv1_0))) then 
            res_V_data_11_V_blk_n <= res_V_data_11_V_full_n;
        else 
            res_V_data_11_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_11_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_11_V_fu_838_p2),12));


    res_V_data_11_V_write_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op157, ap_predicate_op157_write_state6)
    begin
        if ((not(((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) then 
            res_V_data_11_V_write <= ap_const_logic_1;
        else 
            res_V_data_11_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_12_V_blk_n_assign_proc : process(res_V_data_12_V_full_n, ap_CS_fsm_state6, icmp_ln78_reg_1008, and_ln272_2_reg_1108)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln272_2_reg_1108) and (icmp_ln78_reg_1008 = ap_const_lv1_0))) then 
            res_V_data_12_V_blk_n <= res_V_data_12_V_full_n;
        else 
            res_V_data_12_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_12_V_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(acc_12_V_fu_867_p2),12));

    res_V_data_12_V_write_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op157, ap_predicate_op157_write_state6)
    begin
        if ((not(((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) then 
            res_V_data_12_V_write <= ap_const_logic_1;
        else 
            res_V_data_12_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_13_V_blk_n_assign_proc : process(res_V_data_13_V_full_n, ap_CS_fsm_state6, icmp_ln78_reg_1008, and_ln272_2_reg_1108)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln272_2_reg_1108) and (icmp_ln78_reg_1008 = ap_const_lv1_0))) then 
            res_V_data_13_V_blk_n <= res_V_data_13_V_full_n;
        else 
            res_V_data_13_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_13_V_din <= std_logic_vector(unsigned(zext_ln708_13_fu_791_p1) + unsigned(sext_ln708_fu_759_p1));

    res_V_data_13_V_write_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op157, ap_predicate_op157_write_state6)
    begin
        if ((not(((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) then 
            res_V_data_13_V_write <= ap_const_logic_1;
        else 
            res_V_data_13_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_14_V_blk_n_assign_proc : process(res_V_data_14_V_full_n, ap_CS_fsm_state6, icmp_ln78_reg_1008, and_ln272_2_reg_1108)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln272_2_reg_1108) and (icmp_ln78_reg_1008 = ap_const_lv1_0))) then 
            res_V_data_14_V_blk_n <= res_V_data_14_V_full_n;
        else 
            res_V_data_14_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_14_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_14_V_fu_910_p2),12));


    res_V_data_14_V_write_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op157, ap_predicate_op157_write_state6)
    begin
        if ((not(((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) then 
            res_V_data_14_V_write <= ap_const_logic_1;
        else 
            res_V_data_14_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_15_V_blk_n_assign_proc : process(res_V_data_15_V_full_n, ap_CS_fsm_state6, icmp_ln78_reg_1008, and_ln272_2_reg_1108)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln272_2_reg_1108) and (icmp_ln78_reg_1008 = ap_const_lv1_0))) then 
            res_V_data_15_V_blk_n <= res_V_data_15_V_full_n;
        else 
            res_V_data_15_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_15_V_din <= ap_const_lv12_0;

    res_V_data_15_V_write_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op157, ap_predicate_op157_write_state6)
    begin
        if ((not(((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) then 
            res_V_data_15_V_write <= ap_const_logic_1;
        else 
            res_V_data_15_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_CS_fsm_state6, icmp_ln78_reg_1008, and_ln272_2_reg_1108)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln272_2_reg_1108) and (icmp_ln78_reg_1008 = ap_const_lv1_0))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(acc_1_V_reg_1147),12));

    res_V_data_1_V_write_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op157, ap_predicate_op157_write_state6)
    begin
        if ((not(((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_CS_fsm_state6, icmp_ln78_reg_1008, and_ln272_2_reg_1108)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln272_2_reg_1108) and (icmp_ln78_reg_1008 = ap_const_lv1_0))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_2_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_2_V_fu_823_p2),12));


    res_V_data_2_V_write_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op157, ap_predicate_op157_write_state6)
    begin
        if ((not(((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_CS_fsm_state6, icmp_ln78_reg_1008, and_ln272_2_reg_1108)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln272_2_reg_1108) and (icmp_ln78_reg_1008 = ap_const_lv1_0))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= ap_const_lv12_0;

    res_V_data_3_V_write_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op157, ap_predicate_op157_write_state6)
    begin
        if ((not(((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_4_V_blk_n_assign_proc : process(res_V_data_4_V_full_n, ap_CS_fsm_state6, icmp_ln78_reg_1008, and_ln272_2_reg_1108)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln272_2_reg_1108) and (icmp_ln78_reg_1008 = ap_const_lv1_0))) then 
            res_V_data_4_V_blk_n <= res_V_data_4_V_full_n;
        else 
            res_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_4_V_din <= tmp_data_4_V_fu_883_p1;

    res_V_data_4_V_write_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op157, ap_predicate_op157_write_state6)
    begin
        if ((not(((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) then 
            res_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_5_V_blk_n_assign_proc : process(res_V_data_5_V_full_n, ap_CS_fsm_state6, icmp_ln78_reg_1008, and_ln272_2_reg_1108)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln272_2_reg_1108) and (icmp_ln78_reg_1008 = ap_const_lv1_0))) then 
            res_V_data_5_V_blk_n <= res_V_data_5_V_full_n;
        else 
            res_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_5_V_din <= std_logic_vector(signed(sext_ln703_fu_820_p1) + signed(sext_ln703_1381_fu_889_p1));

    res_V_data_5_V_write_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op157, ap_predicate_op157_write_state6)
    begin
        if ((not(((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) then 
            res_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_6_V_blk_n_assign_proc : process(res_V_data_6_V_full_n, ap_CS_fsm_state6, icmp_ln78_reg_1008, and_ln272_2_reg_1108)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln272_2_reg_1108) and (icmp_ln78_reg_1008 = ap_const_lv1_0))) then 
            res_V_data_6_V_blk_n <= res_V_data_6_V_full_n;
        else 
            res_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_6_V_din <= ap_const_lv12_0;

    res_V_data_6_V_write_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op157, ap_predicate_op157_write_state6)
    begin
        if ((not(((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) then 
            res_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_7_V_blk_n_assign_proc : process(res_V_data_7_V_full_n, ap_CS_fsm_state6, icmp_ln78_reg_1008, and_ln272_2_reg_1108)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln272_2_reg_1108) and (icmp_ln78_reg_1008 = ap_const_lv1_0))) then 
            res_V_data_7_V_blk_n <= res_V_data_7_V_full_n;
        else 
            res_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_7_V_din <= ap_const_lv12_FFA;

    res_V_data_7_V_write_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op157, ap_predicate_op157_write_state6)
    begin
        if ((not(((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) then 
            res_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_8_V_blk_n_assign_proc : process(res_V_data_8_V_full_n, ap_CS_fsm_state6, icmp_ln78_reg_1008, and_ln272_2_reg_1108)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln272_2_reg_1108) and (icmp_ln78_reg_1008 = ap_const_lv1_0))) then 
            res_V_data_8_V_blk_n <= res_V_data_8_V_full_n;
        else 
            res_V_data_8_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_8_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_8_V_fu_899_p2),12));


    res_V_data_8_V_write_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op157, ap_predicate_op157_write_state6)
    begin
        if ((not(((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) then 
            res_V_data_8_V_write <= ap_const_logic_1;
        else 
            res_V_data_8_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_9_V_blk_n_assign_proc : process(res_V_data_9_V_full_n, ap_CS_fsm_state6, icmp_ln78_reg_1008, and_ln272_2_reg_1108)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln272_2_reg_1108) and (icmp_ln78_reg_1008 = ap_const_lv1_0))) then 
            res_V_data_9_V_blk_n <= res_V_data_9_V_full_n;
        else 
            res_V_data_9_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_9_V_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(acc_9_V_fu_809_p2),12));

    res_V_data_9_V_write_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op157, ap_predicate_op157_write_state6)
    begin
        if ((not(((io_acc_block_signal_op157 = ap_const_logic_0) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_op157_write_state6 = ap_const_boolean_1))) then 
            res_V_data_9_V_write <= ap_const_logic_1;
        else 
            res_V_data_9_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln303_fu_988_p3 <= 
        ap_const_lv32_2 when (icmp_ln272_1_reg_1091(0) = '1') else 
        add_ln303_fu_983_p2;
    select_ln308_fu_942_p3 <= 
        ap_const_lv32_2 when (icmp_ln272_reg_1081(0) = '1') else 
        add_ln308_fu_937_p2;
        sext_ln1118_1999_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_30_fu_679_p4),11));

        sext_ln1118_fu_505_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1118_fu_499_p2),12));

        sext_ln703_1378_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_31_reg_1137),11));

        sext_ln703_1381_fu_889_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_2012_reg_1152),12));

        sext_ln703_fu_820_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_2000_reg_1142),12));

        sext_ln708_1_fu_768_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_s_reg_1127),11));

        sext_ln708_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_1112),12));

    shl_ln2_fu_693_p3 <= (kernel_data_V_1_8_ret_reg_1069 & ap_const_lv2_0);
    shl_ln708_1_fu_465_p3 <= (kernel_data_V_1_1_ret_reg_1039 & ap_const_lv2_0);
    shl_ln708_2_fu_525_p3 <= (kernel_data_V_1_2_ret_reg_1046 & ap_const_lv1_0);
    shl_ln708_3_fu_536_p3 <= (kernel_data_V_1_3_ret_reg_1028 & ap_const_lv3_0);
    shl_ln708_4_fu_543_p3 <= (kernel_data_V_1_3_ret_reg_1028 & ap_const_lv1_0);
    shl_ln708_5_fu_586_p3 <= (kernel_data_V_1_5_ret_reg_1056 & ap_const_lv1_0);
    shl_ln708_6_fu_597_p3 <= (kernel_data_V_1_5_ret_reg_1056 & ap_const_lv2_0);
    shl_ln708_7_fu_784_p3 <= (kernel_data_V_1_6_ret_reg_1022 & ap_const_lv1_0);
    shl_ln708_8_fu_643_p3 <= (kernel_data_V_1_7_ret_reg_1063 & ap_const_lv2_0);
    shl_ln708_9_fu_795_p3 <= (kernel_data_V_1_8_ret_reg_1069 & ap_const_lv1_0);
    shl_ln_fu_748_p3 <= (kernel_data_V_1_0_ret_reg_1034 & ap_const_lv1_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln1118_1_fu_509_p2 <= std_logic_vector(signed(sext_ln1118_fu_505_p1) - signed(zext_ln1116_fu_496_p1));
    sub_ln1118_2_fu_624_p2 <= std_logic_vector(unsigned(ap_const_lv11_0) - unsigned(zext_ln708_10_fu_604_p1));
    sub_ln1118_3_fu_673_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(zext_ln708_16_fu_670_p1));
    sub_ln1118_4_fu_704_p2 <= std_logic_vector(unsigned(ap_const_lv11_0) - unsigned(zext_ln1118_1_fu_700_p1));
    sub_ln1118_fu_499_p2 <= std_logic_vector(unsigned(ap_const_lv11_0) - unsigned(zext_ln708_2_fu_472_p1));
    sub_ln708_fu_554_p2 <= std_logic_vector(unsigned(shl_ln708_3_fu_536_p3) - unsigned(zext_ln708_5_fu_550_p1));
    tmp_2008_fu_428_p4 <= pX_2(31 downto 1);
    tmp_data_0_V_4_fu_849_p2 <= std_logic_vector(unsigned(zext_ln708_12_fu_780_p1) + unsigned(ap_const_lv8_6));
    tmp_data_4_V_fu_883_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(acc_4_V_fu_877_p2),12));
    tmp_fu_408_p4 <= pY_2(31 downto 1);
    trunc_ln708_30_fu_679_p4 <= sub_ln1118_3_fu_673_p2(8 downto 1);
    zext_ln1116_fu_496_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_data_V_1_1_ret_reg_1039),12));
    zext_ln1118_1_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2_fu_693_p3),11));
    zext_ln1118_fu_802_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln708_9_fu_795_p3),11));
    zext_ln703_1_fu_732_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_2003_fu_726_p2),10));
    zext_ln708_10_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln708_6_fu_597_p3),11));
    zext_ln708_11_fu_765_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln708_2_reg_1122),11));
    zext_ln708_12_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln708_3_fu_771_p4),8));
    zext_ln708_13_fu_791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln708_7_fu_784_p3),12));
    zext_ln708_14_fu_640_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_data_V_1_7_ret_reg_1063),11));
    zext_ln708_15_fu_650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln708_8_fu_643_p3),11));
    zext_ln708_16_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_data_V_1_8_ret_reg_1069),9));
    zext_ln708_1_fu_462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_data_V_1_1_ret_reg_1039),11));
    zext_ln708_2_fu_472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln708_1_fu_465_p3),11));
    zext_ln708_3_fu_492_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_482_p4),11));
    zext_ln708_4_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln708_2_fu_525_p3),11));
    zext_ln708_5_fu_550_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln708_4_fu_543_p3),11));
    zext_ln708_6_fu_762_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln708_s_reg_1117),11));
    zext_ln708_7_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln708_1_fu_570_p4),8));
    zext_ln708_8_fu_583_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_data_V_1_5_ret_reg_1056),11));
    zext_ln708_9_fu_593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln708_5_fu_586_p3),10));
    zext_ln708_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_748_p3),10));
end behav;
