

================================================================
== Vivado HLS Report for 'Loop_2_proc'
================================================================
* Date:           Mon Dec  6 16:55:32 2021

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        myproject_prj
* Solution:       solution1
* Product family: virtexuplus
* Target device:  xcu50-fsvh2104-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  | 3.33 ns | 2.730 ns |   0.42 ns  |
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       41|       41| 0.137 us | 0.137 us |   41|   41|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |       40|       40|         4|          -|          -|    10|    no    |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.60>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1* %out_last_V, float* %out_data, [5 x i8]* @p_str4, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2)"   --->   Operation 6 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%p_read_1 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %p_read)"   --->   Operation 7 'read' 'p_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.60ns)   --->   "br label %0"   --->   Operation 8 'br' <Predicate = true> <Delay = 0.60>

State 2 <SV = 1> <Delay = 2.48>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%j3_0_i = phi i4 [ 0, %entry ], [ %j, %._crit_edge.i_ifconv ]"   --->   Operation 9 'phi' 'j3_0_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (0.65ns)   --->   "%icmp_ln37 = icmp eq i4 %j3_0_i, -6" [firmware/myproject_axi.cpp:37]   --->   Operation 10 'icmp' 'icmp_ln37' <Predicate = true> <Delay = 0.65> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 11 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.70ns)   --->   "%j = add i4 %j3_0_i, 1" [firmware/myproject_axi.cpp:37]   --->   Operation 12 'add' 'j' <Predicate = true> <Delay = 0.70> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "br i1 %icmp_ln37, label %Loop_2_proc.exit, label %._crit_edge.i_ifconv" [firmware/myproject_axi.cpp:37]   --->   Operation 13 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.65ns)   --->   "%icmp_ln38 = icmp eq i4 %j3_0_i, -7" [firmware/myproject_axi.cpp:38]   --->   Operation 14 'icmp' 'icmp_ln38' <Predicate = (!icmp_ln37)> <Delay = 0.65> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 15 [1/1] (0.12ns)   --->   "%last = and i1 %icmp_ln38, %p_read_1" [firmware/myproject_axi.cpp:38]   --->   Operation 15 'and' 'last' <Predicate = (!icmp_ln37)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%tmp_data_V_0_read = call i16 @_ssdm_op_Read.ap_auto.i16P(i16* %tmp_data_V_0)" [firmware/myproject_axi.cpp:39]   --->   Operation 16 'read' 'tmp_data_V_0_read' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%tmp_data_V_1_read = call i16 @_ssdm_op_Read.ap_auto.i16P(i16* %tmp_data_V_1)" [firmware/myproject_axi.cpp:39]   --->   Operation 17 'read' 'tmp_data_V_1_read' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%tmp_data_V_2_read = call i16 @_ssdm_op_Read.ap_auto.i16P(i16* %tmp_data_V_2)" [firmware/myproject_axi.cpp:39]   --->   Operation 18 'read' 'tmp_data_V_2_read' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%tmp_data_V_3_read = call i16 @_ssdm_op_Read.ap_auto.i16P(i16* %tmp_data_V_3)" [firmware/myproject_axi.cpp:39]   --->   Operation 19 'read' 'tmp_data_V_3_read' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_data_V_4_read = call i16 @_ssdm_op_Read.ap_auto.i16P(i16* %tmp_data_V_4)" [firmware/myproject_axi.cpp:39]   --->   Operation 20 'read' 'tmp_data_V_4_read' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%tmp_data_V_5_read = call i16 @_ssdm_op_Read.ap_auto.i16P(i16* %tmp_data_V_5)" [firmware/myproject_axi.cpp:39]   --->   Operation 21 'read' 'tmp_data_V_5_read' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%tmp_data_V_6_read = call i16 @_ssdm_op_Read.ap_auto.i16P(i16* %tmp_data_V_6)" [firmware/myproject_axi.cpp:39]   --->   Operation 22 'read' 'tmp_data_V_6_read' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%tmp_data_V_7_read = call i16 @_ssdm_op_Read.ap_auto.i16P(i16* %tmp_data_V_7)" [firmware/myproject_axi.cpp:39]   --->   Operation 23 'read' 'tmp_data_V_7_read' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_data_V_8_read = call i16 @_ssdm_op_Read.ap_auto.i16P(i16* %tmp_data_V_8)" [firmware/myproject_axi.cpp:39]   --->   Operation 24 'read' 'tmp_data_V_8_read' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%tmp_data_V_9_read = call i16 @_ssdm_op_Read.ap_auto.i16P(i16* %tmp_data_V_9)" [firmware/myproject_axi.cpp:39]   --->   Operation 25 'read' 'tmp_data_V_9_read' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.61ns)   --->   "%tmp_V_3 = call i16 @_ssdm_op_Mux.ap_auto.10i16.i4(i16 %tmp_data_V_0_read, i16 %tmp_data_V_1_read, i16 %tmp_data_V_2_read, i16 %tmp_data_V_3_read, i16 %tmp_data_V_4_read, i16 %tmp_data_V_5_read, i16 %tmp_data_V_6_read, i16 %tmp_data_V_7_read, i16 %tmp_data_V_8_read, i16 %tmp_data_V_9_read, i4 %j3_0_i)" [firmware/myproject_axi.cpp:39]   --->   Operation 26 'mux' 'tmp_V_3' <Predicate = (!icmp_ln37)> <Delay = 0.61> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.67ns)   --->   "%icmp_ln935 = icmp eq i16 %tmp_V_3, 0" [firmware/myproject_axi.cpp:39]   --->   Operation 27 'icmp' 'icmp_ln935' <Predicate = (!icmp_ln37)> <Delay = 0.67> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%p_Result_16 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %tmp_V_3, i32 15)" [firmware/myproject_axi.cpp:39]   --->   Operation 28 'bitselect' 'p_Result_16' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.78ns)   --->   "%tmp_V = sub i16 0, %tmp_V_3" [firmware/myproject_axi.cpp:39]   --->   Operation 29 'sub' 'tmp_V' <Predicate = (!icmp_ln37)> <Delay = 0.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.24ns)   --->   "%tmp_V_4 = select i1 %p_Result_16, i16 %tmp_V, i16 %tmp_V_3" [firmware/myproject_axi.cpp:39]   --->   Operation 30 'select' 'tmp_V_4' <Predicate = (!icmp_ln37)> <Delay = 0.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%p_Result_s = call i16 @llvm.part.select.i16(i16 %tmp_V_4, i32 15, i32 0) nounwind" [firmware/myproject_axi.cpp:39]   --->   Operation 31 'partselect' 'p_Result_s' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%p_Result_17 = call i32 @_ssdm_op_BitConcatenate.i32.i16.i16(i16 -1, i16 %p_Result_s)" [firmware/myproject_axi.cpp:39]   --->   Operation 32 'bitconcatenate' 'p_Result_17' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.84ns)   --->   "%l = call i32 @llvm.cttz.i32(i32 %p_Result_17, i1 true) nounwind" [firmware/myproject_axi.cpp:39]   --->   Operation 33 'cttz' 'l' <Predicate = (!icmp_ln37)> <Delay = 0.84> <Core = "CTTZ">   --->   Core 64 'CTTZ' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'cttz'> <InPorts = 1> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%trunc_ln943 = trunc i32 %l to i8" [firmware/myproject_axi.cpp:39]   --->   Operation 34 'trunc' 'trunc_ln943' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "ret void"   --->   Operation 35 'ret' <Predicate = (icmp_ln37)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.72>
ST_3 : Operation 36 [1/1] (0.88ns)   --->   "%sub_ln944 = sub nsw i32 16, %l" [firmware/myproject_axi.cpp:39]   --->   Operation 36 'sub' 'sub_ln944' <Predicate = (!icmp_ln935)> <Delay = 0.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%trunc_ln944 = trunc i32 %sub_ln944 to i16" [firmware/myproject_axi.cpp:39]   --->   Operation 37 'trunc' 'trunc_ln944' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.88ns)   --->   "%lsb_index = add nsw i32 -24, %sub_ln944" [firmware/myproject_axi.cpp:39]   --->   Operation 38 'add' 'lsb_index' <Predicate = (!icmp_ln935)> <Delay = 0.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%tmp = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %lsb_index, i32 1, i32 31)" [firmware/myproject_axi.cpp:39]   --->   Operation 39 'partselect' 'tmp' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.84ns)   --->   "%icmp_ln947 = icmp sgt i31 %tmp, 0" [firmware/myproject_axi.cpp:39]   --->   Operation 40 'icmp' 'icmp_ln947' <Predicate = (!icmp_ln935)> <Delay = 0.84> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%trunc_ln947 = trunc i32 %sub_ln944 to i5" [firmware/myproject_axi.cpp:39]   --->   Operation 41 'trunc' 'trunc_ln947' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.70ns)   --->   "%sub_ln947 = sub i5 9, %trunc_ln947" [firmware/myproject_axi.cpp:39]   --->   Operation 42 'sub' 'sub_ln947' <Predicate = (!icmp_ln935)> <Delay = 0.70> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_1)   --->   "%zext_ln947 = zext i5 %sub_ln947 to i16" [firmware/myproject_axi.cpp:39]   --->   Operation 43 'zext' 'zext_ln947' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_1)   --->   "%lshr_ln947 = lshr i16 -1, %zext_ln947" [firmware/myproject_axi.cpp:39]   --->   Operation 44 'lshr' 'lshr_ln947' <Predicate = (!icmp_ln935)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_1)   --->   "%p_Result_13 = and i16 %tmp_V_4, %lshr_ln947" [firmware/myproject_axi.cpp:39]   --->   Operation 45 'and' 'p_Result_13' <Predicate = (!icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 46 [1/1] (0.67ns) (out node of the LUT)   --->   "%icmp_ln947_1 = icmp ne i16 %p_Result_13, 0" [firmware/myproject_axi.cpp:39]   --->   Operation 46 'icmp' 'icmp_ln947_1' <Predicate = (!icmp_ln935)> <Delay = 0.67> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node or_ln_i)   --->   "%a = and i1 %icmp_ln947, %icmp_ln947_1" [firmware/myproject_axi.cpp:39]   --->   Operation 47 'and' 'a' <Predicate = (!icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node or_ln_i)   --->   "%tmp_2009 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %lsb_index, i32 31)" [firmware/myproject_axi.cpp:39]   --->   Operation 48 'bitselect' 'tmp_2009' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node or_ln_i)   --->   "%xor_ln949 = xor i1 %tmp_2009, true" [firmware/myproject_axi.cpp:39]   --->   Operation 49 'xor' 'xor_ln949' <Predicate = (!icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (0.78ns)   --->   "%add_ln949 = add i16 -24, %trunc_ln944" [firmware/myproject_axi.cpp:39]   --->   Operation 50 'add' 'add_ln949' <Predicate = (!icmp_ln935)> <Delay = 0.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node or_ln_i)   --->   "%p_Result_14 = call i1 @_ssdm_op_BitSelect.i1.i16.i16(i16 %tmp_V_4, i16 %add_ln949)" [firmware/myproject_axi.cpp:39]   --->   Operation 51 'bitselect' 'p_Result_14' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node or_ln_i)   --->   "%and_ln949 = and i1 %p_Result_14, %xor_ln949" [firmware/myproject_axi.cpp:39]   --->   Operation 52 'and' 'and_ln949' <Predicate = (!icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node or_ln_i)   --->   "%or_ln949 = or i1 %and_ln949, %a" [firmware/myproject_axi.cpp:39]   --->   Operation 53 'or' 'or_ln949' <Predicate = (!icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 54 [1/1] (0.12ns) (out node of the LUT)   --->   "%or_ln_i = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 0, i1 %or_ln949)" [firmware/myproject_axi.cpp:39]   --->   Operation 54 'bitconcatenate' 'or_ln_i' <Predicate = (!icmp_ln935)> <Delay = 0.12>
ST_3 : Operation 55 [1/1] (0.85ns)   --->   "%icmp_ln958 = icmp sgt i32 %lsb_index, 0" [firmware/myproject_axi.cpp:39]   --->   Operation 55 'icmp' 'icmp_ln958' <Predicate = (!icmp_ln935)> <Delay = 0.85> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.88ns)   --->   "%add_ln958 = add nsw i32 -25, %sub_ln944" [firmware/myproject_axi.cpp:39]   --->   Operation 56 'add' 'add_ln958' <Predicate = (!icmp_ln935)> <Delay = 0.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 57 [1/1] (0.88ns)   --->   "%sub_ln958 = sub i32 25, %sub_ln944" [firmware/myproject_axi.cpp:39]   --->   Operation 57 'sub' 'sub_ln958' <Predicate = (!icmp_ln935)> <Delay = 0.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 2.51>
ST_4 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%m = zext i16 %tmp_V_4 to i64" [firmware/myproject_axi.cpp:39]   --->   Operation 58 'zext' 'm' <Predicate = (!icmp_ln958 & !icmp_ln935)> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%zext_ln957_1 = zext i16 %tmp_V_4 to i32" [firmware/myproject_axi.cpp:39]   --->   Operation 59 'zext' 'zext_ln957_1' <Predicate = (icmp_ln958 & !icmp_ln935)> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%lshr_ln958 = lshr i32 %zext_ln957_1, %add_ln958" [firmware/myproject_axi.cpp:39]   --->   Operation 60 'lshr' 'lshr_ln958' <Predicate = (icmp_ln958 & !icmp_ln935)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%zext_ln958 = zext i32 %lshr_ln958 to i64" [firmware/myproject_axi.cpp:39]   --->   Operation 61 'zext' 'zext_ln958' <Predicate = (icmp_ln958 & !icmp_ln935)> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%zext_ln958_1 = zext i32 %sub_ln958 to i64" [firmware/myproject_axi.cpp:39]   --->   Operation 62 'zext' 'zext_ln958_1' <Predicate = (!icmp_ln958 & !icmp_ln935)> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%shl_ln958 = shl i64 %m, %zext_ln958_1" [firmware/myproject_axi.cpp:39]   --->   Operation 63 'shl' 'shl_ln958' <Predicate = (!icmp_ln958 & !icmp_ln935)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%m_1 = select i1 %icmp_ln958, i64 %zext_ln958, i64 %shl_ln958" [firmware/myproject_axi.cpp:39]   --->   Operation 64 'select' 'm_1' <Predicate = (!icmp_ln935)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%zext_ln961 = zext i32 %or_ln_i to i64" [firmware/myproject_axi.cpp:39]   --->   Operation 65 'zext' 'zext_ln961' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (1.14ns) (out node of the LUT)   --->   "%m_2 = add i64 %zext_ln961, %m_1" [firmware/myproject_axi.cpp:39]   --->   Operation 66 'add' 'm_2' <Predicate = (!icmp_ln935)> <Delay = 1.14> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%m_5 = call i63 @_ssdm_op_PartSelect.i63.i64.i32.i32(i64 %m_2, i32 1, i32 63)" [firmware/myproject_axi.cpp:39]   --->   Operation 67 'partselect' 'm_5' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "%m_6 = zext i63 %m_5 to i64" [firmware/myproject_axi.cpp:39]   --->   Operation 68 'zext' 'm_6' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_2010 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %m_2, i32 25)" [firmware/myproject_axi.cpp:39]   --->   Operation 69 'bitselect' 'tmp_2010' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (0.30ns)   --->   "%select_ln964 = select i1 %tmp_2010, i8 127, i8 126" [firmware/myproject_axi.cpp:39]   --->   Operation 70 'select' 'select_ln964' <Predicate = (!icmp_ln935)> <Delay = 0.30> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 71 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln964 = sub i8 6, %trunc_ln943" [firmware/myproject_axi.cpp:39]   --->   Operation 71 'sub' 'sub_ln964' <Predicate = (!icmp_ln935)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 72 [1/1] (0.83ns) (root node of TernaryAdder)   --->   "%add_ln964 = add i8 %sub_ln964, %select_ln964" [firmware/myproject_axi.cpp:39]   --->   Operation 72 'add' 'add_ln964' <Predicate = (!icmp_ln935)> <Delay = 0.83> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "%tmp_2124_i = call i9 @_ssdm_op_BitConcatenate.i9.i1.i8(i1 %p_Result_16, i8 %add_ln964)" [firmware/myproject_axi.cpp:39]   --->   Operation 73 'bitconcatenate' 'tmp_2124_i' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_4 : Operation 74 [1/1] (0.00ns)   --->   "%p_Result_18 = call i64 @_ssdm_op_PartSet.i64.i64.i9.i32.i32(i64 %m_6, i9 %tmp_2124_i, i32 23, i32 31)" [firmware/myproject_axi.cpp:39]   --->   Operation 74 'partset' 'p_Result_18' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_4 : Operation 75 [1/1] (0.00ns)   --->   "%trunc_ln738 = trunc i64 %p_Result_18 to i32" [firmware/myproject_axi.cpp:39]   --->   Operation 75 'trunc' 'trunc_ln738' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%bitcast_ln739 = bitcast i32 %trunc_ln738 to float" [firmware/myproject_axi.cpp:39]   --->   Operation 76 'bitcast' 'bitcast_ln739' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (0.22ns)   --->   "%select_ln935 = select i1 %icmp_ln935, float 0.000000e+00, float %bitcast_ln739" [firmware/myproject_axi.cpp:39]   --->   Operation 77 'select' 'select_ln935' <Predicate = true> <Delay = 0.22> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 78 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i1P.floatP(i1* %out_last_V, float* %out_data, i1 %last, float %select_ln935)" [firmware/myproject_axi.h:23->firmware/myproject_axi.cpp:39]   --->   Operation 78 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 5 <SV = 4> <Delay = 0.00>
ST_5 : Operation 79 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i1P.floatP(i1* %out_last_V, float* %out_data, i1 %last, float %select_ln935)" [firmware/myproject_axi.h:23->firmware/myproject_axi.cpp:39]   --->   Operation 79 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_5 : Operation 80 [1/1] (0.00ns)   --->   "br label %0" [firmware/myproject_axi.cpp:37]   --->   Operation 80 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 3.33ns, clock uncertainty: 0.417ns.

 <State 1>: 0.603ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', firmware/myproject_axi.cpp:37) [18]  (0.603 ns)

 <State 2>: 2.49ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', firmware/myproject_axi.cpp:37) [18]  (0 ns)
	'mux' operation ('tmp.V', firmware/myproject_axi.cpp:39) [36]  (0.617 ns)
	'sub' operation ('tmp.V', firmware/myproject_axi.cpp:39) [39]  (0.785 ns)
	'select' operation ('tmp.V', firmware/myproject_axi.cpp:39) [40]  (0.243 ns)
	'cttz' operation ('l', firmware/myproject_axi.cpp:39) [43]  (0.84 ns)

 <State 3>: 2.73ns
The critical path consists of the following:
	'sub' operation ('sub_ln944', firmware/myproject_axi.cpp:39) [44]  (0.88 ns)
	'add' operation ('lsb_index', firmware/myproject_axi.cpp:39) [46]  (0.88 ns)
	'icmp' operation ('icmp_ln947', firmware/myproject_axi.cpp:39) [48]  (0.848 ns)
	'and' operation ('a', firmware/myproject_axi.cpp:39) [55]  (0 ns)
	'or' operation ('or_ln949', firmware/myproject_axi.cpp:39) [61]  (0 ns)
	blocking operation 0.122 ns on control path)

 <State 4>: 2.51ns
The critical path consists of the following:
	'shl' operation ('shl_ln958', firmware/myproject_axi.cpp:39) [71]  (0 ns)
	'select' operation ('m', firmware/myproject_axi.cpp:39) [72]  (0 ns)
	'add' operation ('m', firmware/myproject_axi.cpp:39) [74]  (1.15 ns)
	'select' operation ('select_ln964', firmware/myproject_axi.cpp:39) [78]  (0.303 ns)
	'add' operation ('add_ln964', firmware/myproject_axi.cpp:39) [81]  (0.838 ns)
	'select' operation ('select_ln935', firmware/myproject_axi.cpp:39) [86]  (0.227 ns)

 <State 5>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
