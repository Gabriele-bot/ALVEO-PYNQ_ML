-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity softmax_stable_array_array_softmax_config13_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    data_V_data_4_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    data_V_data_4_V_empty_n : IN STD_LOGIC;
    data_V_data_4_V_read : OUT STD_LOGIC;
    data_V_data_5_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    data_V_data_5_V_empty_n : IN STD_LOGIC;
    data_V_data_5_V_read : OUT STD_LOGIC;
    data_V_data_6_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    data_V_data_6_V_empty_n : IN STD_LOGIC;
    data_V_data_6_V_read : OUT STD_LOGIC;
    data_V_data_7_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    data_V_data_7_V_empty_n : IN STD_LOGIC;
    data_V_data_7_V_read : OUT STD_LOGIC;
    data_V_data_8_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    data_V_data_8_V_empty_n : IN STD_LOGIC;
    data_V_data_8_V_read : OUT STD_LOGIC;
    data_V_data_9_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    data_V_data_9_V_empty_n : IN STD_LOGIC;
    data_V_data_9_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC;
    res_V_data_4_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_4_V_full_n : IN STD_LOGIC;
    res_V_data_4_V_write : OUT STD_LOGIC;
    res_V_data_5_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_5_V_full_n : IN STD_LOGIC;
    res_V_data_5_V_write : OUT STD_LOGIC;
    res_V_data_6_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_6_V_full_n : IN STD_LOGIC;
    res_V_data_6_V_write : OUT STD_LOGIC;
    res_V_data_7_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_7_V_full_n : IN STD_LOGIC;
    res_V_data_7_V_write : OUT STD_LOGIC;
    res_V_data_8_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_8_V_full_n : IN STD_LOGIC;
    res_V_data_8_V_write : OUT STD_LOGIC;
    res_V_data_9_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_9_V_full_n : IN STD_LOGIC;
    res_V_data_9_V_write : OUT STD_LOGIC;
    data_V_data_0_V_blk_n : OUT STD_LOGIC;
    data_V_data_1_V_blk_n : OUT STD_LOGIC;
    data_V_data_2_V_blk_n : OUT STD_LOGIC;
    data_V_data_3_V_blk_n : OUT STD_LOGIC;
    data_V_data_4_V_blk_n : OUT STD_LOGIC;
    data_V_data_5_V_blk_n : OUT STD_LOGIC;
    data_V_data_6_V_blk_n : OUT STD_LOGIC;
    data_V_data_7_V_blk_n : OUT STD_LOGIC;
    data_V_data_8_V_blk_n : OUT STD_LOGIC;
    data_V_data_9_V_blk_n : OUT STD_LOGIC;
    res_V_data_0_V_blk_n : OUT STD_LOGIC;
    res_V_data_1_V_blk_n : OUT STD_LOGIC;
    res_V_data_2_V_blk_n : OUT STD_LOGIC;
    res_V_data_3_V_blk_n : OUT STD_LOGIC;
    res_V_data_4_V_blk_n : OUT STD_LOGIC;
    res_V_data_5_V_blk_n : OUT STD_LOGIC;
    res_V_data_6_V_blk_n : OUT STD_LOGIC;
    res_V_data_7_V_blk_n : OUT STD_LOGIC;
    res_V_data_8_V_blk_n : OUT STD_LOGIC;
    res_V_data_9_V_blk_n : OUT STD_LOGIC );
end;


architecture behav of softmax_stable_array_array_softmax_config13_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv10_1FF : STD_LOGIC_VECTOR (9 downto 0) := "0111111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal io_acc_block_signal_op14 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal io_acc_block_signal_op323 : STD_LOGIC;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exp_table1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce0 : STD_LOGIC;
    signal exp_table1_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_table1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce1 : STD_LOGIC;
    signal exp_table1_q1 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_table1_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce2 : STD_LOGIC;
    signal exp_table1_q2 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_table1_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce3 : STD_LOGIC;
    signal exp_table1_q3 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_table1_address4 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce4 : STD_LOGIC;
    signal exp_table1_q4 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_table1_address5 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce5 : STD_LOGIC;
    signal exp_table1_q5 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_table1_address6 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce6 : STD_LOGIC;
    signal exp_table1_q6 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_table1_address7 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce7 : STD_LOGIC;
    signal exp_table1_q7 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_table1_address8 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce8 : STD_LOGIC;
    signal exp_table1_q8 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_table1_address9 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce9 : STD_LOGIC;
    signal exp_table1_q9 : STD_LOGIC_VECTOR (11 downto 0);
    signal invert_table2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal invert_table2_ce0 : STD_LOGIC;
    signal invert_table2_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_0_V_reg_1958 : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_0_V_reg_1958_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_0_V_reg_1958_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_1_V_reg_1964 : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_1_V_reg_1964_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_1_V_reg_1964_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_2_V_reg_1970 : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_2_V_reg_1970_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_2_V_reg_1970_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_3_V_reg_1976 : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_3_V_reg_1976_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_3_V_reg_1976_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_4_V_reg_1982 : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_4_V_reg_1982_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_4_V_reg_1982_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_5_V_reg_1988 : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_5_V_reg_1988_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_5_V_reg_1988_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_6_V_reg_1994 : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_6_V_reg_1994_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_6_V_reg_1994_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_7_V_reg_2000 : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_7_V_reg_2000_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_7_V_reg_2000_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_8_V_reg_2006 : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_8_V_reg_2006_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_8_V_reg_2006_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_9_V_reg_2013 : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_9_V_reg_2013_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_9_V_reg_2013_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1496_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_reg_2020 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_1_fu_717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_1_reg_2025 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_3_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_3_reg_2030 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_4_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_4_reg_2035 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_2_fu_751_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln86_2_reg_2040 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln86_5_fu_775_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln86_5_reg_2046 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln86_6_fu_787_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln86_6_reg_2052 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln86_7_fu_797_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln86_7_reg_2057 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1496_8_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_8_reg_2062 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_V_fu_1394_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_reg_2067 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_1_fu_1428_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_1_reg_2072 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_2_fu_1462_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_2_reg_2077 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_3_fu_1496_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_3_reg_2082 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_4_fu_1530_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_4_reg_2087 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_4_reg_2087_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_5_fu_1564_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_5_reg_2092 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_5_reg_2092_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_6_fu_1598_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_6_reg_2097 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_6_reg_2097_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_7_fu_1632_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_7_reg_2102 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_8_fu_1666_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_8_reg_2107 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_8_reg_2107_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_9_fu_1700_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_9_reg_2112 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_9_reg_2112_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_res_0_V_reg_2142 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_0_V_reg_2142_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_0_V_reg_2142_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_0_V_reg_2142_pp0_iter8_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_0_V_reg_2142_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_1_V_reg_2148 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_1_V_reg_2148_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_1_V_reg_2148_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_1_V_reg_2148_pp0_iter8_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_1_V_reg_2148_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_2_V_reg_2154 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_2_V_reg_2154_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_2_V_reg_2154_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_2_V_reg_2154_pp0_iter8_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_2_V_reg_2154_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_3_V_reg_2160 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_3_V_reg_2160_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_3_V_reg_2160_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_3_V_reg_2160_pp0_iter8_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_3_V_reg_2160_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_7_V_reg_2181 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_7_V_reg_2181_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_7_V_reg_2181_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_7_V_reg_2181_pp0_iter8_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_7_V_reg_2181_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_4_V_reg_2197 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_4_V_reg_2197_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_4_V_reg_2197_pp0_iter8_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_4_V_reg_2197_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_5_V_reg_2203 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_5_V_reg_2203_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_5_V_reg_2203_pp0_iter8_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_5_V_reg_2203_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_6_V_reg_2209 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_6_V_reg_2209_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_6_V_reg_2209_pp0_iter8_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_6_V_reg_2209_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_8_V_reg_2215 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_8_V_reg_2215_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_8_V_reg_2215_pp0_iter8_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_8_V_reg_2215_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_9_V_reg_2221 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_9_V_reg_2221_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_9_V_reg_2221_pp0_iter8_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_9_V_reg_2221_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_3_fu_1761_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_3_reg_2227 : STD_LOGIC_VECTOR (11 downto 0);
    signal y_V_10_reg_2232 : STD_LOGIC_VECTOR (9 downto 0);
    signal inv_exp_sum_V_reg_2242 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_fu_1805_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_0_V_reg_2311 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_1_V_reg_2316 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_reg_2321 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_reg_2326 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_4_V_reg_2331 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_5_V_reg_2336 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_6_V_reg_2341 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_7_V_reg_2346 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_8_V_reg_2351 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_9_V_reg_2356 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln236_fu_1708_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln236_1_fu_1712_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln236_2_fu_1716_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln236_3_fu_1720_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln236_7_fu_1724_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln236_4_fu_1728_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln236_5_fu_1732_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln236_6_fu_1736_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln236_8_fu_1740_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln236_9_fu_1744_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln244_fu_1801_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_300_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_301_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_302_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_303_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_304_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_305_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_306_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_307_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_308_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_309_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1496_fu_711_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1496_fu_711_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1496_1_fu_717_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1496_1_fu_717_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1496_3_fu_723_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1496_3_fu_723_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1496_4_fu_729_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1496_4_fu_729_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln86_fu_735_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln86_1_fu_740_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1496_2_fu_745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_3_fu_759_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln86_4_fu_764_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1496_5_fu_769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_6_fu_783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_7_fu_793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_max_V_fu_809_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln703_fu_814_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln703_1_fu_817_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1193_fu_821_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_21_fu_835_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_827_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_861_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_2_fu_873_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1193_1_fu_876_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_23_fu_890_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_882_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1_fu_898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1_fu_916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_3_fu_928_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1193_2_fu_931_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_25_fu_945_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_937_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_2_fu_953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_2_fu_971_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_4_fu_983_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1193_3_fu_986_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_27_fu_1000_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_992_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_3_fu_1008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_3_fu_1026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_5_fu_1038_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1193_4_fu_1041_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_29_fu_1055_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_1047_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_4_fu_1063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_4_fu_1081_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_6_fu_1093_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1193_5_fu_1096_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_31_fu_1110_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_1102_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_5_fu_1118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_5_fu_1136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_7_fu_1148_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1193_6_fu_1151_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_33_fu_1165_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_1157_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_6_fu_1173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_6_fu_1191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_8_fu_1203_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1193_7_fu_1206_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_35_fu_1220_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_1212_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_7_fu_1228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_7_fu_1246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_9_fu_1258_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1193_8_fu_1261_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_37_fu_1275_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_1267_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_8_fu_1283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_8_fu_1301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_10_fu_1313_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1193_9_fu_1316_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_39_fu_1330_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_1322_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_9_fu_1338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_9_fu_1356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_10_fu_855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_1368_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_fu_849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_1378_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_fu_1386_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_11_fu_910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_1402_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_1_fu_904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_1_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_2_fu_1412_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_1_fu_1420_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_12_fu_965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_1436_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_2_fu_959_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2_fu_977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_4_fu_1446_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_2_fu_1454_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_13_fu_1020_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1470_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_3_fu_1014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_3_fu_1032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_6_fu_1480_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_3_fu_1488_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_14_fu_1075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_1504_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_4_fu_1069_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_4_fu_1087_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_8_fu_1514_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_4_fu_1522_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_15_fu_1130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1538_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_5_fu_1124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_5_fu_1142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_10_fu_1548_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_5_fu_1556_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_16_fu_1185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_1572_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_6_fu_1179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_6_fu_1197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_12_fu_1582_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_6_fu_1590_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_17_fu_1240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1606_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_7_fu_1234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_7_fu_1252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_14_fu_1616_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_7_fu_1624_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_18_fu_1295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_1640_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_8_fu_1289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_8_fu_1307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_16_fu_1650_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_8_fu_1658_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_19_fu_1350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_1674_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_9_fu_1344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_9_fu_1362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_18_fu_1684_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_9_fu_1692_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_1_fu_1752_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_fu_1748_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_2_fu_1756_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_5_fu_1771_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_4_fu_1767_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_6_fu_1775_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_7_fu_1780_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_sum_V_fu_1786_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_300_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_307_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_301_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_304_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_302_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_306_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_303_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_305_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_308_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_309_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_300_ce : STD_LOGIC;
    signal grp_fu_301_ce : STD_LOGIC;
    signal grp_fu_302_ce : STD_LOGIC;
    signal grp_fu_303_ce : STD_LOGIC;
    signal grp_fu_304_ce : STD_LOGIC;
    signal grp_fu_305_ce : STD_LOGIC;
    signal grp_fu_306_ce : STD_LOGIC;
    signal grp_fu_307_ce : STD_LOGIC;
    signal grp_fu_308_ce : STD_LOGIC;
    signal grp_fu_309_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to11 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component myproject_axi_mul_12s_12s_24_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component softmax_stable_array_array_softmax_config13_s_exp_table1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address4 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address5 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address6 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address7 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address8 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce8 : IN STD_LOGIC;
        q8 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address9 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce9 : IN STD_LOGIC;
        q9 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component softmax_stable_array_array_softmax_config13_s_invert_table2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;



begin
    exp_table1_U : component softmax_stable_array_array_softmax_config13_s_exp_table1
    generic map (
        DataWidth => 12,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => exp_table1_address0,
        ce0 => exp_table1_ce0,
        q0 => exp_table1_q0,
        address1 => exp_table1_address1,
        ce1 => exp_table1_ce1,
        q1 => exp_table1_q1,
        address2 => exp_table1_address2,
        ce2 => exp_table1_ce2,
        q2 => exp_table1_q2,
        address3 => exp_table1_address3,
        ce3 => exp_table1_ce3,
        q3 => exp_table1_q3,
        address4 => exp_table1_address4,
        ce4 => exp_table1_ce4,
        q4 => exp_table1_q4,
        address5 => exp_table1_address5,
        ce5 => exp_table1_ce5,
        q5 => exp_table1_q5,
        address6 => exp_table1_address6,
        ce6 => exp_table1_ce6,
        q6 => exp_table1_q6,
        address7 => exp_table1_address7,
        ce7 => exp_table1_ce7,
        q7 => exp_table1_q7,
        address8 => exp_table1_address8,
        ce8 => exp_table1_ce8,
        q8 => exp_table1_q8,
        address9 => exp_table1_address9,
        ce9 => exp_table1_ce9,
        q9 => exp_table1_q9);

    invert_table2_U : component softmax_stable_array_array_softmax_config13_s_invert_table2
    generic map (
        DataWidth => 12,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => invert_table2_address0,
        ce0 => invert_table2_ce0,
        q0 => invert_table2_q0);

    myproject_axi_mul_12s_12s_24_2_1_U896 : component myproject_axi_mul_12s_12s_24_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_300_p0,
        din1 => exp_res_0_V_reg_2142_pp0_iter9_reg,
        ce => grp_fu_300_ce,
        dout => grp_fu_300_p2);

    myproject_axi_mul_12s_12s_24_2_1_U897 : component myproject_axi_mul_12s_12s_24_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_301_p0,
        din1 => exp_res_2_V_reg_2154_pp0_iter9_reg,
        ce => grp_fu_301_ce,
        dout => grp_fu_301_p2);

    myproject_axi_mul_12s_12s_24_2_1_U898 : component myproject_axi_mul_12s_12s_24_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_302_p0,
        din1 => exp_res_4_V_reg_2197_pp0_iter9_reg,
        ce => grp_fu_302_ce,
        dout => grp_fu_302_p2);

    myproject_axi_mul_12s_12s_24_2_1_U899 : component myproject_axi_mul_12s_12s_24_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_303_p0,
        din1 => exp_res_6_V_reg_2209_pp0_iter9_reg,
        ce => grp_fu_303_ce,
        dout => grp_fu_303_p2);

    myproject_axi_mul_12s_12s_24_2_1_U900 : component myproject_axi_mul_12s_12s_24_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_304_p0,
        din1 => exp_res_3_V_reg_2160_pp0_iter9_reg,
        ce => grp_fu_304_ce,
        dout => grp_fu_304_p2);

    myproject_axi_mul_12s_12s_24_2_1_U901 : component myproject_axi_mul_12s_12s_24_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_305_p0,
        din1 => exp_res_7_V_reg_2181_pp0_iter9_reg,
        ce => grp_fu_305_ce,
        dout => grp_fu_305_p2);

    myproject_axi_mul_12s_12s_24_2_1_U902 : component myproject_axi_mul_12s_12s_24_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_306_p0,
        din1 => exp_res_5_V_reg_2203_pp0_iter9_reg,
        ce => grp_fu_306_ce,
        dout => grp_fu_306_p2);

    myproject_axi_mul_12s_12s_24_2_1_U903 : component myproject_axi_mul_12s_12s_24_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_307_p0,
        din1 => exp_res_1_V_reg_2148_pp0_iter9_reg,
        ce => grp_fu_307_ce,
        dout => grp_fu_307_p2);

    myproject_axi_mul_12s_12s_24_2_1_U904 : component myproject_axi_mul_12s_12s_24_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_308_p0,
        din1 => exp_res_8_V_reg_2215_pp0_iter9_reg,
        ce => grp_fu_308_ce,
        dout => grp_fu_308_p2);

    myproject_axi_mul_12s_12s_24_2_1_U905 : component myproject_axi_mul_12s_12s_24_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_309_p0,
        din1 => exp_res_9_V_reg_2221_pp0_iter9_reg,
        ce => grp_fu_309_ce,
        dout => grp_fu_309_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln703_3_reg_2227 <= add_ln703_3_fu_1761_p2;
                data_array_0_V_reg_1958_pp0_iter2_reg <= data_array_0_V_reg_1958_pp0_iter1_reg;
                data_array_1_V_reg_1964_pp0_iter2_reg <= data_array_1_V_reg_1964_pp0_iter1_reg;
                data_array_2_V_reg_1970_pp0_iter2_reg <= data_array_2_V_reg_1970_pp0_iter1_reg;
                data_array_3_V_reg_1976_pp0_iter2_reg <= data_array_3_V_reg_1976_pp0_iter1_reg;
                data_array_4_V_reg_1982_pp0_iter2_reg <= data_array_4_V_reg_1982_pp0_iter1_reg;
                data_array_5_V_reg_1988_pp0_iter2_reg <= data_array_5_V_reg_1988_pp0_iter1_reg;
                data_array_6_V_reg_1994_pp0_iter2_reg <= data_array_6_V_reg_1994_pp0_iter1_reg;
                data_array_7_V_reg_2000_pp0_iter2_reg <= data_array_7_V_reg_2000_pp0_iter1_reg;
                data_array_8_V_reg_2006_pp0_iter2_reg <= data_array_8_V_reg_2006_pp0_iter1_reg;
                data_array_9_V_reg_2013_pp0_iter2_reg <= data_array_9_V_reg_2013_pp0_iter1_reg;
                exp_res_0_V_reg_2142_pp0_iter6_reg <= exp_res_0_V_reg_2142;
                exp_res_0_V_reg_2142_pp0_iter7_reg <= exp_res_0_V_reg_2142_pp0_iter6_reg;
                exp_res_0_V_reg_2142_pp0_iter8_reg <= exp_res_0_V_reg_2142_pp0_iter7_reg;
                exp_res_0_V_reg_2142_pp0_iter9_reg <= exp_res_0_V_reg_2142_pp0_iter8_reg;
                exp_res_1_V_reg_2148_pp0_iter6_reg <= exp_res_1_V_reg_2148;
                exp_res_1_V_reg_2148_pp0_iter7_reg <= exp_res_1_V_reg_2148_pp0_iter6_reg;
                exp_res_1_V_reg_2148_pp0_iter8_reg <= exp_res_1_V_reg_2148_pp0_iter7_reg;
                exp_res_1_V_reg_2148_pp0_iter9_reg <= exp_res_1_V_reg_2148_pp0_iter8_reg;
                exp_res_2_V_reg_2154_pp0_iter6_reg <= exp_res_2_V_reg_2154;
                exp_res_2_V_reg_2154_pp0_iter7_reg <= exp_res_2_V_reg_2154_pp0_iter6_reg;
                exp_res_2_V_reg_2154_pp0_iter8_reg <= exp_res_2_V_reg_2154_pp0_iter7_reg;
                exp_res_2_V_reg_2154_pp0_iter9_reg <= exp_res_2_V_reg_2154_pp0_iter8_reg;
                exp_res_3_V_reg_2160_pp0_iter6_reg <= exp_res_3_V_reg_2160;
                exp_res_3_V_reg_2160_pp0_iter7_reg <= exp_res_3_V_reg_2160_pp0_iter6_reg;
                exp_res_3_V_reg_2160_pp0_iter8_reg <= exp_res_3_V_reg_2160_pp0_iter7_reg;
                exp_res_3_V_reg_2160_pp0_iter9_reg <= exp_res_3_V_reg_2160_pp0_iter8_reg;
                exp_res_4_V_reg_2197_pp0_iter7_reg <= exp_res_4_V_reg_2197;
                exp_res_4_V_reg_2197_pp0_iter8_reg <= exp_res_4_V_reg_2197_pp0_iter7_reg;
                exp_res_4_V_reg_2197_pp0_iter9_reg <= exp_res_4_V_reg_2197_pp0_iter8_reg;
                exp_res_5_V_reg_2203_pp0_iter7_reg <= exp_res_5_V_reg_2203;
                exp_res_5_V_reg_2203_pp0_iter8_reg <= exp_res_5_V_reg_2203_pp0_iter7_reg;
                exp_res_5_V_reg_2203_pp0_iter9_reg <= exp_res_5_V_reg_2203_pp0_iter8_reg;
                exp_res_6_V_reg_2209_pp0_iter7_reg <= exp_res_6_V_reg_2209;
                exp_res_6_V_reg_2209_pp0_iter8_reg <= exp_res_6_V_reg_2209_pp0_iter7_reg;
                exp_res_6_V_reg_2209_pp0_iter9_reg <= exp_res_6_V_reg_2209_pp0_iter8_reg;
                exp_res_7_V_reg_2181_pp0_iter6_reg <= exp_res_7_V_reg_2181;
                exp_res_7_V_reg_2181_pp0_iter7_reg <= exp_res_7_V_reg_2181_pp0_iter6_reg;
                exp_res_7_V_reg_2181_pp0_iter8_reg <= exp_res_7_V_reg_2181_pp0_iter7_reg;
                exp_res_7_V_reg_2181_pp0_iter9_reg <= exp_res_7_V_reg_2181_pp0_iter8_reg;
                exp_res_8_V_reg_2215_pp0_iter7_reg <= exp_res_8_V_reg_2215;
                exp_res_8_V_reg_2215_pp0_iter8_reg <= exp_res_8_V_reg_2215_pp0_iter7_reg;
                exp_res_8_V_reg_2215_pp0_iter9_reg <= exp_res_8_V_reg_2215_pp0_iter8_reg;
                exp_res_9_V_reg_2221_pp0_iter7_reg <= exp_res_9_V_reg_2221;
                exp_res_9_V_reg_2221_pp0_iter8_reg <= exp_res_9_V_reg_2221_pp0_iter7_reg;
                exp_res_9_V_reg_2221_pp0_iter9_reg <= exp_res_9_V_reg_2221_pp0_iter8_reg;
                icmp_ln1496_8_reg_2062 <= icmp_ln1496_8_fu_803_p2;
                inv_exp_sum_V_reg_2242 <= invert_table2_q0;
                select_ln86_6_reg_2052 <= select_ln86_6_fu_787_p3;
                select_ln86_7_reg_2057 <= select_ln86_7_fu_797_p3;
                tmp_data_0_V_reg_2311 <= grp_fu_300_p2(23 downto 8);
                tmp_data_1_V_reg_2316 <= grp_fu_307_p2(23 downto 8);
                tmp_data_2_V_reg_2321 <= grp_fu_301_p2(23 downto 8);
                tmp_data_3_V_reg_2326 <= grp_fu_304_p2(23 downto 8);
                tmp_data_4_V_reg_2331 <= grp_fu_302_p2(23 downto 8);
                tmp_data_5_V_reg_2336 <= grp_fu_306_p2(23 downto 8);
                tmp_data_6_V_reg_2341 <= grp_fu_303_p2(23 downto 8);
                tmp_data_7_V_reg_2346 <= grp_fu_305_p2(23 downto 8);
                tmp_data_8_V_reg_2351 <= grp_fu_308_p2(23 downto 8);
                tmp_data_9_V_reg_2356 <= grp_fu_309_p2(23 downto 8);
                y_V_10_reg_2232 <= exp_sum_V_fu_1786_p2(11 downto 2);
                y_V_1_reg_2072 <= y_V_1_fu_1428_p3;
                y_V_2_reg_2077 <= y_V_2_fu_1462_p3;
                y_V_3_reg_2082 <= y_V_3_fu_1496_p3;
                y_V_4_reg_2087 <= y_V_4_fu_1530_p3;
                y_V_4_reg_2087_pp0_iter4_reg <= y_V_4_reg_2087;
                y_V_5_reg_2092 <= y_V_5_fu_1564_p3;
                y_V_5_reg_2092_pp0_iter4_reg <= y_V_5_reg_2092;
                y_V_6_reg_2097 <= y_V_6_fu_1598_p3;
                y_V_6_reg_2097_pp0_iter4_reg <= y_V_6_reg_2097;
                y_V_7_reg_2102 <= y_V_7_fu_1632_p3;
                y_V_8_reg_2107 <= y_V_8_fu_1666_p3;
                y_V_8_reg_2107_pp0_iter4_reg <= y_V_8_reg_2107;
                y_V_9_reg_2112 <= y_V_9_fu_1700_p3;
                y_V_9_reg_2112_pp0_iter4_reg <= y_V_9_reg_2112;
                y_V_reg_2067 <= y_V_fu_1394_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                data_array_0_V_reg_1958 <= data_V_data_0_V_dout;
                data_array_0_V_reg_1958_pp0_iter1_reg <= data_array_0_V_reg_1958;
                data_array_1_V_reg_1964 <= data_V_data_1_V_dout;
                data_array_1_V_reg_1964_pp0_iter1_reg <= data_array_1_V_reg_1964;
                data_array_2_V_reg_1970 <= data_V_data_2_V_dout;
                data_array_2_V_reg_1970_pp0_iter1_reg <= data_array_2_V_reg_1970;
                data_array_3_V_reg_1976 <= data_V_data_3_V_dout;
                data_array_3_V_reg_1976_pp0_iter1_reg <= data_array_3_V_reg_1976;
                data_array_4_V_reg_1982 <= data_V_data_4_V_dout;
                data_array_4_V_reg_1982_pp0_iter1_reg <= data_array_4_V_reg_1982;
                data_array_5_V_reg_1988 <= data_V_data_5_V_dout;
                data_array_5_V_reg_1988_pp0_iter1_reg <= data_array_5_V_reg_1988;
                data_array_6_V_reg_1994 <= data_V_data_6_V_dout;
                data_array_6_V_reg_1994_pp0_iter1_reg <= data_array_6_V_reg_1994;
                data_array_7_V_reg_2000 <= data_V_data_7_V_dout;
                data_array_7_V_reg_2000_pp0_iter1_reg <= data_array_7_V_reg_2000;
                data_array_8_V_reg_2006 <= data_V_data_8_V_dout;
                data_array_8_V_reg_2006_pp0_iter1_reg <= data_array_8_V_reg_2006;
                data_array_9_V_reg_2013 <= data_V_data_9_V_dout;
                data_array_9_V_reg_2013_pp0_iter1_reg <= data_array_9_V_reg_2013;
                icmp_ln1496_1_reg_2025 <= icmp_ln1496_1_fu_717_p2;
                icmp_ln1496_3_reg_2030 <= icmp_ln1496_3_fu_723_p2;
                icmp_ln1496_4_reg_2035 <= icmp_ln1496_4_fu_729_p2;
                icmp_ln1496_reg_2020 <= icmp_ln1496_fu_711_p2;
                select_ln86_2_reg_2040 <= select_ln86_2_fu_751_p3;
                select_ln86_5_reg_2046 <= select_ln86_5_fu_775_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exp_res_0_V_reg_2142 <= exp_table1_q0;
                exp_res_1_V_reg_2148 <= exp_table1_q1;
                exp_res_2_V_reg_2154 <= exp_table1_q2;
                exp_res_3_V_reg_2160 <= exp_table1_q3;
                exp_res_7_V_reg_2181 <= exp_table1_q4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exp_res_4_V_reg_2197 <= exp_table1_q5;
                exp_res_5_V_reg_2203 <= exp_table1_q6;
                exp_res_6_V_reg_2209 <= exp_table1_q7;
                exp_res_8_V_reg_2215 <= exp_table1_q8;
                exp_res_9_V_reg_2221 <= exp_table1_q9;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln703_1_fu_1752_p2 <= std_logic_vector(signed(exp_res_7_V_reg_2181) + signed(exp_res_2_V_reg_2154));
    add_ln703_2_fu_1756_p2 <= std_logic_vector(signed(exp_res_3_V_reg_2160) + signed(add_ln703_1_fu_1752_p2));
    add_ln703_3_fu_1761_p2 <= std_logic_vector(unsigned(add_ln703_fu_1748_p2) + unsigned(add_ln703_2_fu_1756_p2));
    add_ln703_4_fu_1767_p2 <= std_logic_vector(signed(exp_res_5_V_reg_2203) + signed(exp_res_6_V_reg_2209));
    add_ln703_5_fu_1771_p2 <= std_logic_vector(signed(exp_res_8_V_reg_2215) + signed(exp_res_9_V_reg_2221));
    add_ln703_6_fu_1775_p2 <= std_logic_vector(signed(exp_res_4_V_reg_2197) + signed(add_ln703_5_fu_1771_p2));
    add_ln703_7_fu_1780_p2 <= std_logic_vector(unsigned(add_ln703_4_fu_1767_p2) + unsigned(add_ln703_6_fu_1775_p2));
    add_ln703_fu_1748_p2 <= std_logic_vector(signed(exp_res_1_V_reg_2148) + signed(exp_res_0_V_reg_2142));
    and_ln786_1_fu_904_p2 <= (xor_ln786_1_fu_898_p2 and tmp_22_fu_882_p3);
    and_ln786_2_fu_959_p2 <= (xor_ln786_2_fu_953_p2 and tmp_24_fu_937_p3);
    and_ln786_3_fu_1014_p2 <= (xor_ln786_3_fu_1008_p2 and tmp_26_fu_992_p3);
    and_ln786_4_fu_1069_p2 <= (xor_ln786_4_fu_1063_p2 and tmp_28_fu_1047_p3);
    and_ln786_5_fu_1124_p2 <= (xor_ln786_5_fu_1118_p2 and tmp_30_fu_1102_p3);
    and_ln786_6_fu_1179_p2 <= (xor_ln786_6_fu_1173_p2 and tmp_32_fu_1157_p3);
    and_ln786_7_fu_1234_p2 <= (xor_ln786_7_fu_1228_p2 and tmp_34_fu_1212_p3);
    and_ln786_8_fu_1289_p2 <= (xor_ln786_8_fu_1283_p2 and tmp_36_fu_1267_p3);
    and_ln786_9_fu_1344_p2 <= (xor_ln786_9_fu_1338_p2 and tmp_38_fu_1322_p3);
    and_ln786_fu_849_p2 <= (xor_ln786_fu_843_p2 and tmp_fu_827_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter12, io_acc_block_signal_op14, io_acc_block_signal_op323)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (io_acc_block_signal_op14 = ap_const_logic_0))) or ((io_acc_block_signal_op323 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter12, io_acc_block_signal_op14, io_acc_block_signal_op323)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (io_acc_block_signal_op14 = ap_const_logic_0))) or ((io_acc_block_signal_op323 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter12, io_acc_block_signal_op14, io_acc_block_signal_op323)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (io_acc_block_signal_op14 = ap_const_logic_0))) or ((io_acc_block_signal_op323 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state13_pp0_stage0_iter12_assign_proc : process(io_acc_block_signal_op323)
    begin
                ap_block_state13_pp0_stage0_iter12 <= (io_acc_block_signal_op323 = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, io_acc_block_signal_op14)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (io_acc_block_signal_op14 = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to11_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to11 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to11)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_0_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_0_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_1_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_2_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_3_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_4_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_4_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_4_V_blk_n <= data_V_data_4_V_empty_n;
        else 
            data_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_4_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_4_V_read <= ap_const_logic_1;
        else 
            data_V_data_4_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_5_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_5_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_5_V_blk_n <= data_V_data_5_V_empty_n;
        else 
            data_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_5_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_5_V_read <= ap_const_logic_1;
        else 
            data_V_data_5_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_6_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_6_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_6_V_blk_n <= data_V_data_6_V_empty_n;
        else 
            data_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_6_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_6_V_read <= ap_const_logic_1;
        else 
            data_V_data_6_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_7_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_7_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_7_V_blk_n <= data_V_data_7_V_empty_n;
        else 
            data_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_7_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_7_V_read <= ap_const_logic_1;
        else 
            data_V_data_7_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_8_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_8_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_8_V_blk_n <= data_V_data_8_V_empty_n;
        else 
            data_V_data_8_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_8_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_8_V_read <= ap_const_logic_1;
        else 
            data_V_data_8_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_9_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_9_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_9_V_blk_n <= data_V_data_9_V_empty_n;
        else 
            data_V_data_9_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_9_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_9_V_read <= ap_const_logic_1;
        else 
            data_V_data_9_V_read <= ap_const_logic_0;
        end if; 
    end process;

    exp_sum_V_fu_1786_p2 <= std_logic_vector(unsigned(add_ln703_3_reg_2227) + unsigned(add_ln703_7_fu_1780_p2));
    exp_table1_address0 <= zext_ln236_fu_1708_p1(10 - 1 downto 0);
    exp_table1_address1 <= zext_ln236_1_fu_1712_p1(10 - 1 downto 0);
    exp_table1_address2 <= zext_ln236_2_fu_1716_p1(10 - 1 downto 0);
    exp_table1_address3 <= zext_ln236_3_fu_1720_p1(10 - 1 downto 0);
    exp_table1_address4 <= zext_ln236_7_fu_1724_p1(10 - 1 downto 0);
    exp_table1_address5 <= zext_ln236_4_fu_1728_p1(10 - 1 downto 0);
    exp_table1_address6 <= zext_ln236_5_fu_1732_p1(10 - 1 downto 0);
    exp_table1_address7 <= zext_ln236_6_fu_1736_p1(10 - 1 downto 0);
    exp_table1_address8 <= zext_ln236_8_fu_1740_p1(10 - 1 downto 0);
    exp_table1_address9 <= zext_ln236_9_fu_1744_p1(10 - 1 downto 0);

    exp_table1_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            exp_table1_ce0 <= ap_const_logic_1;
        else 
            exp_table1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            exp_table1_ce1 <= ap_const_logic_1;
        else 
            exp_table1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce2_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            exp_table1_ce2 <= ap_const_logic_1;
        else 
            exp_table1_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce3_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            exp_table1_ce3 <= ap_const_logic_1;
        else 
            exp_table1_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce4_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            exp_table1_ce4 <= ap_const_logic_1;
        else 
            exp_table1_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce5_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            exp_table1_ce5 <= ap_const_logic_1;
        else 
            exp_table1_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce6_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            exp_table1_ce6 <= ap_const_logic_1;
        else 
            exp_table1_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce7_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            exp_table1_ce7 <= ap_const_logic_1;
        else 
            exp_table1_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce8_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            exp_table1_ce8 <= ap_const_logic_1;
        else 
            exp_table1_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce9_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            exp_table1_ce9 <= ap_const_logic_1;
        else 
            exp_table1_ce9 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_300_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_300_ce <= ap_const_logic_1;
        else 
            grp_fu_300_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_300_p0 <= sext_ln1118_fu_1805_p1(12 - 1 downto 0);

    grp_fu_301_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_301_ce <= ap_const_logic_1;
        else 
            grp_fu_301_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_301_p0 <= sext_ln1118_fu_1805_p1(12 - 1 downto 0);

    grp_fu_302_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_302_ce <= ap_const_logic_1;
        else 
            grp_fu_302_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_302_p0 <= sext_ln1118_fu_1805_p1(12 - 1 downto 0);

    grp_fu_303_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_303_ce <= ap_const_logic_1;
        else 
            grp_fu_303_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_303_p0 <= sext_ln1118_fu_1805_p1(12 - 1 downto 0);

    grp_fu_304_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_304_ce <= ap_const_logic_1;
        else 
            grp_fu_304_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_304_p0 <= sext_ln1118_fu_1805_p1(12 - 1 downto 0);

    grp_fu_305_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_305_ce <= ap_const_logic_1;
        else 
            grp_fu_305_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_305_p0 <= sext_ln1118_fu_1805_p1(12 - 1 downto 0);

    grp_fu_306_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_306_ce <= ap_const_logic_1;
        else 
            grp_fu_306_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_306_p0 <= sext_ln1118_fu_1805_p1(12 - 1 downto 0);

    grp_fu_307_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_307_ce <= ap_const_logic_1;
        else 
            grp_fu_307_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_307_p0 <= sext_ln1118_fu_1805_p1(12 - 1 downto 0);

    grp_fu_308_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_308_ce <= ap_const_logic_1;
        else 
            grp_fu_308_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_308_p0 <= sext_ln1118_fu_1805_p1(12 - 1 downto 0);

    grp_fu_309_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_309_ce <= ap_const_logic_1;
        else 
            grp_fu_309_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_309_p0 <= sext_ln1118_fu_1805_p1(12 - 1 downto 0);
    icmp_ln1496_1_fu_717_p0 <= data_V_data_2_V_dout;
    icmp_ln1496_1_fu_717_p1 <= data_V_data_3_V_dout;
    icmp_ln1496_1_fu_717_p2 <= "1" when (signed(icmp_ln1496_1_fu_717_p0) < signed(icmp_ln1496_1_fu_717_p1)) else "0";
    icmp_ln1496_2_fu_745_p2 <= "1" when (signed(select_ln86_fu_735_p3) < signed(select_ln86_1_fu_740_p3)) else "0";
    icmp_ln1496_3_fu_723_p0 <= data_V_data_4_V_dout;
    icmp_ln1496_3_fu_723_p1 <= data_V_data_5_V_dout;
    icmp_ln1496_3_fu_723_p2 <= "1" when (signed(icmp_ln1496_3_fu_723_p0) < signed(icmp_ln1496_3_fu_723_p1)) else "0";
    icmp_ln1496_4_fu_729_p0 <= data_V_data_6_V_dout;
    icmp_ln1496_4_fu_729_p1 <= data_V_data_7_V_dout;
    icmp_ln1496_4_fu_729_p2 <= "1" when (signed(icmp_ln1496_4_fu_729_p0) < signed(icmp_ln1496_4_fu_729_p1)) else "0";
    icmp_ln1496_5_fu_769_p2 <= "1" when (signed(select_ln86_3_fu_759_p3) < signed(select_ln86_4_fu_764_p3)) else "0";
    icmp_ln1496_6_fu_783_p2 <= "1" when (signed(select_ln86_2_reg_2040) < signed(select_ln86_5_reg_2046)) else "0";
    icmp_ln1496_7_fu_793_p2 <= "1" when (signed(data_array_8_V_reg_2006_pp0_iter1_reg) < signed(data_array_9_V_reg_2013_pp0_iter1_reg)) else "0";
    icmp_ln1496_8_fu_803_p2 <= "1" when (signed(select_ln86_6_fu_787_p3) < signed(select_ln86_7_fu_797_p3)) else "0";
    icmp_ln1496_fu_711_p0 <= data_V_data_0_V_dout;
    icmp_ln1496_fu_711_p1 <= data_V_data_1_V_dout;
    icmp_ln1496_fu_711_p2 <= "1" when (signed(icmp_ln1496_fu_711_p0) < signed(icmp_ln1496_fu_711_p1)) else "0";
    invert_table2_address0 <= zext_ln244_fu_1801_p1(10 - 1 downto 0);

    invert_table2_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            invert_table2_ce0 <= ap_const_logic_1;
        else 
            invert_table2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op14 <= (data_V_data_9_V_empty_n and data_V_data_8_V_empty_n and data_V_data_7_V_empty_n and data_V_data_6_V_empty_n and data_V_data_5_V_empty_n and data_V_data_4_V_empty_n and data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);
    io_acc_block_signal_op323 <= (res_V_data_9_V_full_n and res_V_data_8_V_full_n and res_V_data_7_V_full_n and res_V_data_6_V_full_n and res_V_data_5_V_full_n and res_V_data_4_V_full_n and res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
    or_ln340_1_fu_922_p2 <= (xor_ln340_1_fu_916_p2 or tmp_23_fu_890_p3);
    or_ln340_2_fu_977_p2 <= (xor_ln340_2_fu_971_p2 or tmp_25_fu_945_p3);
    or_ln340_3_fu_1032_p2 <= (xor_ln340_3_fu_1026_p2 or tmp_27_fu_1000_p3);
    or_ln340_4_fu_1087_p2 <= (xor_ln340_4_fu_1081_p2 or tmp_29_fu_1055_p3);
    or_ln340_5_fu_1142_p2 <= (xor_ln340_5_fu_1136_p2 or tmp_31_fu_1110_p3);
    or_ln340_6_fu_1197_p2 <= (xor_ln340_6_fu_1191_p2 or tmp_33_fu_1165_p3);
    or_ln340_7_fu_1252_p2 <= (xor_ln340_7_fu_1246_p2 or tmp_35_fu_1220_p3);
    or_ln340_8_fu_1307_p2 <= (xor_ln340_8_fu_1301_p2 or tmp_37_fu_1275_p3);
    or_ln340_9_fu_1362_p2 <= (xor_ln340_9_fu_1356_p2 or tmp_39_fu_1330_p3);
    or_ln340_fu_867_p2 <= (xor_ln340_fu_861_p2 or tmp_21_fu_835_p3);

    res_V_data_0_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter12, res_V_data_0_V_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= tmp_data_0_V_reg_2311;

    res_V_data_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter12, res_V_data_1_V_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= tmp_data_1_V_reg_2316;

    res_V_data_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter12, res_V_data_2_V_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= tmp_data_2_V_reg_2321;

    res_V_data_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter12, res_V_data_3_V_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= tmp_data_3_V_reg_2326;

    res_V_data_3_V_write_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_4_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter12, res_V_data_4_V_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            res_V_data_4_V_blk_n <= res_V_data_4_V_full_n;
        else 
            res_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_4_V_din <= tmp_data_4_V_reg_2331;

    res_V_data_4_V_write_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_5_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter12, res_V_data_5_V_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            res_V_data_5_V_blk_n <= res_V_data_5_V_full_n;
        else 
            res_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_5_V_din <= tmp_data_5_V_reg_2336;

    res_V_data_5_V_write_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_6_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter12, res_V_data_6_V_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            res_V_data_6_V_blk_n <= res_V_data_6_V_full_n;
        else 
            res_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_6_V_din <= tmp_data_6_V_reg_2341;

    res_V_data_6_V_write_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_7_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter12, res_V_data_7_V_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            res_V_data_7_V_blk_n <= res_V_data_7_V_full_n;
        else 
            res_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_7_V_din <= tmp_data_7_V_reg_2346;

    res_V_data_7_V_write_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_8_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter12, res_V_data_8_V_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            res_V_data_8_V_blk_n <= res_V_data_8_V_full_n;
        else 
            res_V_data_8_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_8_V_din <= tmp_data_8_V_reg_2351;

    res_V_data_8_V_write_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_8_V_write <= ap_const_logic_1;
        else 
            res_V_data_8_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_9_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter12, res_V_data_9_V_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            res_V_data_9_V_blk_n <= res_V_data_9_V_full_n;
        else 
            res_V_data_9_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_9_V_din <= tmp_data_9_V_reg_2356;

    res_V_data_9_V_write_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_9_V_write <= ap_const_logic_1;
        else 
            res_V_data_9_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln340_10_fu_1548_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_15_fu_1130_p2(0) = '1') else 
        tmp_16_fu_1538_p4;
    select_ln340_12_fu_1582_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_16_fu_1185_p2(0) = '1') else 
        tmp_17_fu_1572_p4;
    select_ln340_14_fu_1616_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_17_fu_1240_p2(0) = '1') else 
        tmp_18_fu_1606_p4;
    select_ln340_16_fu_1650_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_18_fu_1295_p2(0) = '1') else 
        tmp_19_fu_1640_p4;
    select_ln340_18_fu_1684_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_19_fu_1350_p2(0) = '1') else 
        tmp_20_fu_1674_p4;
    select_ln340_2_fu_1412_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_11_fu_910_p2(0) = '1') else 
        tmp_12_fu_1402_p4;
    select_ln340_4_fu_1446_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_12_fu_965_p2(0) = '1') else 
        tmp_13_fu_1436_p4;
    select_ln340_6_fu_1480_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_13_fu_1020_p2(0) = '1') else 
        tmp_14_fu_1470_p4;
    select_ln340_8_fu_1514_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_14_fu_1075_p2(0) = '1') else 
        tmp_15_fu_1504_p4;
    select_ln340_fu_1378_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_10_fu_855_p2(0) = '1') else 
        tmp_11_fu_1368_p4;
    select_ln388_1_fu_1420_p3 <= 
        ap_const_lv10_200 when (and_ln786_1_fu_904_p2(0) = '1') else 
        tmp_12_fu_1402_p4;
    select_ln388_2_fu_1454_p3 <= 
        ap_const_lv10_200 when (and_ln786_2_fu_959_p2(0) = '1') else 
        tmp_13_fu_1436_p4;
    select_ln388_3_fu_1488_p3 <= 
        ap_const_lv10_200 when (and_ln786_3_fu_1014_p2(0) = '1') else 
        tmp_14_fu_1470_p4;
    select_ln388_4_fu_1522_p3 <= 
        ap_const_lv10_200 when (and_ln786_4_fu_1069_p2(0) = '1') else 
        tmp_15_fu_1504_p4;
    select_ln388_5_fu_1556_p3 <= 
        ap_const_lv10_200 when (and_ln786_5_fu_1124_p2(0) = '1') else 
        tmp_16_fu_1538_p4;
    select_ln388_6_fu_1590_p3 <= 
        ap_const_lv10_200 when (and_ln786_6_fu_1179_p2(0) = '1') else 
        tmp_17_fu_1572_p4;
    select_ln388_7_fu_1624_p3 <= 
        ap_const_lv10_200 when (and_ln786_7_fu_1234_p2(0) = '1') else 
        tmp_18_fu_1606_p4;
    select_ln388_8_fu_1658_p3 <= 
        ap_const_lv10_200 when (and_ln786_8_fu_1289_p2(0) = '1') else 
        tmp_19_fu_1640_p4;
    select_ln388_9_fu_1692_p3 <= 
        ap_const_lv10_200 when (and_ln786_9_fu_1344_p2(0) = '1') else 
        tmp_20_fu_1674_p4;
    select_ln388_fu_1386_p3 <= 
        ap_const_lv10_200 when (and_ln786_fu_849_p2(0) = '1') else 
        tmp_11_fu_1368_p4;
    select_ln86_1_fu_740_p3 <= 
        data_array_3_V_reg_1976 when (icmp_ln1496_1_reg_2025(0) = '1') else 
        data_array_2_V_reg_1970;
    select_ln86_2_fu_751_p3 <= 
        select_ln86_1_fu_740_p3 when (icmp_ln1496_2_fu_745_p2(0) = '1') else 
        select_ln86_fu_735_p3;
    select_ln86_3_fu_759_p3 <= 
        data_array_5_V_reg_1988 when (icmp_ln1496_3_reg_2030(0) = '1') else 
        data_array_4_V_reg_1982;
    select_ln86_4_fu_764_p3 <= 
        data_array_7_V_reg_2000 when (icmp_ln1496_4_reg_2035(0) = '1') else 
        data_array_6_V_reg_1994;
    select_ln86_5_fu_775_p3 <= 
        select_ln86_4_fu_764_p3 when (icmp_ln1496_5_fu_769_p2(0) = '1') else 
        select_ln86_3_fu_759_p3;
    select_ln86_6_fu_787_p3 <= 
        select_ln86_5_reg_2046 when (icmp_ln1496_6_fu_783_p2(0) = '1') else 
        select_ln86_2_reg_2040;
    select_ln86_7_fu_797_p3 <= 
        data_array_9_V_reg_2013_pp0_iter1_reg when (icmp_ln1496_7_fu_793_p2(0) = '1') else 
        data_array_8_V_reg_2006_pp0_iter1_reg;
    select_ln86_fu_735_p3 <= 
        data_array_1_V_reg_1964 when (icmp_ln1496_reg_2020(0) = '1') else 
        data_array_0_V_reg_1958;
        sext_ln1118_fu_1805_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inv_exp_sum_V_reg_2242),24));

        sext_ln703_10_fu_1313_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_9_V_reg_2013_pp0_iter2_reg),13));

        sext_ln703_1_fu_817_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_max_V_fu_809_p3),13));

        sext_ln703_2_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_1_V_reg_1964_pp0_iter2_reg),13));

        sext_ln703_3_fu_928_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_2_V_reg_1970_pp0_iter2_reg),13));

        sext_ln703_4_fu_983_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_3_V_reg_1976_pp0_iter2_reg),13));

        sext_ln703_5_fu_1038_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_4_V_reg_1982_pp0_iter2_reg),13));

        sext_ln703_6_fu_1093_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_5_V_reg_1988_pp0_iter2_reg),13));

        sext_ln703_7_fu_1148_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_6_V_reg_1994_pp0_iter2_reg),13));

        sext_ln703_8_fu_1203_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_7_V_reg_2000_pp0_iter2_reg),13));

        sext_ln703_9_fu_1258_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_8_V_reg_2006_pp0_iter2_reg),13));

        sext_ln703_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_0_V_reg_1958_pp0_iter2_reg),13));

    sub_ln1193_1_fu_876_p2 <= std_logic_vector(signed(sext_ln703_2_fu_873_p1) - signed(sext_ln703_1_fu_817_p1));
    sub_ln1193_2_fu_931_p2 <= std_logic_vector(signed(sext_ln703_3_fu_928_p1) - signed(sext_ln703_1_fu_817_p1));
    sub_ln1193_3_fu_986_p2 <= std_logic_vector(signed(sext_ln703_4_fu_983_p1) - signed(sext_ln703_1_fu_817_p1));
    sub_ln1193_4_fu_1041_p2 <= std_logic_vector(signed(sext_ln703_5_fu_1038_p1) - signed(sext_ln703_1_fu_817_p1));
    sub_ln1193_5_fu_1096_p2 <= std_logic_vector(signed(sext_ln703_6_fu_1093_p1) - signed(sext_ln703_1_fu_817_p1));
    sub_ln1193_6_fu_1151_p2 <= std_logic_vector(signed(sext_ln703_7_fu_1148_p1) - signed(sext_ln703_1_fu_817_p1));
    sub_ln1193_7_fu_1206_p2 <= std_logic_vector(signed(sext_ln703_8_fu_1203_p1) - signed(sext_ln703_1_fu_817_p1));
    sub_ln1193_8_fu_1261_p2 <= std_logic_vector(signed(sext_ln703_9_fu_1258_p1) - signed(sext_ln703_1_fu_817_p1));
    sub_ln1193_9_fu_1316_p2 <= std_logic_vector(signed(sext_ln703_10_fu_1313_p1) - signed(sext_ln703_1_fu_817_p1));
    sub_ln1193_fu_821_p2 <= std_logic_vector(signed(sext_ln703_fu_814_p1) - signed(sext_ln703_1_fu_817_p1));
    tmp_11_fu_1368_p4 <= sub_ln1193_fu_821_p2(11 downto 2);
    tmp_12_fu_1402_p4 <= sub_ln1193_1_fu_876_p2(11 downto 2);
    tmp_13_fu_1436_p4 <= sub_ln1193_2_fu_931_p2(11 downto 2);
    tmp_14_fu_1470_p4 <= sub_ln1193_3_fu_986_p2(11 downto 2);
    tmp_15_fu_1504_p4 <= sub_ln1193_4_fu_1041_p2(11 downto 2);
    tmp_16_fu_1538_p4 <= sub_ln1193_5_fu_1096_p2(11 downto 2);
    tmp_17_fu_1572_p4 <= sub_ln1193_6_fu_1151_p2(11 downto 2);
    tmp_18_fu_1606_p4 <= sub_ln1193_7_fu_1206_p2(11 downto 2);
    tmp_19_fu_1640_p4 <= sub_ln1193_8_fu_1261_p2(11 downto 2);
    tmp_20_fu_1674_p4 <= sub_ln1193_9_fu_1316_p2(11 downto 2);
    tmp_21_fu_835_p3 <= sub_ln1193_fu_821_p2(11 downto 11);
    tmp_22_fu_882_p3 <= sub_ln1193_1_fu_876_p2(12 downto 12);
    tmp_23_fu_890_p3 <= sub_ln1193_1_fu_876_p2(11 downto 11);
    tmp_24_fu_937_p3 <= sub_ln1193_2_fu_931_p2(12 downto 12);
    tmp_25_fu_945_p3 <= sub_ln1193_2_fu_931_p2(11 downto 11);
    tmp_26_fu_992_p3 <= sub_ln1193_3_fu_986_p2(12 downto 12);
    tmp_27_fu_1000_p3 <= sub_ln1193_3_fu_986_p2(11 downto 11);
    tmp_28_fu_1047_p3 <= sub_ln1193_4_fu_1041_p2(12 downto 12);
    tmp_29_fu_1055_p3 <= sub_ln1193_4_fu_1041_p2(11 downto 11);
    tmp_30_fu_1102_p3 <= sub_ln1193_5_fu_1096_p2(12 downto 12);
    tmp_31_fu_1110_p3 <= sub_ln1193_5_fu_1096_p2(11 downto 11);
    tmp_32_fu_1157_p3 <= sub_ln1193_6_fu_1151_p2(12 downto 12);
    tmp_33_fu_1165_p3 <= sub_ln1193_6_fu_1151_p2(11 downto 11);
    tmp_34_fu_1212_p3 <= sub_ln1193_7_fu_1206_p2(12 downto 12);
    tmp_35_fu_1220_p3 <= sub_ln1193_7_fu_1206_p2(11 downto 11);
    tmp_36_fu_1267_p3 <= sub_ln1193_8_fu_1261_p2(12 downto 12);
    tmp_37_fu_1275_p3 <= sub_ln1193_8_fu_1261_p2(11 downto 11);
    tmp_38_fu_1322_p3 <= sub_ln1193_9_fu_1316_p2(12 downto 12);
    tmp_39_fu_1330_p3 <= sub_ln1193_9_fu_1316_p2(11 downto 11);
    tmp_fu_827_p3 <= sub_ln1193_fu_821_p2(12 downto 12);
    x_max_V_fu_809_p3 <= 
        select_ln86_7_reg_2057 when (icmp_ln1496_8_reg_2062(0) = '1') else 
        select_ln86_6_reg_2052;
    xor_ln340_10_fu_855_p2 <= (tmp_fu_827_p3 xor tmp_21_fu_835_p3);
    xor_ln340_11_fu_910_p2 <= (tmp_23_fu_890_p3 xor tmp_22_fu_882_p3);
    xor_ln340_12_fu_965_p2 <= (tmp_25_fu_945_p3 xor tmp_24_fu_937_p3);
    xor_ln340_13_fu_1020_p2 <= (tmp_27_fu_1000_p3 xor tmp_26_fu_992_p3);
    xor_ln340_14_fu_1075_p2 <= (tmp_29_fu_1055_p3 xor tmp_28_fu_1047_p3);
    xor_ln340_15_fu_1130_p2 <= (tmp_31_fu_1110_p3 xor tmp_30_fu_1102_p3);
    xor_ln340_16_fu_1185_p2 <= (tmp_33_fu_1165_p3 xor tmp_32_fu_1157_p3);
    xor_ln340_17_fu_1240_p2 <= (tmp_35_fu_1220_p3 xor tmp_34_fu_1212_p3);
    xor_ln340_18_fu_1295_p2 <= (tmp_37_fu_1275_p3 xor tmp_36_fu_1267_p3);
    xor_ln340_19_fu_1350_p2 <= (tmp_39_fu_1330_p3 xor tmp_38_fu_1322_p3);
    xor_ln340_1_fu_916_p2 <= (tmp_22_fu_882_p3 xor ap_const_lv1_1);
    xor_ln340_2_fu_971_p2 <= (tmp_24_fu_937_p3 xor ap_const_lv1_1);
    xor_ln340_3_fu_1026_p2 <= (tmp_26_fu_992_p3 xor ap_const_lv1_1);
    xor_ln340_4_fu_1081_p2 <= (tmp_28_fu_1047_p3 xor ap_const_lv1_1);
    xor_ln340_5_fu_1136_p2 <= (tmp_30_fu_1102_p3 xor ap_const_lv1_1);
    xor_ln340_6_fu_1191_p2 <= (tmp_32_fu_1157_p3 xor ap_const_lv1_1);
    xor_ln340_7_fu_1246_p2 <= (tmp_34_fu_1212_p3 xor ap_const_lv1_1);
    xor_ln340_8_fu_1301_p2 <= (tmp_36_fu_1267_p3 xor ap_const_lv1_1);
    xor_ln340_9_fu_1356_p2 <= (tmp_38_fu_1322_p3 xor ap_const_lv1_1);
    xor_ln340_fu_861_p2 <= (tmp_fu_827_p3 xor ap_const_lv1_1);
    xor_ln786_1_fu_898_p2 <= (tmp_23_fu_890_p3 xor ap_const_lv1_1);
    xor_ln786_2_fu_953_p2 <= (tmp_25_fu_945_p3 xor ap_const_lv1_1);
    xor_ln786_3_fu_1008_p2 <= (tmp_27_fu_1000_p3 xor ap_const_lv1_1);
    xor_ln786_4_fu_1063_p2 <= (tmp_29_fu_1055_p3 xor ap_const_lv1_1);
    xor_ln786_5_fu_1118_p2 <= (tmp_31_fu_1110_p3 xor ap_const_lv1_1);
    xor_ln786_6_fu_1173_p2 <= (tmp_33_fu_1165_p3 xor ap_const_lv1_1);
    xor_ln786_7_fu_1228_p2 <= (tmp_35_fu_1220_p3 xor ap_const_lv1_1);
    xor_ln786_8_fu_1283_p2 <= (tmp_37_fu_1275_p3 xor ap_const_lv1_1);
    xor_ln786_9_fu_1338_p2 <= (tmp_39_fu_1330_p3 xor ap_const_lv1_1);
    xor_ln786_fu_843_p2 <= (tmp_21_fu_835_p3 xor ap_const_lv1_1);
    y_V_1_fu_1428_p3 <= 
        select_ln340_2_fu_1412_p3 when (or_ln340_1_fu_922_p2(0) = '1') else 
        select_ln388_1_fu_1420_p3;
    y_V_2_fu_1462_p3 <= 
        select_ln340_4_fu_1446_p3 when (or_ln340_2_fu_977_p2(0) = '1') else 
        select_ln388_2_fu_1454_p3;
    y_V_3_fu_1496_p3 <= 
        select_ln340_6_fu_1480_p3 when (or_ln340_3_fu_1032_p2(0) = '1') else 
        select_ln388_3_fu_1488_p3;
    y_V_4_fu_1530_p3 <= 
        select_ln340_8_fu_1514_p3 when (or_ln340_4_fu_1087_p2(0) = '1') else 
        select_ln388_4_fu_1522_p3;
    y_V_5_fu_1564_p3 <= 
        select_ln340_10_fu_1548_p3 when (or_ln340_5_fu_1142_p2(0) = '1') else 
        select_ln388_5_fu_1556_p3;
    y_V_6_fu_1598_p3 <= 
        select_ln340_12_fu_1582_p3 when (or_ln340_6_fu_1197_p2(0) = '1') else 
        select_ln388_6_fu_1590_p3;
    y_V_7_fu_1632_p3 <= 
        select_ln340_14_fu_1616_p3 when (or_ln340_7_fu_1252_p2(0) = '1') else 
        select_ln388_7_fu_1624_p3;
    y_V_8_fu_1666_p3 <= 
        select_ln340_16_fu_1650_p3 when (or_ln340_8_fu_1307_p2(0) = '1') else 
        select_ln388_8_fu_1658_p3;
    y_V_9_fu_1700_p3 <= 
        select_ln340_18_fu_1684_p3 when (or_ln340_9_fu_1362_p2(0) = '1') else 
        select_ln388_9_fu_1692_p3;
    y_V_fu_1394_p3 <= 
        select_ln340_fu_1378_p3 when (or_ln340_fu_867_p2(0) = '1') else 
        select_ln388_fu_1386_p3;
    zext_ln236_1_fu_1712_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_1_reg_2072),64));
    zext_ln236_2_fu_1716_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_2_reg_2077),64));
    zext_ln236_3_fu_1720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_3_reg_2082),64));
    zext_ln236_4_fu_1728_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_4_reg_2087_pp0_iter4_reg),64));
    zext_ln236_5_fu_1732_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_5_reg_2092_pp0_iter4_reg),64));
    zext_ln236_6_fu_1736_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_6_reg_2097_pp0_iter4_reg),64));
    zext_ln236_7_fu_1724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_7_reg_2102),64));
    zext_ln236_8_fu_1740_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_8_reg_2107_pp0_iter4_reg),64));
    zext_ln236_9_fu_1744_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_9_reg_2112_pp0_iter4_reg),64));
    zext_ln236_fu_1708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_reg_2067),64));
    zext_ln244_fu_1801_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_10_reg_2232),64));
end behav;
