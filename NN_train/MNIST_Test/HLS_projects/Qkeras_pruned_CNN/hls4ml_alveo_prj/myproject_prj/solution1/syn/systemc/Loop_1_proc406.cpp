// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_1_proc406.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_1_proc406::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_1_proc406::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> Loop_1_proc406::ap_ST_fsm_state1 = "1";
const sc_lv<5> Loop_1_proc406::ap_ST_fsm_state2 = "10";
const sc_lv<5> Loop_1_proc406::ap_ST_fsm_state3 = "100";
const sc_lv<5> Loop_1_proc406::ap_ST_fsm_state4 = "1000";
const sc_lv<5> Loop_1_proc406::ap_ST_fsm_state5 = "10000";
const sc_lv<32> Loop_1_proc406::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Loop_1_proc406::ap_const_lv32_4 = "100";
const sc_lv<32> Loop_1_proc406::ap_const_lv32_1 = "1";
const sc_lv<1> Loop_1_proc406::ap_const_lv1_0 = "0";
const sc_lv<32> Loop_1_proc406::ap_const_lv32_2 = "10";
const sc_lv<32> Loop_1_proc406::ap_const_lv32_3 = "11";
const sc_lv<10> Loop_1_proc406::ap_const_lv10_0 = "0000000000";
const sc_lv<10> Loop_1_proc406::ap_const_lv10_310 = "1100010000";
const sc_lv<10> Loop_1_proc406::ap_const_lv10_1 = "1";
const sc_lv<32> Loop_1_proc406::ap_const_lv32_3F = "111111";
const sc_lv<32> Loop_1_proc406::ap_const_lv32_34 = "110100";
const sc_lv<32> Loop_1_proc406::ap_const_lv32_3E = "111110";
const sc_lv<63> Loop_1_proc406::ap_const_lv63_0 = "000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<12> Loop_1_proc406::ap_const_lv12_433 = "10000110011";
const sc_lv<1> Loop_1_proc406::ap_const_lv1_1 = "1";
const sc_lv<54> Loop_1_proc406::ap_const_lv54_0 = "000000000000000000000000000000000000000000000000000000";
const sc_lv<12> Loop_1_proc406::ap_const_lv12_5 = "101";
const sc_lv<12> Loop_1_proc406::ap_const_lv12_FFB = "111111111011";
const sc_lv<12> Loop_1_proc406::ap_const_lv12_36 = "110110";
const sc_lv<32> Loop_1_proc406::ap_const_lv32_B = "1011";
const sc_lv<9> Loop_1_proc406::ap_const_lv9_0 = "000000000";
const sc_lv<32> Loop_1_proc406::ap_const_lv32_1F = "11111";
const sc_lv<8> Loop_1_proc406::ap_const_lv8_FF = "11111111";
const sc_lv<8> Loop_1_proc406::ap_const_lv8_0 = "00000000";
const bool Loop_1_proc406::ap_const_boolean_1 = true;

Loop_1_proc406::Loop_1_proc406(sc_module_name name) : sc_module(name), mVcdFile(0) {
    myproject_axi_fpext_32ns_64_2_1_U1 = new myproject_axi_fpext_32ns_64_2_1<1,2,32,64>("myproject_axi_fpext_32ns_64_2_1_U1");
    myproject_axi_fpext_32ns_64_2_1_U1->clk(ap_clk);
    myproject_axi_fpext_32ns_64_2_1_U1->reset(ap_rst);
    myproject_axi_fpext_32ns_64_2_1_U1->din0(in_r_TDATA_int);
    myproject_axi_fpext_32ns_64_2_1_U1->ce(grp_fu_121_ce);
    myproject_axi_fpext_32ns_64_2_1_U1->dout(grp_fu_121_p1);
    regslice_both_in_last_V_U = new regslice_both<1>("regslice_both_in_last_V_U");
    regslice_both_in_last_V_U->ap_clk(ap_clk);
    regslice_both_in_last_V_U->ap_rst(ap_rst);
    regslice_both_in_last_V_U->data_in(in_r_TLAST);
    regslice_both_in_last_V_U->vld_in(in_r_TVALID);
    regslice_both_in_last_V_U->ack_in(regslice_both_in_last_V_U_ack_in);
    regslice_both_in_last_V_U->data_out(in_r_TLAST_int);
    regslice_both_in_last_V_U->vld_out(in_r_TVALID_int);
    regslice_both_in_last_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_last_V_U->apdone_blk(regslice_both_in_last_V_U_apdone_blk);
    regslice_both_in_data_U = new regslice_both<32>("regslice_both_in_data_U");
    regslice_both_in_data_U->ap_clk(ap_clk);
    regslice_both_in_data_U->ap_rst(ap_rst);
    regslice_both_in_data_U->data_in(in_r_TDATA);
    regslice_both_in_data_U->vld_in(in_r_TVALID);
    regslice_both_in_data_U->ack_in(regslice_both_in_data_U_ack_in);
    regslice_both_in_data_U->data_out(in_r_TDATA_int);
    regslice_both_in_data_U->vld_out(regslice_both_in_data_U_vld_out);
    regslice_both_in_data_U->ack_out(in_r_TREADY_int);
    regslice_both_in_data_U->apdone_blk(regslice_both_in_data_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln581_fu_226_p2);
    sensitive << ( sub_ln575_reg_471 );

    SC_METHOD(thread_and_ln581_fu_344_p2);
    sensitive << ( icmp_ln581_fu_221_p2 );
    sensitive << ( xor_ln582_fu_338_p2 );

    SC_METHOD(thread_and_ln582_fu_327_p2);
    sensitive << ( icmp_ln582_fu_252_p2 );
    sensitive << ( xor_ln571_fu_322_p2 );

    SC_METHOD(thread_and_ln585_1_fu_362_p2);
    sensitive << ( icmp_ln585_fu_261_p2 );
    sensitive << ( and_ln581_fu_344_p2 );

    SC_METHOD(thread_and_ln585_fu_356_p2);
    sensitive << ( and_ln581_fu_344_p2 );
    sensitive << ( xor_ln585_fu_350_p2 );

    SC_METHOD(thread_and_ln603_fu_380_p2);
    sensitive << ( icmp_ln603_fu_277_p2 );
    sensitive << ( xor_ln581_fu_374_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( icmp_ln23_fu_124_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_124_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_124_p2 );
    sensitive << ( is_last_0_i_out_0_reg_99 );
    sensitive << ( ap_return_preg );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_ashr_ln586_fu_287_p2);
    sensitive << ( select_ln570_fu_214_p3 );
    sensitive << ( zext_ln586_fu_283_p1 );

    SC_METHOD(thread_bitcast_ln696_1_fu_297_p1);
    sensitive << ( in_data_tmp_reg_444 );

    SC_METHOD(thread_bitcast_ln696_fu_151_p1);
    sensitive << ( grp_fu_121_p1 );

    SC_METHOD(thread_grp_fu_121_ce);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_124_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_i_fu_130_p2);
    sensitive << ( i_0_i_reg_110 );

    SC_METHOD(thread_icmp_ln23_fu_124_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_124_p2 );
    sensitive << ( i_0_i_reg_110 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_icmp_ln571_fu_185_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( trunc_ln557_fu_155_p1 );

    SC_METHOD(thread_icmp_ln581_fu_221_p2);
    sensitive << ( sub_ln575_reg_471 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_icmp_ln582_fu_252_p2);
    sensitive << ( sub_ln575_reg_471 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_icmp_ln585_fu_261_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( select_ln581_fu_236_p3 );

    SC_METHOD(thread_icmp_ln603_fu_277_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_2012_fu_267_p4 );

    SC_METHOD(thread_in_local_V_data_0_V_blk_n);
    sensitive << ( in_local_V_data_0_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_in_local_V_data_0_V_din);
    sensitive << ( in_local_V_data_0_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_data_0_V_reg_479 );

    SC_METHOD(thread_in_local_V_data_0_V_write);
    sensitive << ( in_local_V_data_0_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_in_r_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_124_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_in_r_TREADY);
    sensitive << ( in_r_TVALID );
    sensitive << ( regslice_both_in_last_V_U_ack_in );

    SC_METHOD(thread_in_r_TREADY_int);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_124_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_124_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_or_ln28_fu_145_p2);
    sensitive << ( is_last_0_i_out_0_reg_99 );
    sensitive << ( in_r_TLAST_int );

    SC_METHOD(thread_or_ln581_fu_368_p2);
    sensitive << ( icmp_ln581_fu_221_p2 );
    sensitive << ( or_ln582_fu_333_p2 );

    SC_METHOD(thread_or_ln582_fu_333_p2);
    sensitive << ( icmp_ln571_reg_465 );
    sensitive << ( icmp_ln582_fu_252_p2 );

    SC_METHOD(thread_or_ln603_1_fu_408_p2);
    sensitive << ( and_ln585_fu_356_p2 );
    sensitive << ( and_ln582_fu_327_p2 );

    SC_METHOD(thread_or_ln603_2_fu_422_p2);
    sensitive << ( or_ln603_fu_394_p2 );
    sensitive << ( or_ln603_1_fu_408_p2 );

    SC_METHOD(thread_or_ln603_fu_394_p2);
    sensitive << ( and_ln603_fu_380_p2 );
    sensitive << ( and_ln585_1_fu_362_p2 );

    SC_METHOD(thread_p_Result_i_fu_167_p4);
    sensitive << ( bitcast_ln696_fu_151_p1 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_select_ln570_fu_214_p3);
    sensitive << ( tmp_2011_reg_455 );
    sensitive << ( zext_ln569_fu_204_p1 );
    sensitive << ( sub_ln461_fu_208_p2 );

    SC_METHOD(thread_select_ln581_fu_236_p3);
    sensitive << ( icmp_ln581_fu_221_p2 );
    sensitive << ( add_ln581_fu_226_p2 );
    sensitive << ( sub_ln581_fu_231_p2 );

    SC_METHOD(thread_select_ln588_fu_308_p3);
    sensitive << ( tmp_2013_fu_300_p3 );

    SC_METHOD(thread_select_ln603_1_fu_400_p3);
    sensitive << ( trunc_ln583_fu_257_p1 );
    sensitive << ( and_ln585_fu_356_p2 );
    sensitive << ( select_ln588_fu_308_p3 );

    SC_METHOD(thread_select_ln603_2_fu_414_p3);
    sensitive << ( or_ln603_fu_394_p2 );
    sensitive << ( select_ln603_fu_386_p3 );
    sensitive << ( select_ln603_1_fu_400_p3 );

    SC_METHOD(thread_select_ln603_fu_386_p3);
    sensitive << ( and_ln603_fu_380_p2 );
    sensitive << ( shl_ln604_fu_316_p2 );
    sensitive << ( trunc_ln586_fu_293_p1 );

    SC_METHOD(thread_sext_ln581_fu_244_p1);
    sensitive << ( select_ln581_fu_236_p3 );

    SC_METHOD(thread_shl_ln604_fu_316_p2);
    sensitive << ( trunc_ln583_fu_257_p1 );
    sensitive << ( trunc_ln581_fu_248_p1 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_sub_ln461_fu_208_p2);
    sensitive << ( zext_ln569_fu_204_p1 );

    SC_METHOD(thread_sub_ln575_fu_191_p2);
    sensitive << ( zext_ln461_fu_177_p1 );

    SC_METHOD(thread_sub_ln581_fu_231_p2);
    sensitive << ( sub_ln575_reg_471 );

    SC_METHOD(thread_tmp_2012_fu_267_p4);
    sensitive << ( select_ln581_fu_236_p3 );

    SC_METHOD(thread_tmp_2013_fu_300_p3);
    sensitive << ( bitcast_ln696_1_fu_297_p1 );

    SC_METHOD(thread_tmp_data_0_V_fu_428_p3);
    sensitive << ( or_ln603_2_fu_422_p2 );
    sensitive << ( select_ln603_2_fu_414_p3 );

    SC_METHOD(thread_tmp_fu_197_p3);
    sensitive << ( trunc_ln565_reg_460 );

    SC_METHOD(thread_trunc_ln557_fu_155_p1);
    sensitive << ( bitcast_ln696_fu_151_p1 );

    SC_METHOD(thread_trunc_ln565_fu_181_p1);
    sensitive << ( bitcast_ln696_fu_151_p1 );

    SC_METHOD(thread_trunc_ln581_fu_248_p1);
    sensitive << ( select_ln581_fu_236_p3 );

    SC_METHOD(thread_trunc_ln583_fu_257_p1);
    sensitive << ( select_ln570_fu_214_p3 );

    SC_METHOD(thread_trunc_ln586_fu_293_p1);
    sensitive << ( ashr_ln586_fu_287_p2 );

    SC_METHOD(thread_xor_ln571_fu_322_p2);
    sensitive << ( icmp_ln571_reg_465 );

    SC_METHOD(thread_xor_ln581_fu_374_p2);
    sensitive << ( or_ln581_fu_368_p2 );

    SC_METHOD(thread_xor_ln582_fu_338_p2);
    sensitive << ( or_ln582_fu_333_p2 );

    SC_METHOD(thread_xor_ln585_fu_350_p2);
    sensitive << ( icmp_ln585_fu_261_p2 );

    SC_METHOD(thread_zext_ln461_fu_177_p1);
    sensitive << ( p_Result_i_fu_167_p4 );

    SC_METHOD(thread_zext_ln569_fu_204_p1);
    sensitive << ( tmp_fu_197_p3 );

    SC_METHOD(thread_zext_ln586_fu_283_p1);
    sensitive << ( sext_ln581_fu_244_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_local_V_data_0_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_124_p2 );
    sensitive << ( in_r_TVALID_int );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00001";
    ap_return_preg = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_1_proc406_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, in_r_TLAST, "(port)in_r_TLAST");
    sc_trace(mVcdFile, in_r_TVALID, "(port)in_r_TVALID");
    sc_trace(mVcdFile, in_r_TREADY, "(port)in_r_TREADY");
    sc_trace(mVcdFile, in_local_V_data_0_V_din, "(port)in_local_V_data_0_V_din");
    sc_trace(mVcdFile, in_local_V_data_0_V_full_n, "(port)in_local_V_data_0_V_full_n");
    sc_trace(mVcdFile, in_local_V_data_0_V_write, "(port)in_local_V_data_0_V_write");
    sc_trace(mVcdFile, in_r_TDATA, "(port)in_r_TDATA");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, in_local_V_data_0_V_blk_n, "in_local_V_data_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, in_r_TDATA_blk_n, "in_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln23_fu_124_p2, "icmp_ln23_fu_124_p2");
    sc_trace(mVcdFile, i_fu_130_p2, "i_fu_130_p2");
    sc_trace(mVcdFile, i_reg_439, "i_reg_439");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, in_data_tmp_reg_444, "in_data_tmp_reg_444");
    sc_trace(mVcdFile, or_ln28_fu_145_p2, "or_ln28_fu_145_p2");
    sc_trace(mVcdFile, or_ln28_reg_450, "or_ln28_reg_450");
    sc_trace(mVcdFile, tmp_2011_reg_455, "tmp_2011_reg_455");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, trunc_ln565_fu_181_p1, "trunc_ln565_fu_181_p1");
    sc_trace(mVcdFile, trunc_ln565_reg_460, "trunc_ln565_reg_460");
    sc_trace(mVcdFile, icmp_ln571_fu_185_p2, "icmp_ln571_fu_185_p2");
    sc_trace(mVcdFile, icmp_ln571_reg_465, "icmp_ln571_reg_465");
    sc_trace(mVcdFile, sub_ln575_fu_191_p2, "sub_ln575_fu_191_p2");
    sc_trace(mVcdFile, sub_ln575_reg_471, "sub_ln575_reg_471");
    sc_trace(mVcdFile, tmp_data_0_V_fu_428_p3, "tmp_data_0_V_fu_428_p3");
    sc_trace(mVcdFile, tmp_data_0_V_reg_479, "tmp_data_0_V_reg_479");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, is_last_0_i_out_0_reg_99, "is_last_0_i_out_0_reg_99");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, i_0_i_reg_110, "i_0_i_reg_110");
    sc_trace(mVcdFile, grp_fu_121_p1, "grp_fu_121_p1");
    sc_trace(mVcdFile, bitcast_ln696_fu_151_p1, "bitcast_ln696_fu_151_p1");
    sc_trace(mVcdFile, p_Result_i_fu_167_p4, "p_Result_i_fu_167_p4");
    sc_trace(mVcdFile, trunc_ln557_fu_155_p1, "trunc_ln557_fu_155_p1");
    sc_trace(mVcdFile, zext_ln461_fu_177_p1, "zext_ln461_fu_177_p1");
    sc_trace(mVcdFile, tmp_fu_197_p3, "tmp_fu_197_p3");
    sc_trace(mVcdFile, zext_ln569_fu_204_p1, "zext_ln569_fu_204_p1");
    sc_trace(mVcdFile, sub_ln461_fu_208_p2, "sub_ln461_fu_208_p2");
    sc_trace(mVcdFile, icmp_ln581_fu_221_p2, "icmp_ln581_fu_221_p2");
    sc_trace(mVcdFile, add_ln581_fu_226_p2, "add_ln581_fu_226_p2");
    sc_trace(mVcdFile, sub_ln581_fu_231_p2, "sub_ln581_fu_231_p2");
    sc_trace(mVcdFile, select_ln581_fu_236_p3, "select_ln581_fu_236_p3");
    sc_trace(mVcdFile, select_ln570_fu_214_p3, "select_ln570_fu_214_p3");
    sc_trace(mVcdFile, tmp_2012_fu_267_p4, "tmp_2012_fu_267_p4");
    sc_trace(mVcdFile, sext_ln581_fu_244_p1, "sext_ln581_fu_244_p1");
    sc_trace(mVcdFile, zext_ln586_fu_283_p1, "zext_ln586_fu_283_p1");
    sc_trace(mVcdFile, ashr_ln586_fu_287_p2, "ashr_ln586_fu_287_p2");
    sc_trace(mVcdFile, bitcast_ln696_1_fu_297_p1, "bitcast_ln696_1_fu_297_p1");
    sc_trace(mVcdFile, tmp_2013_fu_300_p3, "tmp_2013_fu_300_p3");
    sc_trace(mVcdFile, trunc_ln583_fu_257_p1, "trunc_ln583_fu_257_p1");
    sc_trace(mVcdFile, trunc_ln581_fu_248_p1, "trunc_ln581_fu_248_p1");
    sc_trace(mVcdFile, icmp_ln582_fu_252_p2, "icmp_ln582_fu_252_p2");
    sc_trace(mVcdFile, xor_ln571_fu_322_p2, "xor_ln571_fu_322_p2");
    sc_trace(mVcdFile, or_ln582_fu_333_p2, "or_ln582_fu_333_p2");
    sc_trace(mVcdFile, xor_ln582_fu_338_p2, "xor_ln582_fu_338_p2");
    sc_trace(mVcdFile, icmp_ln585_fu_261_p2, "icmp_ln585_fu_261_p2");
    sc_trace(mVcdFile, and_ln581_fu_344_p2, "and_ln581_fu_344_p2");
    sc_trace(mVcdFile, xor_ln585_fu_350_p2, "xor_ln585_fu_350_p2");
    sc_trace(mVcdFile, or_ln581_fu_368_p2, "or_ln581_fu_368_p2");
    sc_trace(mVcdFile, icmp_ln603_fu_277_p2, "icmp_ln603_fu_277_p2");
    sc_trace(mVcdFile, xor_ln581_fu_374_p2, "xor_ln581_fu_374_p2");
    sc_trace(mVcdFile, and_ln603_fu_380_p2, "and_ln603_fu_380_p2");
    sc_trace(mVcdFile, shl_ln604_fu_316_p2, "shl_ln604_fu_316_p2");
    sc_trace(mVcdFile, trunc_ln586_fu_293_p1, "trunc_ln586_fu_293_p1");
    sc_trace(mVcdFile, and_ln585_1_fu_362_p2, "and_ln585_1_fu_362_p2");
    sc_trace(mVcdFile, and_ln585_fu_356_p2, "and_ln585_fu_356_p2");
    sc_trace(mVcdFile, select_ln588_fu_308_p3, "select_ln588_fu_308_p3");
    sc_trace(mVcdFile, and_ln582_fu_327_p2, "and_ln582_fu_327_p2");
    sc_trace(mVcdFile, or_ln603_fu_394_p2, "or_ln603_fu_394_p2");
    sc_trace(mVcdFile, select_ln603_fu_386_p3, "select_ln603_fu_386_p3");
    sc_trace(mVcdFile, select_ln603_1_fu_400_p3, "select_ln603_1_fu_400_p3");
    sc_trace(mVcdFile, or_ln603_1_fu_408_p2, "or_ln603_1_fu_408_p2");
    sc_trace(mVcdFile, or_ln603_2_fu_422_p2, "or_ln603_2_fu_422_p2");
    sc_trace(mVcdFile, select_ln603_2_fu_414_p3, "select_ln603_2_fu_414_p3");
    sc_trace(mVcdFile, grp_fu_121_ce, "grp_fu_121_ce");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, regslice_both_in_last_V_U_apdone_blk, "regslice_both_in_last_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TLAST_int, "in_r_TLAST_int");
    sc_trace(mVcdFile, in_r_TVALID_int, "in_r_TVALID_int");
    sc_trace(mVcdFile, in_r_TREADY_int, "in_r_TREADY_int");
    sc_trace(mVcdFile, regslice_both_in_last_V_U_ack_in, "regslice_both_in_last_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_data_U_apdone_blk, "regslice_both_in_data_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TDATA_int, "in_r_TDATA_int");
    sc_trace(mVcdFile, regslice_both_in_data_U_vld_out, "regslice_both_in_data_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_data_U_ack_in, "regslice_both_in_data_U_ack_in");
#endif

    }
}

Loop_1_proc406::~Loop_1_proc406() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete myproject_axi_fpext_32ns_64_2_1_U1;
    delete regslice_both_in_last_V_U;
    delete regslice_both_in_data_U;
}

void Loop_1_proc406::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_1) && 
                    !(esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
             esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_1) && 
             !(esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
            ap_return_preg = is_last_0_i_out_0_reg_99.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(in_local_V_data_0_V_full_n.read(), ap_const_logic_1))) {
        i_0_i_reg_110 = i_reg_439.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_0_i_reg_110 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(in_local_V_data_0_V_full_n.read(), ap_const_logic_1))) {
        is_last_0_i_out_0_reg_99 = or_ln28_reg_450.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        is_last_0_i_out_0_reg_99 = ap_const_lv1_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        i_reg_439 = i_fu_130_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        icmp_ln571_reg_465 = icmp_ln571_fu_185_p2.read();
        sub_ln575_reg_471 = sub_ln575_fu_191_p2.read();
        tmp_2011_reg_455 = bitcast_ln696_fu_151_p1.read().range(63, 63);
        trunc_ln565_reg_460 = trunc_ln565_fu_181_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        in_data_tmp_reg_444 = in_r_TDATA_int.read();
        or_ln28_reg_450 = or_ln28_fu_145_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_data_0_V_reg_479 = tmp_data_0_V_fu_428_p3.read();
    }
}

void Loop_1_proc406::thread_add_ln581_fu_226_p2() {
    add_ln581_fu_226_p2 = (!ap_const_lv12_FFB.is_01() || !sub_ln575_reg_471.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_FFB) + sc_biguint<12>(sub_ln575_reg_471.read()));
}

void Loop_1_proc406::thread_and_ln581_fu_344_p2() {
    and_ln581_fu_344_p2 = (icmp_ln581_fu_221_p2.read() & xor_ln582_fu_338_p2.read());
}

void Loop_1_proc406::thread_and_ln582_fu_327_p2() {
    and_ln582_fu_327_p2 = (icmp_ln582_fu_252_p2.read() & xor_ln571_fu_322_p2.read());
}

void Loop_1_proc406::thread_and_ln585_1_fu_362_p2() {
    and_ln585_1_fu_362_p2 = (and_ln581_fu_344_p2.read() & icmp_ln585_fu_261_p2.read());
}

void Loop_1_proc406::thread_and_ln585_fu_356_p2() {
    and_ln585_fu_356_p2 = (and_ln581_fu_344_p2.read() & xor_ln585_fu_350_p2.read());
}

void Loop_1_proc406::thread_and_ln603_fu_380_p2() {
    and_ln603_fu_380_p2 = (icmp_ln603_fu_277_p2.read() & xor_ln581_fu_374_p2.read());
}

void Loop_1_proc406::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_1_proc406::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Loop_1_proc406::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Loop_1_proc406::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Loop_1_proc406::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Loop_1_proc406::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Loop_1_proc406::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read()));
}

void Loop_1_proc406::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_1_proc406::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_1_proc406::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void Loop_1_proc406::thread_ap_return() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        ap_return = is_last_0_i_out_0_reg_99.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void Loop_1_proc406::thread_ashr_ln586_fu_287_p2() {
    ashr_ln586_fu_287_p2 = (!select_ln570_fu_214_p3.read().is_01() || !zext_ln586_fu_283_p1.read().is_01())? sc_lv<54>(): sc_bigint<54>(select_ln570_fu_214_p3.read()) >> (unsigned short)zext_ln586_fu_283_p1.read().to_uint();
}

void Loop_1_proc406::thread_bitcast_ln696_1_fu_297_p1() {
    bitcast_ln696_1_fu_297_p1 = in_data_tmp_reg_444.read();
}

void Loop_1_proc406::thread_bitcast_ln696_fu_151_p1() {
    bitcast_ln696_fu_151_p1 = grp_fu_121_p1.read();
}

void Loop_1_proc406::thread_grp_fu_121_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read()))))) {
        grp_fu_121_ce = ap_const_logic_1;
    } else {
        grp_fu_121_ce = ap_const_logic_0;
    }
}

void Loop_1_proc406::thread_i_fu_130_p2() {
    i_fu_130_p2 = (!i_0_i_reg_110.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_0_i_reg_110.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void Loop_1_proc406::thread_icmp_ln23_fu_124_p2() {
    icmp_ln23_fu_124_p2 = (!i_0_i_reg_110.read().is_01() || !ap_const_lv10_310.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_110.read() == ap_const_lv10_310);
}

void Loop_1_proc406::thread_icmp_ln571_fu_185_p2() {
    icmp_ln571_fu_185_p2 = (!trunc_ln557_fu_155_p1.read().is_01() || !ap_const_lv63_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln557_fu_155_p1.read() == ap_const_lv63_0);
}

void Loop_1_proc406::thread_icmp_ln581_fu_221_p2() {
    icmp_ln581_fu_221_p2 = (!sub_ln575_reg_471.read().is_01() || !ap_const_lv12_5.is_01())? sc_lv<1>(): (sc_bigint<12>(sub_ln575_reg_471.read()) > sc_bigint<12>(ap_const_lv12_5));
}

void Loop_1_proc406::thread_icmp_ln582_fu_252_p2() {
    icmp_ln582_fu_252_p2 = (!sub_ln575_reg_471.read().is_01() || !ap_const_lv12_5.is_01())? sc_lv<1>(): sc_lv<1>(sub_ln575_reg_471.read() == ap_const_lv12_5);
}

void Loop_1_proc406::thread_icmp_ln585_fu_261_p2() {
    icmp_ln585_fu_261_p2 = (!select_ln581_fu_236_p3.read().is_01() || !ap_const_lv12_36.is_01())? sc_lv<1>(): (sc_biguint<12>(select_ln581_fu_236_p3.read()) < sc_biguint<12>(ap_const_lv12_36));
}

void Loop_1_proc406::thread_icmp_ln603_fu_277_p2() {
    icmp_ln603_fu_277_p2 = (!tmp_2012_fu_267_p4.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2012_fu_267_p4.read() == ap_const_lv9_0);
}

void Loop_1_proc406::thread_in_local_V_data_0_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        in_local_V_data_0_V_blk_n = in_local_V_data_0_V_full_n.read();
    } else {
        in_local_V_data_0_V_blk_n = ap_const_logic_1;
    }
}

void Loop_1_proc406::thread_in_local_V_data_0_V_din() {
    in_local_V_data_0_V_din = tmp_data_0_V_reg_479.read();
}

void Loop_1_proc406::thread_in_local_V_data_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(in_local_V_data_0_V_full_n.read(), ap_const_logic_1))) {
        in_local_V_data_0_V_write = ap_const_logic_1;
    } else {
        in_local_V_data_0_V_write = ap_const_logic_0;
    }
}

void Loop_1_proc406::thread_in_r_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_0))) {
        in_r_TDATA_blk_n = in_r_TVALID_int.read();
    } else {
        in_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void Loop_1_proc406::thread_in_r_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, in_r_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_in_last_V_U_ack_in.read()))) {
        in_r_TREADY = ap_const_logic_1;
    } else {
        in_r_TREADY = ap_const_logic_0;
    }
}

void Loop_1_proc406::thread_in_r_TREADY_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        in_r_TREADY_int = ap_const_logic_1;
    } else {
        in_r_TREADY_int = ap_const_logic_0;
    }
}

void Loop_1_proc406::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void Loop_1_proc406::thread_or_ln28_fu_145_p2() {
    or_ln28_fu_145_p2 = (in_r_TLAST_int.read() | is_last_0_i_out_0_reg_99.read());
}

void Loop_1_proc406::thread_or_ln581_fu_368_p2() {
    or_ln581_fu_368_p2 = (or_ln582_fu_333_p2.read() | icmp_ln581_fu_221_p2.read());
}

void Loop_1_proc406::thread_or_ln582_fu_333_p2() {
    or_ln582_fu_333_p2 = (icmp_ln571_reg_465.read() | icmp_ln582_fu_252_p2.read());
}

void Loop_1_proc406::thread_or_ln603_1_fu_408_p2() {
    or_ln603_1_fu_408_p2 = (and_ln585_fu_356_p2.read() | and_ln582_fu_327_p2.read());
}

void Loop_1_proc406::thread_or_ln603_2_fu_422_p2() {
    or_ln603_2_fu_422_p2 = (or_ln603_fu_394_p2.read() | or_ln603_1_fu_408_p2.read());
}

void Loop_1_proc406::thread_or_ln603_fu_394_p2() {
    or_ln603_fu_394_p2 = (and_ln603_fu_380_p2.read() | and_ln585_1_fu_362_p2.read());
}

void Loop_1_proc406::thread_p_Result_i_fu_167_p4() {
    p_Result_i_fu_167_p4 = bitcast_ln696_fu_151_p1.read().range(62, 52);
}

void Loop_1_proc406::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void Loop_1_proc406::thread_select_ln570_fu_214_p3() {
    select_ln570_fu_214_p3 = (!tmp_2011_reg_455.read()[0].is_01())? sc_lv<54>(): ((tmp_2011_reg_455.read()[0].to_bool())? sub_ln461_fu_208_p2.read(): zext_ln569_fu_204_p1.read());
}

void Loop_1_proc406::thread_select_ln581_fu_236_p3() {
    select_ln581_fu_236_p3 = (!icmp_ln581_fu_221_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln581_fu_221_p2.read()[0].to_bool())? add_ln581_fu_226_p2.read(): sub_ln581_fu_231_p2.read());
}

void Loop_1_proc406::thread_select_ln588_fu_308_p3() {
    select_ln588_fu_308_p3 = (!tmp_2013_fu_300_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_2013_fu_300_p3.read()[0].to_bool())? ap_const_lv8_FF: ap_const_lv8_0);
}

void Loop_1_proc406::thread_select_ln603_1_fu_400_p3() {
    select_ln603_1_fu_400_p3 = (!and_ln585_fu_356_p2.read()[0].is_01())? sc_lv<8>(): ((and_ln585_fu_356_p2.read()[0].to_bool())? select_ln588_fu_308_p3.read(): trunc_ln583_fu_257_p1.read());
}

void Loop_1_proc406::thread_select_ln603_2_fu_414_p3() {
    select_ln603_2_fu_414_p3 = (!or_ln603_fu_394_p2.read()[0].is_01())? sc_lv<8>(): ((or_ln603_fu_394_p2.read()[0].to_bool())? select_ln603_fu_386_p3.read(): select_ln603_1_fu_400_p3.read());
}

void Loop_1_proc406::thread_select_ln603_fu_386_p3() {
    select_ln603_fu_386_p3 = (!and_ln603_fu_380_p2.read()[0].is_01())? sc_lv<8>(): ((and_ln603_fu_380_p2.read()[0].to_bool())? shl_ln604_fu_316_p2.read(): trunc_ln586_fu_293_p1.read());
}

void Loop_1_proc406::thread_sext_ln581_fu_244_p1() {
    sext_ln581_fu_244_p1 = esl_sext<32,12>(select_ln581_fu_236_p3.read());
}

void Loop_1_proc406::thread_shl_ln604_fu_316_p2() {
    shl_ln604_fu_316_p2 = (!trunc_ln581_fu_248_p1.read().is_01())? sc_lv<8>(): trunc_ln583_fu_257_p1.read() << (unsigned short)trunc_ln581_fu_248_p1.read().to_uint();
}

void Loop_1_proc406::thread_start_out() {
    start_out = real_start.read();
}

void Loop_1_proc406::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void Loop_1_proc406::thread_sub_ln461_fu_208_p2() {
    sub_ln461_fu_208_p2 = (!ap_const_lv54_0.is_01() || !zext_ln569_fu_204_p1.read().is_01())? sc_lv<54>(): (sc_biguint<54>(ap_const_lv54_0) - sc_biguint<54>(zext_ln569_fu_204_p1.read()));
}

void Loop_1_proc406::thread_sub_ln575_fu_191_p2() {
    sub_ln575_fu_191_p2 = (!ap_const_lv12_433.is_01() || !zext_ln461_fu_177_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_433) - sc_biguint<12>(zext_ln461_fu_177_p1.read()));
}

void Loop_1_proc406::thread_sub_ln581_fu_231_p2() {
    sub_ln581_fu_231_p2 = (!ap_const_lv12_5.is_01() || !sub_ln575_reg_471.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_5) - sc_biguint<12>(sub_ln575_reg_471.read()));
}

void Loop_1_proc406::thread_tmp_2012_fu_267_p4() {
    tmp_2012_fu_267_p4 = select_ln581_fu_236_p3.read().range(11, 3);
}

void Loop_1_proc406::thread_tmp_2013_fu_300_p3() {
    tmp_2013_fu_300_p3 = bitcast_ln696_1_fu_297_p1.read().range(31, 31);
}

void Loop_1_proc406::thread_tmp_data_0_V_fu_428_p3() {
    tmp_data_0_V_fu_428_p3 = (!or_ln603_2_fu_422_p2.read()[0].is_01())? sc_lv<8>(): ((or_ln603_2_fu_422_p2.read()[0].to_bool())? select_ln603_2_fu_414_p3.read(): ap_const_lv8_0);
}

void Loop_1_proc406::thread_tmp_fu_197_p3() {
    tmp_fu_197_p3 = esl_concat<1,52>(ap_const_lv1_1, trunc_ln565_reg_460.read());
}

void Loop_1_proc406::thread_trunc_ln557_fu_155_p1() {
    trunc_ln557_fu_155_p1 = bitcast_ln696_fu_151_p1.read().range(63-1, 0);
}

void Loop_1_proc406::thread_trunc_ln565_fu_181_p1() {
    trunc_ln565_fu_181_p1 = bitcast_ln696_fu_151_p1.read().range(52-1, 0);
}

void Loop_1_proc406::thread_trunc_ln581_fu_248_p1() {
    trunc_ln581_fu_248_p1 = select_ln581_fu_236_p3.read().range(8-1, 0);
}

void Loop_1_proc406::thread_trunc_ln583_fu_257_p1() {
    trunc_ln583_fu_257_p1 = select_ln570_fu_214_p3.read().range(8-1, 0);
}

void Loop_1_proc406::thread_trunc_ln586_fu_293_p1() {
    trunc_ln586_fu_293_p1 = ashr_ln586_fu_287_p2.read().range(8-1, 0);
}

void Loop_1_proc406::thread_xor_ln571_fu_322_p2() {
    xor_ln571_fu_322_p2 = (icmp_ln571_reg_465.read() ^ ap_const_lv1_1);
}

void Loop_1_proc406::thread_xor_ln581_fu_374_p2() {
    xor_ln581_fu_374_p2 = (or_ln581_fu_368_p2.read() ^ ap_const_lv1_1);
}

void Loop_1_proc406::thread_xor_ln582_fu_338_p2() {
    xor_ln582_fu_338_p2 = (or_ln582_fu_333_p2.read() ^ ap_const_lv1_1);
}

void Loop_1_proc406::thread_xor_ln585_fu_350_p2() {
    xor_ln585_fu_350_p2 = (icmp_ln585_fu_261_p2.read() ^ ap_const_lv1_1);
}

void Loop_1_proc406::thread_zext_ln461_fu_177_p1() {
    zext_ln461_fu_177_p1 = esl_zext<12,11>(p_Result_i_fu_167_p4.read());
}

void Loop_1_proc406::thread_zext_ln569_fu_204_p1() {
    zext_ln569_fu_204_p1 = esl_zext<54,53>(tmp_fu_197_p3.read());
}

void Loop_1_proc406::thread_zext_ln586_fu_283_p1() {
    zext_ln586_fu_283_p1 = esl_zext<54,32>(sext_ln581_fu_244_p1.read());
}

void Loop_1_proc406::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln23_fu_124_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(in_local_V_data_0_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}

